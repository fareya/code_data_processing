{"callee_method_names":["EcodDatabase.getVersion","Matcher.matches","Matcher.group","List<Integer>.contains","List<String>.add"],"method_name":"EcodInstallationTest.getKnownEcodVersions","method_implementation":"{\n    // Parse version from latest.\n    int latestVersion = DEVELOP_LATEST_VERSION;\n    try {\n        EcodDatabase latest = EcodFactory.getEcodDatabase(EcodFactory.DEFAULT_VERSION);\n        String latestVersionStr;\n        latestVersionStr = latest.getVersion();\n        Matcher match = Pattern.compile(\"develop([0-9]+)\", Pattern.CASE_INSENSITIVE).matcher(latestVersionStr);\n        if (match.matches())\n            latestVersion = Integer.parseInt(match.group(1));\n        latest = null;\n    } catch (IOException e) {\n    }\n    latestVersion = Math.max(latestVersion, DEVELOP_LATEST_VERSION);\n    List<String> versions = new ArrayList<>(latestVersion - DEVELOP_FIRST_VERSION + 2);\n    for (int version = DEVELOP_FIRST_VERSION; version <= latestVersion; version++) {\n        if (!DEVELOP_VERSIONS_BLACKLIST.contains(version)) {\n            versions.add(\"develop\" + version);\n        }\n    }\n    return versions;\n}","repo_id":"9","comment":"/**\n * Get a list of all develop versions, generated based on the DEVELOP_*\n * static variables.\n * @return A list of all development versions: \"develop45\",\"develop46\",...\n */\n","repo_name":"biojava-master/","id":180,"method_signature":"List<String> getKnownEcodVersions()"}