{"callee_method_names":["Structure.nrModels","Structure.getModel","Chain.getAtomGroups","Group.getAltLocs","Group.getAtoms","Group.getPDBName"],"method_name":"StructureTools.cleanUpAltLocs","method_implementation":"{\n    for (int i = 0; i < structure.nrModels(); i++) {\n        for (Chain chain : structure.getModel(i)) {\n            for (Group group : chain.getAtomGroups()) {\n                for (Group altLocGroup : group.getAltLocs()) {\n                    for (Atom groupAtom : group.getAtoms()) {\n                        // If this alt loc doesn't have this atom\n                        if (!altLocGroup.hasAtom(groupAtom.getName())) {\n                            // Fix for microheterogenity\n                            if (altLocGroup.getPDBName().equals(group.getPDBName())) {\n                                // If it's a Hydrogen then we check for it's Deuterated brother\n                                if (!hasDeuteratedEquiv(groupAtom, altLocGroup)) {\n                                    altLocGroup.addAtom(groupAtom);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}","repo_id":"9","comment":"/**\n * Cleans up the structure's alternate location (altloc) groups. All alternate location groups should have all atoms (except\n * in the case of microheterogenity) or when a deuterium exists.\n * Ensure that all the alt loc groups have all the atoms in the main group.\n * @param structure The Structure to be cleaned up\n */\n","repo_name":"biojava-master/","id":1059,"method_signature":"void cleanUpAltLocs(Structure)"}