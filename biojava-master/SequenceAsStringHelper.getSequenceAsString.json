{"callee_method_names":["List<C>.size","Strand.equals","List<C>.get","StringBuilder.append","CompoundSet<C>.getStringForCompound","List<C>.get","StringBuilder.append","CompoundSet<C>.getStringForCompound","List<C>.size","List<C>.get","StringBuilder.append","CompoundSet<C>.getStringForCompound","List<C>.get","StringBuilder.append","CompoundSet<C>.getStringForCompound","List<C>.size","List<C>.get","StringBuilder.append","CompoundSet<C>.getStringForCompound","List<C>.get","StringBuilder.append","CompoundSet<C>.getStringForCompound","StringBuilder.toString"],"method_name":"SequenceAsStringHelper.getSequenceAsString","method_implementation":"{\n    // TODO Optimise/cache.\n    if (parsedCompounds.size() == 0)\n        return \"\";\n    StringBuilder builder = new StringBuilder();\n    if (strand.equals(Strand.NEGATIVE)) {\n        //we expect bioBegin to be bigger but could have circular case\n        if (bioBegin <= bioEnd) {\n            for (int index = bioEnd - 1; index >= bioBegin - 1; index--) {\n                C compound = parsedCompounds.get(index);\n                builder.append(compoundSet.getStringForCompound(compound));\n            }\n        } else {\n            //go to 0 and the up\n            for (int index = bioBegin - 1; index >= 0; index--) {\n                C compound = parsedCompounds.get(index);\n                builder.append(compoundSet.getStringForCompound(compound));\n            }\n            for (int index = parsedCompounds.size() - 1; index >= bioEnd - 1; index--) {\n                C compound = parsedCompounds.get(index);\n                builder.append(compoundSet.getStringForCompound(compound));\n            }\n        }\n    } else {\n        if (bioBegin <= bioEnd) {\n            for (int index = bioBegin - 1; index <= bioEnd - 1; index++) {\n                C compound = parsedCompounds.get(index);\n                builder.append(compoundSet.getStringForCompound(compound));\n            }\n        } else {\n            //go to 0 and the up\n            for (int index = bioBegin - 1; index <= parsedCompounds.size() - 1; index++) {\n                C compound = parsedCompounds.get(index);\n                builder.append(compoundSet.getStringForCompound(compound));\n            }\n            for (int index = 0; index <= bioEnd - 1; index++) {\n                C compound = parsedCompounds.get(index);\n                builder.append(compoundSet.getStringForCompound(compound));\n            }\n        }\n    }\n    return builder.toString();\n}","repo_id":"9","comment":"/**\n * @param parsedCompounds\n * @param compoundSet\n * @param bioBegin\n * @param bioEnd\n * @param strand\n * @return\n */\n","repo_name":"biojava-master/","id":2982,"method_signature":"String getSequenceAsString(List, CompoundSet, Integer, Integer, Strand)"}