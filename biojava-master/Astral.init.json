{"callee_method_names":["Logger.info","BufferedReader.readLine","String.startsWith","String.split","Set<String>.add","Logger.debug","LinkedHashMap<Integer, String>.put","Logger.warn","BufferedReader.close","BufferedReader.close","Logger.warn"],"method_name":"Astral.init","method_implementation":"{\n    names = new TreeSet<String>();\n    failedLines = new LinkedHashMap<Integer, String>();\n    BufferedReader br = null;\n    try {\n        br = new BufferedReader(reader);\n        logger.info(\"Reading ASTRAL file...\");\n        String line = \"\";\n        int i = 0;\n        while ((line = br.readLine()) != null) {\n            if (line.startsWith(\">\")) {\n                try {\n                    String scopId = line.split(\"\\\\s\")[0].substring(1);\n                    names.add(scopId);\n                    if (i % 1000 == 0) {\n                        logger.debug(\"Reading ASTRAL line for {}\", scopId);\n                    }\n                    i++;\n                } catch (RuntimeException e) {\n                    failedLines.put(i, line);\n                    logger.warn(\"Couldn't read line \" + line, e);\n                }\n            }\n        }\n        br.close();\n    } catch (IOException e) {\n        throw new RuntimeException(\"Couldn't read the input stream \", e);\n    } finally {\n        if (br != null) {\n            try {\n                br.close();\n            } catch (IOException e) {\n                logger.warn(\"Could not close stream\", e);\n            }\n        }\n    }\n}","repo_id":"9","comment":"/**\n * Parses the FASTA file opened by reader.\n */\n","repo_name":"biojava-master/","id":1540,"method_signature":"void init(Reader)"}