{"callee_method_names":[],"method_name":"Cholesky2.process","method_implementation":"{\n    double temp;\n    int i, j, k;\n    double eps, pivot;\n    int rank;\n    int nonneg;\n    nonneg = 1;\n    eps = 0;\n    for (i = 0; i < n; i++) {\n        if (matrix[i][i] > eps) {\n            eps = matrix[i][i];\n        }\n        for (j = (i + 1); j < n; j++) {\n            matrix[j][i] = matrix[i][j];\n        }\n    }\n    eps *= toler;\n    rank = 0;\n    for (i = 0; i < n; i++) {\n        pivot = matrix[i][i];\n        if (pivot < eps) {\n            matrix[i][i] = 0;\n            if (pivot < -8 * eps) {\n                nonneg = -1;\n            }\n        } else {\n            rank++;\n            for (j = (i + 1); j < n; j++) {\n                temp = matrix[j][i] / pivot;\n                matrix[j][i] = temp;\n                matrix[j][j] -= temp * temp * pivot;\n                for (k = (j + 1); k < n; k++) {\n                    matrix[k][j] -= temp * matrix[k][i];\n                }\n            }\n        }\n    }\n    return (rank * nonneg);\n}","repo_id":"9","comment":"/**\n * @param matrix\n * @param n\n * @param toler\n * @return\n */\n","repo_name":"biojava-master/","id":3511,"method_signature":"int process(double[][], int, double)"}