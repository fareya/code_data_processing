{"callee_method_names":["SecStrucGroup.getN","SecStrucGroup.getH","SecStrucGroup.getO","SecStrucGroup.getC","Logger.debug","SecStrucGroup.getResidueNumber","SecStrucGroup.getPDBName","SecStrucGroup.getResidueNumber","SecStrucGroup.getPDBName","Atom.getPDBserial","Atom.getPDBserial","Logger.debug","Atom.getPDBserial","Atom.getPDBserial"],"method_name":"SecStrucCalc.calculateHBondEnergy","method_implementation":"{\n    Atom N = one.getN();\n    Atom H = one.getH();\n    Atom O = two.getO();\n    Atom C = two.getC();\n    double dno = Calc.getDistance(O, N);\n    double dhc = Calc.getDistance(C, H);\n    double dho = Calc.getDistance(O, H);\n    double dnc = Calc.getDistance(C, N);\n    logger.debug(\" cccc: {} {} {} {} O ({})..N ({}):{}  |  ho:{} - hc:{} + nc:{} - no:{}\", one.getResidueNumber(), one.getPDBName(), two.getResidueNumber(), two.getPDBName(), O.getPDBserial(), N.getPDBserial(), dno, dho, dhc, dnc, dno);\n    //there seems to be a contact!\n    if ((dno < MINDIST) || (dhc < MINDIST) || (dnc < MINDIST) || (dno < MINDIST)) {\n        return HBONDLOWENERGY;\n    }\n    double e1 = Q / dho - Q / dhc;\n    double e2 = Q / dnc - Q / dno;\n    double energy = e1 + e2;\n    logger.debug(\" N ({}) O({}): {} : {} \", N.getPDBserial(), O.getPDBserial(), (float) dno, energy);\n    //Avoid too strong energy\n    if (energy > HBONDLOWENERGY)\n        return energy;\n    return HBONDLOWENERGY;\n}","repo_id":"9","comment":"/**\n * Calculate HBond energy of two groups in cal/mol\n * see Creighton page 147 f\n * <p>\n * Jeffrey, George A., An introduction to hydrogen bonding,\n * Oxford University Press, 1997.\n * categorizes hbonds with donor-acceptor distances of\n * 2.2-2.5 &aring; as \"strong, mostly covalent\",\n * 2.5-3.2 &aring; as \"moderate, mostly electrostatic\",\n * 3.2-4.0 &aring; as \"weak, electrostatic\".\n * Energies are given as 40-14, 15-4, and <4 kcal/mol respectively.\n */\n","repo_name":"biojava-master/","id":1599,"method_signature":"double calculateHBondEnergy(SecStrucGroup, SecStrucGroup)"}