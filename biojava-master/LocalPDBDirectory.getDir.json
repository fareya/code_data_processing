{"callee_method_names":["String.length","String.substring","String.substring","File.exists","File.mkdirs","Logger.error","File.toString"],"method_name":"LocalPDBDirectory.getDir","method_implementation":"{\n    File dir = null;\n    int offset = pdbId.length() - 3;\n    if (obsolete) {\n        // obsolete is always split\n        String middle = pdbId.substring(offset, offset + 2).toLowerCase();\n        dir = new File(obsoleteDirPath, middle);\n    } else {\n        String middle = pdbId.substring(offset, offset + 2).toLowerCase();\n        dir = new File(splitDirPath, middle);\n    }\n    if (!dir.exists()) {\n        boolean success = dir.mkdirs();\n        if (!success)\n            logger.error(\"Could not create mmCIF dir {}\", dir.toString());\n    }\n    return dir;\n}","repo_id":"9","comment":"/**\n * Gets the directory in which the file for a given MMCIF file would live,\n * creating it if necessary.\n *\n * The obsolete parameter is necessary to avoid additional server queries.\n * @param pdbId\n * @param obsolete Whether the pdbId is obsolete or not\n * @return File pointing to the directory,\n */\n","repo_name":"biojava-master/","id":1139,"method_signature":"File getDir(String, boolean)"}