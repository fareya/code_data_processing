{"callee_method_names":["AtomContactSet.iterator","Iterator<AtomContact>.hasNext","Iterator<AtomContact>.next","AtomContact.getPair","Pair<Atom>.getFirst","Pair<Atom>.getSecond","Map<ResidueNumber, Integer>.get","Group.getResidueNumber","Map<ResidueNumber, Integer>.get","Group.getResidueNumber"],"method_name":"SecStrucCalc.calculateHBonds","method_implementation":"{\n    /**\n     * More efficient method for calculating C-Alpha pairs\n     */\n    if (groups.length < 5)\n        return;\n    Iterator<AtomContact> otu = contactSet.iterator();\n    while (otu.hasNext()) {\n        AtomContact ac = otu.next();\n        Pair<Atom> pair = ac.getPair();\n        Group g1 = pair.getFirst().getGroup();\n        Group g2 = pair.getSecond().getGroup();\n        // Now I need to get the index of the Group in the list groups\n        int i = indResMap.get(g1.getResidueNumber());\n        int j = indResMap.get(g2.getResidueNumber());\n        // Now check this\n        checkAddHBond(i, j);\n        //\"backwards\" hbonds are not allowed\n        if (j != (i + 1))\n            checkAddHBond(j, i);\n    }\n}","repo_id":"9","comment":"/**\n * Calculate the HBonds between different groups.\n * see Creighton page 147 f\n * Modified to use only the contact map\n */\n","repo_name":"biojava-master/","id":1598,"method_signature":"void calculateHBonds()"}