{"callee_method_ids":[1317],"callee_method_names":["FileParsingParameters.isHeaderOnly","Logger.debug","String.substring","LinkedHashMap.get","LinkedHashMap.containsKey","String.trim","LinkedHashMap.put","String.trim","Logger.debug","Logger.debug","LinkedHashMap.size","Logger.debug","String.substring","String.substring","Logger.debug","String.substring","Character.equals","String.substring","String.substring","String.substring","Logger.debug","Logger.debug","ResidueNumber.setChainName","ResidueNumber.setSeqNum","ResidueNumber.setInsCode","List<ResidueNumber>.add","Logger.debug","String.substring","Logger.debug","LinkedHashMap.keySet","LinkedHashMap.keySet","Logger.debug","LinkedHashMap.get"],"method_name":"PDBFileParser.pdb_SITE_Handler","method_implementation":"{\n    if (params.isHeaderOnly())\n        return;\n    //  make a map of: SiteId to List<ResidueNumber>\n    logger.debug(\"Site Line:{}\", line);\n    String siteID = line.substring(11, 14);\n    //fetch the siteResidues from the map\n    List<ResidueNumber> siteResidues = siteToResidueMap.get(siteID);\n    //if the siteResidues doesn't yet exist, make a new one.\n    if (siteResidues == null || !siteToResidueMap.containsKey(siteID.trim())) {\n        siteResidues = new ArrayList<ResidueNumber>();\n        siteToResidueMap.put(siteID.trim(), siteResidues);\n        logger.debug(String.format(\"New Site made: %s %s\", siteID, siteResidues));\n        logger.debug(\"Now made {} sites\", siteMap.size());\n    }\n    logger.debug(String.format(\"SiteId: %s\", siteID));\n    //line = 'SITE     1 AC1  6 ARG H 221A LYS H 224  HOH H 403  HOH H 460'\n    //line.substring(18) = 'ARG H 221A LYS H 224  HOH H 403  HOH H 460'\n    line = line.substring(18);\n    String groupString = null;\n    //groupString = 'ARG H 221A'\n    //keep iterating through chunks of 10 characters - these are the groups in the siteResidues\n    while (!\"          \".equals((groupString = line.substring(0, 10)))) {\n        //groupstring: 'ARG H 221A'\n        logger.debug(\"groupString: '{}'\", groupString);\n        //set the residue name\n        //residueName = 'ARG'\n        String residueName = groupString.substring(0, 3);\n        Character aminoCode1 = StructureTools.get1LetterCode(residueName);\n        if (aminoCode1 != null) {\n            if (aminoCode1.equals(StructureTools.UNKNOWN_GROUP_LABEL)) {\n                aminoCode1 = null;\n            }\n        }\n        //this is already in the right format, so no need to fiddle with it...\n        //pdbCode = 'H 221A'\n        //                    String pdbCode = groupString.substring(4, 10).trim();\n        String chainId = groupString.substring(4, 5);\n        Integer resNum = Integer.valueOf(groupString.substring(5, 9).trim());\n        Character insCode = groupString.substring(9, 10).charAt(0);\n        //set insCode to null as a measure to prevent storing thousands of empty Strings\n        //- the empty value is returned using Group.getInsCode()\n        //                    if (insCode.equals(\" \")) {\n        //                        insCode = null;\n        //                    }\n        logger.debug(String.format(\"Site: %s: 'resName:%s resNum:%s insCode:%s'\", siteID, residueName, resNum, insCode));\n        //make a new resNum with the data - this will be linked up with a site later\n        ResidueNumber residueNumber = new ResidueNumber();\n        logger.debug(\"pdbCode: '{}{}'\", resNum, insCode);\n        residueNumber.setChainName(chainId);\n        residueNumber.setSeqNum(resNum);\n        residueNumber.setInsCode(insCode);\n        //add the resNum to the groups\n        siteResidues.add(residueNumber);\n        logger.debug(\"Adding residueNumber \" + residueNumber + \" to site \" + siteID);\n        line = line.substring(11);\n    }\n    logger.debug(\"Current SiteMap (contains {} sites):\", siteToResidueMap.keySet().size());\n    for (String key : siteToResidueMap.keySet()) {\n        logger.debug(key + \" : \" + siteToResidueMap.get(key));\n    }\n}","repo_id":"9","comment":"/**\n * Handler for the SITE records. <br>\n *\n * <pre>\n *\n * COLUMNS\tDATA TYPE \t\tFIELD \t\tDEFINITION\n * ---------------------------------------------------------------------------------\n * 1 - 6\tRecord name \t\"SITE \"\n * 8 - 10 \tInteger \t\tseqNum \t\tSequence number.\n * 12 - 14 \tLString(3)\t\tsiteID \t\tSite name.\n * 16 - 17 \tInteger \t\tnumRes \t\tNumber of residues that compose the siteResidues.\n * 19 - 21 \tResidue name\tresName1\tResidue name for first residue that\n * \t\t\t\t\t\t\t\t\t\tcreates the siteResidues.\n * 23 \t\tCharacter \t\tchainID1 \tChain identifier for first residue of siteResidues.\n * 24 - 27 \tInteger \t\tseq1 \t\tResidue sequence number for first residue\n * \t\t\t\t\t\t\t\t\t\tof the siteResidues.\n * 28 \t\tAChar \t\t\tiCode1 \t\tInsertion code for first residue of the siteResidues.\n *\n * example:\n *          1         2         3         4         5         6         7         8\n * 12345678901234567890123456789012345678901234567890123456789012345678901234567890\n * SITE     1 AC1  3 HIS A  94 HIS A   96  HIS A 119\n * SITE     1 AC2  5 ASN A  62 GLY A   63  HIS A  64  HOH A 328\n * SITE     2 AC2  5 HOH A 634\n * SITE     1 AC3  5 GLN A 136 GLN A  137  PRO A 138  GLU A 205\n * SITE     2 AC3  5 CYS A 206\n * SITE     1 AC4 11 HIS A  64 HIS A   94  HIS A  96  HIS A 119\n * SITE     2 AC4 11 LEU A 198 THR A  199  THR A 200  TRP A 209\n * SITE     3 AC4 11 HOH A 572 HOH A  582  HOH A 635\n * <\/pre>\n * @param line the SITE line record being currently read\n * @author Amr ALHOSSARY\n * @author Jules Jacobsen\n */\n","repo_name":"biojava-master/","id":1187,"method_signature":"void pdb_SITE_Handler(String)"}