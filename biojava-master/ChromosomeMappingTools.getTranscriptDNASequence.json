{"callee_method_ids":[2379,2640],"callee_method_names":["TwoBitFacade.getSequence","ResidueRangeAndLength.lowerEndpoint","ResidueRangeAndLength.upperEndpoint","StringBuilder.append","Character.equals","StringBuilder.toString","StringBuilder.toString","DNASequence.getComplement","SequenceView<NucleotideCompound>.getSequenceAsString","StringBuilder.toString"],"method_name":"ChromosomeMappingTools.getTranscriptDNASequence","method_implementation":"{\n    List<Range<Integer>> cdsRegion = getCDSRegions(exonStarts, exonEnds, cdsStart, cdsEnd);\n    StringBuilder dnaSequence = new StringBuilder();\n    for (Range<Integer> range : cdsRegion) {\n        String exonSequence = twoBitFacade.getSequence(chromosome, range.lowerEndpoint(), range.upperEndpoint());\n        dnaSequence.append(exonSequence);\n    }\n    if (orientation.equals('-')) {\n        dnaSequence = new StringBuilder(new StringBuilder(dnaSequence.toString()).reverse().toString());\n        DNASequence dna = new DNASequence(dnaSequence.toString());\n        SequenceView<NucleotideCompound> compliment = dna.getComplement();\n        dnaSequence = new StringBuilder(compliment.getSequenceAsString());\n    }\n    return new DNASequence(dnaSequence.toString().toUpperCase());\n}","repo_id":"9","comment":"/**\n * Extracts the DNA sequence transcribed from the input genetic coordinates.\n *\n * @param chromosome the name of the chromosome\n * @param exonStarts The list holding the genetic coordinates pointing to the start positions of the exons (including UTR regions)\n * @param exonEnds The list holding the genetic coordinates pointing to the end positions of the exons (including UTR regions)\n * @param cdsStart The start position of a coding region\n * @param cdsEnd The end position of a coding region\n * @param orientation The orientation of the strand where the gene is living\n *\n * @return the DNA sequence transcribed from the input genetic coordinates\n */\n","repo_name":"biojava-master/","id":2492,"method_signature":"DNASequence getTranscriptDNASequence(TwoBitFacade, String, List, List, int, int, Character)"}