{"callee_method_ids":[1351,1351],"callee_method_names":["Structure.getEntityInfos","EntityInfo.getType","List<EntityInfo>.add","List<EntityInfo>.size","Structure.getPolyChainByPDB","Structure.getPolyChainByPDB","Structure.getPolyChainByPDB","Chain.getGroupByPDB","Chain.getEntityInfo","Chain.getGroupByPDB","Chain.getEntityInfo","Chain.getGroupByPDB","Chain.getEntityInfo","Structure.getEntityInfos","EntityInfo.getType","List<EntityInfo>.add","List<EntityInfo>.size","Structure.getPolyChainByPDB","Structure.getPolyChainByPDB","Structure.getPolyChainByPDB","Chain.getGroupByPDB","Chain.getEntityInfo","Chain.getGroupByPDB","Chain.getEntityInfo","Chain.getGroupByPDB","Chain.getEntityInfo"],"method_name":"TestEntityResIndexMapping.test3ddoRawNoSeqres","method_implementation":"{\n    // 3ddo has 6 chains in 1 entity, all of them with different residue numbering (chain A is 1000+, chain B 2000+ ...)\n    Structure s = getStructure(\"3ddo_raw_noseqres.pdb.gz\", true);\n    List<EntityInfo> polyEntities = new ArrayList<>();\n    for (EntityInfo entityInfo : s.getEntityInfos()) {\n        if (entityInfo.getType() == EntityType.POLYMER) {\n            polyEntities.add(entityInfo);\n        }\n    }\n    assertEquals(1, polyEntities.size());\n    Chain chainA = s.getPolyChainByPDB(\"A\");\n    Chain chainB = s.getPolyChainByPDB(\"B\");\n    Chain chainC = s.getPolyChainByPDB(\"C\");\n    // the last 3 residues of each chain are all the same: they should map to the same index\n    for (int resNum = 251; resNum <= 253; resNum++) {\n        Group groupInChainA = chainA.getGroupByPDB(new ResidueNumber(\"A\", resNum + 1000, null));\n        int indexInChainA = chainA.getEntityInfo().getAlignedResIndex(groupInChainA, chainA);\n        Group groupInChainB = chainB.getGroupByPDB(new ResidueNumber(\"B\", resNum + 2000, null));\n        int indexInChainB = chainB.getEntityInfo().getAlignedResIndex(groupInChainB, chainB);\n        Group groupInChainC = chainC.getGroupByPDB(new ResidueNumber(\"C\", resNum + 3000, null));\n        int indexInChainC = chainC.getEntityInfo().getAlignedResIndex(groupInChainC, chainC);\n        assertNotEquals(-1, indexInChainA);\n        assertNotEquals(-1, indexInChainB);\n        assertNotEquals(-1, indexInChainC);\n        assertEquals(indexInChainA, indexInChainB);\n        assertEquals(indexInChainA, indexInChainC);\n    }\n    // this should work either with or without setAlignSeqRes, since the mapping happens in EntityFinder\n    s = getStructure(\"3ddo_raw_noseqres.pdb.gz\", false);\n    polyEntities = new ArrayList<>();\n    for (EntityInfo entityInfo : s.getEntityInfos()) {\n        if (entityInfo.getType() == EntityType.POLYMER) {\n            polyEntities.add(entityInfo);\n        }\n    }\n    assertEquals(1, polyEntities.size());\n    chainA = s.getPolyChainByPDB(\"A\");\n    chainB = s.getPolyChainByPDB(\"B\");\n    chainC = s.getPolyChainByPDB(\"C\");\n    // the last 3 residues of each chain are all the same: they should map to the same index\n    for (int resNum = 251; resNum <= 253; resNum++) {\n        Group groupInChainA = chainA.getGroupByPDB(new ResidueNumber(\"A\", resNum + 1000, null));\n        int indexInChainA = chainA.getEntityInfo().getAlignedResIndex(groupInChainA, chainA);\n        Group groupInChainB = chainB.getGroupByPDB(new ResidueNumber(\"B\", resNum + 2000, null));\n        int indexInChainB = chainB.getEntityInfo().getAlignedResIndex(groupInChainB, chainB);\n        Group groupInChainC = chainC.getGroupByPDB(new ResidueNumber(\"C\", resNum + 3000, null));\n        int indexInChainC = chainC.getEntityInfo().getAlignedResIndex(groupInChainC, chainC);\n        assertNotEquals(-1, indexInChainA);\n        assertNotEquals(-1, indexInChainB);\n        assertNotEquals(-1, indexInChainC);\n        assertEquals(indexInChainA, indexInChainB);\n        assertEquals(indexInChainA, indexInChainC);\n    }\n}","repo_id":"9","comment":"// see https://github.com/eppic-team/eppic/issues/39\n","repo_name":"biojava-master/","id":2218,"method_signature":"void test3ddoRawNoSeqres()"}