{"callee_method_names":["List<Component>.add","List<Component>.add"],"method_name":"ProteinModificationRegistryTest.testRegisterModification","method_implementation":"{\n    // define the involved components, in this case two cystines (CYS)\n    List<Component> components = new ArrayList<Component>(2);\n    components.add(Component.of(\"CYS\"));\n    components.add(Component.of(\"CYS\"));\n    // define the atom linkages between the components, in this case the SG atoms on both CYS groups\n    ModificationLinkage linkage = new ModificationLinkage(components, 0, \"SG\", 1, \"SG\");\n    // define the modification condition, i.e. what components are involved and what atoms are linked between them\n    ModificationCondition condition = new ModificationConditionImpl(components, Collections.singletonList(linkage));\n    // build a modification\n    ProteinModification mod = new ProteinModificationImpl.Builder(\"0018_test\", ModificationCategory.CROSS_LINK_2, ModificationOccurrenceType.NATURAL, condition).setDescription(\"A protein modification that effectively cross-links two L-cysteine residues to form L-cystine.\").setFormula(\"C 6 H 8 N 2 O 2 S 2\").setResidId(\"AA0025\").setResidName(\"L-cystine\").setPsimodId(\"MOD:00034\").setPsimodName(\"L-cystine (cross-link)\").setSystematicName(\"(R,R)-3,3'-disulfane-1,2-diylbis(2-aminopropanoic acid)\").addKeyword(\"disulfide bond\").addKeyword(\"redox-active center\").build();\n    //register the modification\n    ProteinModificationRegistry.register(mod);\n    Assert.assertNotNull(ProteinModificationRegistry.getById(\"0018_test\"));\n}","repo_id":"9","comment":"/**\n * Note: if you change this unit test, also change the cook book:\n * http://www.biojava.org/wiki/BioJava:CookBook3:AddProtMod\n */\n","repo_name":"biojava-master/","id":319,"method_signature":"void testRegisterModification()"}