{"callee_method_ids":[264,264,264,265,265,264,265,265,270,271,270,271],"callee_method_names":["List<ModificationLinkage>.size","List<Atom[]>.size","List<ModificationLinkage>.get","List<Atom[]>.get","List<ModificationLinkage>.get","List<Atom[]>.get","ModificationLinkage.getIndexOfComponent1","ModificationLinkage.getIndexOfComponent1","Atom[].getGroup","Atom[].getGroup","ModificationLinkage.getIndexOfComponent1","ModificationLinkage.getIndexOfComponent2","Atom[].getGroup","Atom[].getGroup","ModificationLinkage.getIndexOfComponent2","ModificationLinkage.getIndexOfComponent1","Atom[].getGroup","Atom[].getGroup","ModificationLinkage.getIndexOfComponent2","ModificationLinkage.getIndexOfComponent2","Atom[].getGroup","Atom[].getGroup","ModificationLinkage.getLabelOfAtomOnComponent1","ModificationLinkage.getLabelOfAtomOnComponent2","ModificationLinkage.getLabelOfAtomOnComponent1","ModificationLinkage.getLabelOfAtomOnComponent2","String.equals","Atom[].equals","String.equals","Atom[].equals","String.equals","Atom[].equals","String.equals","Atom[].equals"],"method_name":"ProteinModificationIdentifier.matchLinkages","method_implementation":"{\n    int nLink = linkages.size();\n    if (nLink != atomLinkages.size()) {\n        return false;\n    }\n    for (int i = 0; i < nLink - 1; i++) {\n        ModificationLinkage link1 = linkages.get(i);\n        Atom[] atoms1 = atomLinkages.get(i);\n        for (int j = i + 1; j < nLink; j++) {\n            ModificationLinkage link2 = linkages.get(j);\n            Atom[] atoms2 = atomLinkages.get(j);\n            // check components\n            if (((link1.getIndexOfComponent1() == link2.getIndexOfComponent1()) != (atoms1[0].getGroup().equals(atoms2[0].getGroup()))) || ((link1.getIndexOfComponent1() == link2.getIndexOfComponent2()) != (atoms1[0].getGroup().equals(atoms2[1].getGroup()))) || ((link1.getIndexOfComponent2() == link2.getIndexOfComponent1()) != (atoms1[1].getGroup().equals(atoms2[0].getGroup()))) || ((link1.getIndexOfComponent2() == link2.getIndexOfComponent2()) != (atoms1[1].getGroup().equals(atoms2[1].getGroup())))) {\n                return false;\n            }\n            // check atoms\n            String label11 = link1.getLabelOfAtomOnComponent1();\n            String label12 = link1.getLabelOfAtomOnComponent2();\n            String label21 = link2.getLabelOfAtomOnComponent1();\n            String label22 = link2.getLabelOfAtomOnComponent2();\n            if ((label11 != null && label21 != null && label11.equals(label21)) != (atoms1[0].equals(atoms2[0])) || (label11 != null && label22 != null && label11.equals(label22)) != (atoms1[0].equals(atoms2[1])) || (label12 != null && label21 != null && label12.equals(label21)) != (atoms1[1].equals(atoms2[0])) || (label12 != null && label22 != null && label12.equals(label22)) != (atoms1[1].equals(atoms2[1]))) {\n                return false;\n            }\n        }\n    }\n    return true;\n}","repo_id":"9","comment":"/**\n * @param linkages\n * @param atomLinkages\n * @return true if atomLinkages satisfy the condition; false, otherwise.\n */\n","repo_name":"biojava-master/","id":305,"method_signature":"boolean matchLinkages(List, List)"}