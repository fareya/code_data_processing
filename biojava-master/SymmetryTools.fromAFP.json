{"callee_method_ids":[487],"callee_method_names":["AFPChain.getAlgorithmName","MultipleAlignmentEnsemble.setAtomArrays","MultipleAlignmentEnsemble.getStructureIdentifiers","MultipleAlignmentEnsemble.getStructureIdentifiers","MultipleAlignmentEnsemble.getStructureIdentifiers","Atom[].getGroup","MultipleAlignmentEnsemble.setStructureIdentifiers","Block.setAlignRes","AFPChain.getBlockNum","MultipleAlignmentEnsemble.getMultipleAlignment","Block.getAlignRes","MultipleAlignmentEnsemble.getStructureIdentifiers","MultipleAlignmentEnsemble.getAtomArrays","MultipleAlignmentEnsemble.getMultipleAlignments","MultipleAlignment.setEnsemble","CoreSuperimposer.superimpose"],"method_name":"SymmetryTools.fromAFP","method_implementation":"{\n    if (!symm.getAlgorithmName().contains(\"symm\")) {\n        throw new IllegalArgumentException(\"The input alignment is not a symmetry alignment.\");\n    }\n    MultipleAlignmentEnsemble e = new MultipleAlignmentEnsembleImpl(symm, atoms, atoms, false);\n    e.setAtomArrays(new ArrayList<Atom[]>());\n    StructureIdentifier name = null;\n    if (e.getStructureIdentifiers() != null) {\n        if (!e.getStructureIdentifiers().isEmpty())\n            name = e.getStructureIdentifiers().get(0);\n    } else\n        name = atoms[0].getGroup().getChain().getStructure().getStructureIdentifier();\n    e.setStructureIdentifiers(new ArrayList<StructureIdentifier>());\n    MultipleAlignment result = new MultipleAlignmentImpl();\n    BlockSet bs = new BlockSetImpl(result);\n    Block b = new BlockImpl(bs);\n    b.setAlignRes(new ArrayList<List<Integer>>());\n    int order = symm.getBlockNum();\n    for (int su = 0; su < order; su++) {\n        List<Integer> residues = e.getMultipleAlignment(0).getBlock(su).getAlignRes().get(0);\n        b.getAlignRes().add(residues);\n        e.getStructureIdentifiers().add(name);\n        e.getAtomArrays().add(atoms);\n    }\n    e.getMultipleAlignments().set(0, result);\n    result.setEnsemble(e);\n    CoreSuperimposer imposer = new CoreSuperimposer();\n    imposer.superimpose(result);\n    updateSymmetryScores(result);\n    return result;\n}","repo_id":"9","comment":"/**\n * Converts a refined symmetry AFPChain alignment into the standard\n * representation of symmetry in a MultipleAlignment, that contains the\n * entire Atom array of the strcuture and the symmetric repeats are orgaized\n * in different rows in a single Block.\n *\n * @param symm\n *            AFPChain created with a symmetry algorithm and refined\n * @param atoms\n *            Atom array of the entire structure\n * @return MultipleAlignment format of the symmetry\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":2045,"method_signature":"MultipleAlignment fromAFP(AFPChain, Atom[])"}