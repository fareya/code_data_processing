{"callee_method_names":[],"method_name":"SequenceDisplay.getScaleForZoom","method_implementation":"{\n    if (zoomFactor > 100)\n        zoomFactor = 100;\n    if (zoomFactor < 1)\n        zoomFactor = 1;\n    int DEFAULT_X_START = SequenceScalePanel.DEFAULT_X_START;\n    int DEFAULT_X_RIGHT_BORDER = SequenceScalePanel.DEFAULT_X_RIGHT_BORDER;\n    int seqLength = getMaxSequenceLength();\n    // the maximum width depends on the size of the parent Component\n    int width = getWidth();\n    float s = width / (float) (seqLength + DEFAULT_X_START + DEFAULT_X_RIGHT_BORDER);\n    //logger.info(\"scale for 100% \" + s + \" \" + seqLength + \" \" + zoomFactor);\n    s = (100) * s / (zoomFactor * 1.0f);\n    if (s > MAX_SCALE)\n        s = MAX_SCALE;\n    //logger.info(\"but changed to \" + s);\n    return s;\n}","repo_id":"9","comment":"/**\n * calculate the float that is used for display.\n * 1 * scale = size of 1 amino acid (in pixel).\n * maximum @see MAX_SCALE\n * @param zoomFactor\n * @return a float that is the display \"scale\" - an internal value required for paintin.\n * user should only interact with the zoomfactor ...\n */\n","repo_name":"biojava-master/","id":3331,"method_signature":"float getScaleForZoom(int)"}