{"callee_method_names":["AFPChain.getGroup","Group.getChain","double.getId","Chain.getId","Chain.setId","Chain.getId","List<Chain>.add","Chain.addGroup"],"method_name":"AlignmentTools.getAlignedModel","method_implementation":"{\n    List<Chain> model = new ArrayList<Chain>();\n    for (Atom a : ca) {\n        Group g = a.getGroup();\n        Chain parentC = g.getChain();\n        Chain newChain = null;\n        for (Chain c : model) {\n            if (c.getId().equals(parentC.getId())) {\n                newChain = c;\n                break;\n            }\n        }\n        if (newChain == null) {\n            newChain = new ChainImpl();\n            newChain.setId(parentC.getId());\n            model.add(newChain);\n        }\n        newChain.addGroup(g);\n    }\n    return model;\n}","repo_id":"9","comment":"/**\n * get an artificial List of chains containing the Atoms and groups.\n * Does NOT rotate anything.\n * @param ca\n * @return a list of Chains that is built up from the Atoms in the ca array\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":601,"method_signature":"List<Chain> getAlignedModel(Atom[])"}