{"callee_method_ids":[1373,1375,1393,1395,1391,1377,1379,1381,1383,1387,1385,1389],"callee_method_names":["Logger.debug","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","String.length","String.substring","DBRef.setIdCode","DBRef.setChainName","DBRef.setSeqBegin","DBRef.setInsertBegin","String.charAt","DBRef.setSeqEnd","DBRef.setInsertEnd","String.charAt","DBRef.setDatabase","String.trim","DBRef.setDbAccession","String.trim","DBRef.setDbIdCode","String.trim","DBRef.setDbSeqBegin","DBRef.setIdbnsBegin","String.charAt","DBRef.setDbSeqEnd","DBRef.setIdbnsEnd","String.charAt","List<DBRef>.add"],"method_name":"PDBFileParser.pdb_DBREF_Handler","method_implementation":"{\n    logger.debug(\"Parsing DBREF {}\", line);\n    DBRef dbref = new DBRef();\n    String idCode = line.substring(7, 11);\n    String chainName = line.substring(12, 13);\n    String seqBegin = line.substring(14, 18);\n    String insertBegin = line.substring(18, 19);\n    String seqEnd = line.substring(20, 24);\n    String insertEnd = line.substring(24, 25);\n    String database = line.substring(26, 32);\n    String dbAccession = line.substring(33, 41);\n    String dbIdCode = line.substring(42, 54);\n    String dbseqBegin = line.substring(55, 60);\n    String idbnsBeg = line.substring(60, 61);\n    String dbseqEnd = line.substring(62, 67);\n    // Support implicit space character at end\n    String dbinsEnd;\n    if (line.length() >= 68)\n        dbinsEnd = line.substring(67, 68);\n    else\n        dbinsEnd = \" \";\n    dbref.setIdCode(idCode);\n    dbref.setChainName(chainName);\n    dbref.setSeqBegin(intFromString(seqBegin));\n    dbref.setInsertBegin(insertBegin.charAt(0));\n    dbref.setSeqEnd(intFromString(seqEnd));\n    dbref.setInsertEnd(insertEnd.charAt(0));\n    dbref.setDatabase(database.trim());\n    dbref.setDbAccession(dbAccession.trim());\n    dbref.setDbIdCode(dbIdCode.trim());\n    dbref.setDbSeqBegin(intFromString(dbseqBegin));\n    dbref.setIdbnsBegin(idbnsBeg.charAt(0));\n    dbref.setDbSeqEnd(intFromString(dbseqEnd));\n    dbref.setIdbnsEnd(dbinsEnd.charAt(0));\n    //System.out.println(dbref.toPDB());\n    dbrefs.add(dbref);\n}","repo_id":"9","comment":"/**\n * DBREF handler\n * <pre>\n * COLUMNS       DATA TYPE          FIELD          DEFINITION\n * ----------------------------------------------------------------\n *  1 - 6        Record name        \"DBREF \"\n *  8 - 11       IDcode             idCode         ID code of this entry.\n * 13            Character          chainID        Chain identifier.\n * 15 - 18       Integer            seqBegin       Initial sequence number\n *                                                 of the PDB sequence segment.\n * 19            AChar              insertBegin    Initial insertion code\n *                                                 of the PDB sequence segment.\n * 21 - 24       Integer            seqEnd         Ending sequence number\n *                                                 of the PDB sequence segment.\n * 25            AChar              insertEnd      Ending insertion code\n *                                                 of the PDB sequence segment.\n * 27 - 32       LString            database       Sequence database name.\n * 34 - 41       LString            dbAccession    Sequence database accession code.\n * 43 - 54      LString            dbIdCode        Sequence database\n *                                                 identification code.\n * 56 - 60      Integer            dbseqBegin      Initial sequence number of the\n *                                                 database seqment.\n * 61           AChar              idbnsBeg        Insertion code of initial residue\n *                                                 of the segment, if PDB is the\n *                                                 reference.\n * 63 - 67      Integer            dbseqEnd        Ending sequence number of the\n *                                                 database segment.\n * 68           AChar              dbinsEnd        Insertion code of the ending\n *                                                 residue of the segment, if PDB is\n *                                                 the reference.\n * <\/pre>\n */\n","repo_name":"biojava-master/","id":1184,"method_signature":"void pdb_DBREF_Handler(String)"}