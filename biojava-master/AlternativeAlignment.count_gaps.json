{"callee_method_names":[],"method_name":"AlternativeAlignment.count_gaps","method_implementation":"{\n    int i0 = i1[0];\n    int j0 = i2[0];\n    int gaps = 0;\n    for (int i = 1; i < i1.length; i++) {\n        if (Math.abs(i1[i] - i0) != 1 || (Math.abs(i2[i] - j0) != 1)) {\n            gaps += 1;\n        }\n        i0 = i1[i];\n        j0 = i2[i];\n    }\n    return gaps;\n}","repo_id":"9","comment":"/**\n * Count the number of gaps in an alignment represented by idx1,idx2.\n *\n * @param i1\n * @param i2\n * @return the number of gaps in this alignment\n */\n","repo_name":"biojava-master/","id":823,"method_signature":"int count_gaps(int[], int[])"}