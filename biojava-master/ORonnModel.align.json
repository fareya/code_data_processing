{"callee_method_names":[],"method_name":"ORonnModel.align","method_implementation":"{\n    int dResidue, r;\n    float maxScore = -1000000;\n    float rho1 = 0;\n    int maxIdx = 0;\n    float rho0 = 0;\n    short[] dbAARow = model.dbAA[dIndex];\n    int numOfIterations = model.Length[dIndex] - ORonnModel.AA_ALPHABET;\n    for (dResidue = 0; dResidue <= numOfIterations; dResidue++) {\n        // go though the database sequence for maximised alignment\n        rho1 = 0.0f;\n        for (r = 0; r < ORonnModel.AA_ALPHABET; r++) {\n            // go through the query sequence for one alignment\n            rho1 += RonnConstraint.Blosum62[seqAA[sResidue + r]][dbAARow[dResidue + r]];\n        }\n        if (rho1 > maxScore) {\n            maxScore = rho1;\n            maxIdx = dResidue;\n        }\n    }\n    for (r = 0; r < ORonnModel.AA_ALPHABET; r++) {\n        rho0 += RonnConstraint.Blosum62[dbAARow[maxIdx + r]][dbAARow[maxIdx + r]];\n    }\n    return new float[] { rho0, maxScore };\n}","repo_id":"9","comment":"// sResidue query sequence index and dIndex database sequence index\n","repo_name":"biojava-master/","id":193,"method_signature":"float[] align(int, int)"}