{"callee_method_names":[],"method_name":"StructureSequenceMatcher.removeGaps","method_implementation":"{\n    if (gapped == null)\n        return null;\n    if (gapped.length < 1)\n        return Arrays.copyOf(gapped, gapped.length);\n    final int nProts = gapped.length;\n    // length of gapped proteins\n    final int protLen = gapped[0].length;\n    // Verify that input is rectangular\n    for (int i = 0; i < nProts; i++) {\n        if (gapped[i].length != protLen) {\n            throw new IllegalArgumentException(String.format(\"Expected a rectangular array, but row 0 has %d elements \" + \"while row %d has %d.\", protLen, i, gapped[i].length));\n        }\n    }\n    // determine where gaps exist in any structures\n    boolean[] isGap = new boolean[protLen];\n    int gaps = 0;\n    for (int j = 0; j < protLen; j++) {\n        for (int i = 0; i < nProts; i++) {\n            if (gapped[i][j] == null) {\n                isGap[j] = true;\n                gaps++;\n                //go to next position\n                break;\n            }\n        }\n    }\n    // Create ungapped array\n    T[][] ungapped = Arrays.copyOf(gapped, nProts);\n    final int ungappedLen = protLen - gaps;\n    for (int i = 0; i < nProts; i++) {\n        ungapped[i] = Arrays.copyOf(gapped[i], ungappedLen);\n        int k = 0;\n        for (int j = 0; j < protLen; j++) {\n            if (!isGap[j]) {\n                //skip gaps\n                assert (gapped[i][j] != null);\n                ungapped[i][k] = gapped[i][j];\n                k++;\n            }\n        }\n        assert (k == ungappedLen);\n    }\n    return ungapped;\n}","repo_id":"9","comment":"/**\n * Creates a new list consisting of all columns of gapped where no row\n * contained a null value.\n *\n * Here, \"row\" refers to the first index and \"column\" to the second, eg\n * gapped.get(row).get(column)\n * @param gapped A rectangular matrix containing null to mark gaps\n * @return A new List without columns containing nulls\n */\n","repo_name":"biojava-master/","id":1297,"method_signature":"T[][] removeGaps(T[][])"}