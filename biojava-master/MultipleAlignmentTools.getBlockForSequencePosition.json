{"callee_method_names":["List<Integer>.get","MultipleAlignment.getBlocks","String.length","String.length"],"method_name":"MultipleAlignmentTools.getBlockForSequencePosition","method_implementation":"{\n    int seqPos = mapSeqToStruct.get(sequencePos);\n    // Check if the position selected is an aligned position\n    if (seqPos == -1)\n        return -1;\n    else {\n        // Calculate the corresponding block (by iterating all Blocks)\n        int sum = 0;\n        int block = 0;\n        for (Block b : multAln.getBlocks()) {\n            if (sum + b.length() <= seqPos) {\n                sum += b.length();\n                block++;\n                continue;\n            } else\n                break;\n        }\n        return block;\n    }\n}","repo_id":"9","comment":"/**\n * Returns the block number of a specified position in the sequence\n * alignment, given the mapping from structure to function.\n *\n * @param multAln\n *            the MultipleAlignment object from where the sequence alignment\n *            has been generated.\n * @param mapSeqToStruct\n *            the mapping between sequence and structure generated with the\n *            sequence alignment\n * @param sequencePos\n *            the position in the sequence alignment (column)\n * @return int the block index, or -1 if the position is not aligned\n */\n","repo_name":"biojava-master/","id":658,"method_signature":"int getBlockForSequencePosition(MultipleAlignment, List, int)"}