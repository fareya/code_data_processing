{"callee_method_names":["Atom.setGroup","List<Atom>.add","Atom.getCoordsAsPoint3d","Map<String, Atom>.put","Atom.getName","Atom.getAltLoc","Logger.warn","Atom.getName","Atom.getPDBserial"],"method_name":"HetatomImpl.addAtom","method_implementation":"{\n    atom.setGroup(this);\n    atoms.add(atom);\n    // TODO this check is useless, coords are always !=null since they are initialized to 0,0,0 in AtomImpl constructor. We need to review this - JD 2016-09-14\n    if (atom.getCoordsAsPoint3d() != null) {\n        // we have got coordinates!\n        setPDBFlag(true);\n    }\n    if (atomNameLookup != null) {\n        Atom existingAtom = atomNameLookup.put(atom.getName(), atom);\n        // if an atom with same name is added to the group that has to be some kind of problem,\n        // we need to warn properly\n        if (existingAtom != null) {\n            String altLocStr = \"\";\n            char altLoc = atom.getAltLoc();\n            if (altLoc != ' ')\n                altLocStr = \"(alt loc '\" + altLoc + \"')\";\n            logger.warn(\"An atom with name \" + atom.getName() + \" \" + altLocStr + \" is already present in group: \" + this.toString() + \". The atom with serial \" + existingAtom.getPDBserial() + \" will be ignored in look-ups.\");\n        }\n    }\n}","repo_id":"9","comment":"/**\n * {@inheritDoc}\n */\n","repo_name":"biojava-master/","id":979,"method_signature":"void addAtom(Atom)"}