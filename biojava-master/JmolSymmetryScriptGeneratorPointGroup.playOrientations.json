{"callee_method_names":["RotationGroup.getPointGroup","StringBuilder.append","StringBuilder.append","RotationGroup.getPointGroup","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","Polyhedron.getViewName","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","Polyhedron.getViewName","StringBuilder.toString"],"method_name":"JmolSymmetryScriptGeneratorPointGroup.playOrientations","method_implementation":"{\n    StringBuilder s = new StringBuilder();\n    // draw point group\n    if (\"C1\".equals(rotationGroup.getPointGroup())) {\n        s.append(drawFooter(\"Asymmetric\", \"white\"));\n    } else {\n        s.append(drawFooter(\"Point group \" + rotationGroup.getPointGroup(), \"white\"));\n    }\n    // draw polygon\n    // draw invisibly\n    s.append(drawPolyhedron());\n    s.append(showPolyhedron());\n    // draw axes\n    s.append(drawAxes());\n    s.append(showAxes());\n    // loop over all orientations with 4 sec. delay\n    for (int i = 0; i < getOrientationCount(); i++) {\n        s.append(deleteHeader());\n        s.append(getOrientationWithZoom(i));\n        s.append(drawHeader(polyhedron.getViewName(i), \"white\"));\n        s.append(\"delay 4;\");\n    }\n    // go back to first orientation\n    s.append(deleteHeader());\n    s.append(getOrientationWithZoom(0));\n    s.append(drawHeader(polyhedron.getViewName(0), \"white\"));\n    return s.toString();\n}","repo_id":"9","comment":"/* (non-Javadoc)\n\t * @see org.biojava.nbio.structure.quaternary.jmolScript.JMolSymmetryScriptInterface#playOrientations()\n\t */\n","repo_name":"biojava-master/","id":3395,"method_signature":"String playOrientations()"}