{"callee_method_names":[],"method_name":"Alignments.getAllPairsAlignments","method_implementation":"{\n    return runPairwiseAligners(getAllPairsAligners(sequences, type, gapPenalty, subMatrix));\n}","repo_id":"9","comment":"/**\n * Factory method which computes a sequence alignment for all {@link Sequence} pairs in the given {@link List}.\n * This method runs the alignments in parallel by submitting all of the alignments to the shared thread pool of the\n * {@link ConcurrencyTools} utility.\n *\n * @param <S> each {@link Sequence} of an alignment pair is of type S\n * @param <C> each element of an {@link AlignedSequence} is a {@link Compound} of type C\n * @param sequences the {@link List} of {@link Sequence}s to align\n * @param type chosen type from list of pairwise sequence alignment routines\n * @param gapPenalty the gap penalties used during alignment\n * @param subMatrix the set of substitution scores used during alignment\n * @return list of sequence alignment pairs\n */\n","repo_name":"biojava-master/","id":36,"method_signature":"List<SequencePair<S,C>> getAllPairsAlignments(List, PairwiseSequenceAlignerType, GapPenalty, SubstitutionMatrix)"}