{"callee_method_ids":[2560],"callee_method_names":["File.length","InputStream.read","InputStream.close","File.getName","InputStream.close","SoftHashMap.put","Logger.error","int.getMessage"],"method_name":"FlatFileCache.addToCache","method_implementation":"{\n    //logger.debug(\"storing \" + key + \" on file cache (cache size: \" + cache.size() + \")\");\n    try (InputStream is = new FileInputStream(fileToCache)) {\n        // Get the size of the file\n        long length = fileToCache.length();\n        // You cannot create an array using a long type.\n        // It needs to be an int type.\n        // Before converting to an int type, check\n        // to ensure that file is not larger than Integer.MAX_VALUE.\n        if (length > Integer.MAX_VALUE) {\n            // File is too large\n            throw new IllegalArgumentException(\"File must be <= \" + Integer.MAX_VALUE + \" bytes long\");\n        }\n        // Create the byte array to hold the data\n        byte[] bytes = new byte[(int) length];\n        // Read in the bytes\n        int offset = 0;\n        int numRead = 0;\n        while (offset < bytes.length && (numRead = is.read(bytes, offset, bytes.length - offset)) >= 0) {\n            offset += numRead;\n        }\n        // Ensure all the bytes have been read in\n        if (offset < bytes.length) {\n            is.close();\n            throw new IOException(\"Could not completely read file \" + fileToCache.getName());\n        }\n        // Close the input stream and return bytes\n        is.close();\n        cache.put(key, bytes);\n    } catch (Exception e) {\n        logger.error(\"Error adding to cache! \" + e.getMessage(), e);\n    }\n}","repo_id":"9","comment":"/**\n * The file is read and the bytes stored immediately.\n * <p/>\n * Once added, {@code fileToCache} can be modified or deleted and the cached values will not change.\n * @param key\n * @param fileToCache A readable file, of Integer.MAX bytes length or less.\n */\n","repo_name":"biojava-master/","id":2561,"method_signature":"void addToCache(String, File)"}