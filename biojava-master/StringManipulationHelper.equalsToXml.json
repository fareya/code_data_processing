{"callee_method_names":["DocumentBuilderFactory.newDocumentBuilder","DocumentBuilder.parse","String.getBytes","DocumentBuilder.parse","String.getBytes","Logger.error","Logger.error","Logger.error","Document.getDoctype","Document.getDoctype","DocumentType.getNotations","DocumentType.getNotations","NamedNodeMap.getLength","NamedNodeMap.getLength","NamedNodeMap.getLength","NamedNodeMap.item","Node.isEqualNode"],"method_name":"StringManipulationHelper.equalsToXml","method_implementation":"{\n    Document expectedDocument = null;\n    Document actualDocument = null;\n    try {\n        DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();\n        DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();\n        expectedDocument = documentBuilder.parse(new ByteArrayInputStream(expected.getBytes()));\n        actualDocument = documentBuilder.parse(new ByteArrayInputStream(actual.getBytes()));\n    } catch (ParserConfigurationException e) {\n        logger.error(\"Exception: \", e);\n        throw new RuntimeException(\"Couldn't Parse XML\", e);\n    } catch (SAXException e) {\n        logger.error(\"Exception: \", e);\n        throw new RuntimeException(\"Couldn't Parse XML\", e);\n    } catch (IOException e) {\n        logger.error(\"Exception: \", e);\n        throw new RuntimeException(\"Couldn't Parse XML\", e);\n    }\n    final DocumentType doctype1 = expectedDocument.getDoctype();\n    final DocumentType doctype2 = actualDocument.getDoctype();\n    if (doctype1 == null ^ doctype2 == null) {\n        return false;\n    } else if (doctype1 != null) /*&& doctype2 != null*/\n    {\n        NamedNodeMap expectedNotations = doctype1.getNotations();\n        NamedNodeMap actualNotations = doctype2.getNotations();\n        if (expectedNotations.getLength() == actualNotations.getLength()) {\n            for (int i = 0; i < expectedNotations.getLength(); i++) {\n                Node node = expectedNotations.item(i);\n                node.isEqualNode(null);\n            }\n        } else {\n            return false;\n        }\n    }\n    throw new UnsupportedOperationException(\"not yet implemented\");\n}","repo_id":"9","comment":"/**\n * This method is not implemented or used, never returns true\n * and should probably be removed.\n * @param expected\n * @param actual\n * @return\n * @throws UnsupportedOperationException in most cases\n */\n","repo_name":"biojava-master/","id":2620,"method_signature":"boolean equalsToXml(String, String)"}