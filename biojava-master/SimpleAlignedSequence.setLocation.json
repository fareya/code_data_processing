{"callee_method_names":["AlignedSequence<S, C>.getLength","List<Step>.get","AlignedSequence<S, C>.isGap","List<Location>.add","List<Location>.add","List<Location>.size","List<Location>.size","List<Location>.get","List<Location>.get","List<Location>.get","List<Location>.size"],"method_name":"SimpleAlignedSequence.setLocation","method_implementation":"{\n    List<Location> sublocations = new ArrayList<Location>();\n    int start = 0, step = 0, oStep = numBefore + numAfter, oMax = this.original.getLength(), pStep = 0, pMax = (prev == null) ? 0 : prev.getLength();\n    boolean inGap = true;\n    // build sublocations: pieces of sequence separated by gaps\n    for (; step < length; step++) {\n        boolean isGapStep = (steps.get(step) == Step.GAP), isGapPrev = (pStep < pMax && prev.isGap(pStep + 1));\n        if (!isGapStep && !isGapPrev) {\n            oStep++;\n            if (inGap) {\n                inGap = false;\n                start = step + 1;\n            }\n        } else if (!inGap) {\n            inGap = true;\n            sublocations.add(new SimpleLocation(start, step, Strand.UNDEFINED));\n        }\n        if (prev != null && !isGapStep) {\n            pStep++;\n        }\n    }\n    if (!inGap) {\n        sublocations.add(new SimpleLocation(start, step, Strand.UNDEFINED));\n    }\n    // combine sublocations into 1 Location\n    if (sublocations.size() == 0) {\n        location = null;\n    } else if (sublocations.size() == 1) {\n        location = sublocations.get(0);\n    } else {\n        location = new SimpleLocation(sublocations.get(0).getStart(), sublocations.get(sublocations.size() - 1).getEnd(), Strand.UNDEFINED, false, sublocations);\n    }\n    // TODO handle circular alignments\n    // check that alignment has correct number of compounds in it to fit original sequence\n    if (step != length || oStep != oMax || pStep != pMax) {\n        throw new IllegalArgumentException(\"Given sequence does not fit in alignment.\");\n    }\n}","repo_id":"9","comment":"// helper method to initialize the location\n","repo_name":"biojava-master/","id":2543,"method_signature":"void setLocation(List)"}