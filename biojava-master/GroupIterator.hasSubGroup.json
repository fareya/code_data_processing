{"callee_method_names":["Structure.nrModels","Structure.getModel","List<Chain>.size","List<Chain>.get","Chain.getAtomLength"],"method_name":"GroupIterator.hasSubGroup","method_implementation":"{\n    if (tmp_model >= structure.nrModels()) {\n        return false;\n    }\n    List<Chain> model = structure.getModel(tmp_model);\n    if (tmp_chain >= model.size()) {\n        if (fixed_model)\n            return false;\n        return hasSubGroup(tmp_model + 1, 0, 0);\n    }\n    Chain chain = model.get(tmp_chain);\n    // start search at beginning of next chain.\n    return tmp_group < chain.getAtomLength() || hasSubGroup(tmp_model, tmp_chain + 1, 0);\n}","repo_id":"9","comment":"/**\n * recursive method to determine if there is a next group. Helper\n * method for hasNext().\n * @see #hasNext\n */\n","repo_name":"biojava-master/","id":401,"method_signature":"boolean hasSubGroup(int, int, int)"}