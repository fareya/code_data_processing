{"callee_method_names":["GenbankReader<DNASequence, NucleotideCompound>.process","LinkedHashMap<String, DNASequence>.values","DNASequence.getFeaturesByType","FeatureInterface<AbstractSequence<NucleotideCompound>, NucleotideCompound>.getQualifiers","FeatureInterface<AbstractSequence<NucleotideCompound>, NucleotideCompound>.getQualifiers"],"method_name":"GenbankReaderTest.testGithub843","method_implementation":"{\n    CheckableInputStream inStream = new CheckableInputStream(this.getClass().getResourceAsStream(\"/NC_018080.gb\"));\n    assertNotNull(inStream);\n    GenbankReader<DNASequence, NucleotideCompound> genbankDNA = new GenbankReader<>(inStream, new GenericGenbankHeaderParser<>(), new DNASequenceCreator(DNACompoundSet.getDNACompoundSet()));\n    LinkedHashMap<String, DNASequence> dnaSequences = genbankDNA.process();\n    assertNotNull(dnaSequences);\n    DNASequence dna = new ArrayList<>(dnaSequences.values()).get(0);\n    assertNotNull(dna);\n    FeatureInterface<AbstractSequence<NucleotideCompound>, NucleotideCompound> tRNAFeature = dna.getFeaturesByType(\"tRNA\").get(0);\n    String anticodon = tRNAFeature.getQualifiers().get(\"anticodon\").get(0).getValue();\n    assertEquals(\"(pos:complement(1123552..1123554),aa:Leu,seq:caa)\", anticodon);\n    String transl_except = tRNAFeature.getQualifiers().get(\"transl_except\").get(0).getValue();\n    assertEquals(\"(pos:complement(1123552..1123554),aa:Leu)\", transl_except);\n}","repo_id":"9","comment":"/**\n * Biojava fails to parse anticodon and transl_except feature qualifiers when they line wrap.\n * https://github.com/biojava/biojava/issues/843\n */\n","repo_name":"biojava-master/","id":3221,"method_signature":"void testGithub843()"}