{"callee_method_names":["Matrix.eig","EigenvalueDecomposition.getV","Quat4d.normalize","Quat4d.conjugate"],"method_name":"UnitQuaternions.relativeOrientation","method_implementation":"{\n    // inverse\n    Matrix m = CalcPoint.formMatrix(moved, fixed);\n    EigenvalueDecomposition eig = m.eig();\n    double[][] v = eig.getV().getArray();\n    Quat4d q = new Quat4d(v[1][3], v[2][3], v[3][3], v[0][3]);\n    q.normalize();\n    q.conjugate();\n    return q;\n}","repo_id":"9","comment":"/**\n * Calculate the relative quaternion orientation of two arrays of points.\n *\n * @param fixed\n *            point array, coordinates will not be modified\n * @param moved\n *            point array, coordinates will not be modified\n * @return a unit quaternion representing the relative orientation, to\n *         rotate moved to bring it to the same orientation as fixed.\n */\n","repo_name":"biojava-master/","id":1517,"method_signature":"Quat4d relativeOrientation(Point3d[], Point3d[])"}