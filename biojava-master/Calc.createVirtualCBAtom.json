{"callee_method_names":["AminoAcid.getN","AminoAcid.getCA","AminoAcid.getC","AminoAcid.getCB","AminoAcid.getN","AminoAcid.getCA","AminoAcid.getC","SuperPositionSVD.superpose","Atom.setName"],"method_name":"Calc.createVirtualCBAtom","method_implementation":"{\n    AminoAcid ala = StandardAminoAcid.getAminoAcid(\"ALA\");\n    Atom aN = ala.getN();\n    Atom aCA = ala.getCA();\n    Atom aC = ala.getC();\n    Atom aCB = ala.getCB();\n    Atom[] arr1 = new Atom[3];\n    arr1[0] = aN;\n    arr1[1] = aCA;\n    arr1[2] = aC;\n    Atom[] arr2 = new Atom[3];\n    arr2[0] = amino.getN();\n    arr2[1] = amino.getCA();\n    arr2[2] = amino.getC();\n    // ok now we got the two arrays, do a Superposition:\n    SuperPositionSVD svd = new SuperPositionSVD(false);\n    Matrix4d transform = svd.superpose(Calc.atomsToPoints(arr1), Calc.atomsToPoints(arr2));\n    Matrix rotMatrix = Matrices.getRotationJAMA(transform);\n    Atom tranMatrix = getTranslationVector(transform);\n    Calc.rotate(aCB, rotMatrix);\n    Atom virtualCB = Calc.add(aCB, tranMatrix);\n    virtualCB.setName(\"CB\");\n    return virtualCB;\n}","repo_id":"9","comment":"/**\n * creates a virtual C-beta atom. this might be needed when working with GLY\n *\n * thanks to Peter Lackner for a python template of this method.\n *\n * @param amino\n *            the amino acid for which a \"virtual\" CB atom should be\n *            calculated\n * @return a \"virtual\" CB atom\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":385,"method_signature":"Atom createVirtualCBAtom(AminoAcid)"}