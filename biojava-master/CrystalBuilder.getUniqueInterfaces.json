{"callee_method_ids":[907],"callee_method_names":["Logger.warn","StructureInterfaceList.setChainOrigNamesMap"],"method_name":"CrystalBuilder.getUniqueInterfaces","method_implementation":"{\n    StructureInterfaceList set = new StructureInterfaceList();\n    // certain structures in the PDB are not macromolecules (contain no polymeric chains at all), e.g. 1ao2\n    // with the current mmCIF parsing, those will be empty since purely non-polymeric chains are removed\n    // see commit e9562781f23da0ebf3547146a307d7edd5741090\n    if (numPolyChainsAu == 0) {\n        logger.warn(\"No chains present in the structure! No interfaces will be calculated\");\n        return set;\n    }\n    // pass the chainOrigNames map in NCS case so that StructureInterfaceList can deal with original to NCS chain names conversion\n    if (chainOrigNames != null) {\n        set.setChainOrigNamesMap(chainOrigNames);\n    }\n    // initialising the visited ArrayList for keeping track of symmetry redundancy\n    initialiseVisited();\n    // the isCrystallographic() condition covers 3 cases:\n    // a) entries with expMethod X-RAY/other diffraction and defined crystalCell (most usual case)\n    // b) entries with expMethod null but defined crystalCell (e.g. PDB file with CRYST1 record but no expMethod annotation)\n    // c) entries with expMethod not X-RAY (e.g. NMR) and defined crystalCell (NMR entries do have a dummy CRYST1 record \"1 1 1 90 90 90 P1\")\n    // d) isCrystallographic will be false if the structure is crystallographic but the space group was not recognized\n    calcInterfacesCrystal(set, cutoff);\n    return set;\n}","repo_id":"9","comment":"/**\n * Returns the list of unique interfaces that the given Structure has upon\n * generation of all crystal symmetry mates. An interface is defined as any pair of chains\n * that contact, i.e. for which there is at least a pair of atoms (one from each chain) within\n * the given cutoff distance.\n * @param cutoff the distance cutoff for 2 chains to be considered in contact\n * @return\n */\n","repo_name":"biojava-master/","id":1438,"method_signature":"StructureInterfaceList getUniqueInterfaces(double)"}