{"callee_method_names":["List<String>.add","Chain.getId","Chain.getId","List<String>.get","Logger.error"],"method_name":"EntityInfo.getRepresentative","method_implementation":"{\n    List<String> chainIds = new ArrayList<>();\n    for (Chain chain : chains) {\n        chainIds.add(chain.getId());\n    }\n    Collections.sort(chainIds, String.CASE_INSENSITIVE_ORDER);\n    for (Chain chain : chains) {\n        if (chain.getId().equals(chainIds.get(0))) {\n            return chain;\n        }\n    }\n    logger.error(\"Could not find a representative chain for EntityInfo '{}'\", this.toString());\n    return null;\n}","repo_id":"9","comment":"/**\n * Get the representative Chain for this EntityInfo.\n * We choose the Chain with the first asym_id chain identifier after\n * lexicographical sorting (case insensitive),\n * e.g. chain A if EntityInfo is composed of chains A,B,C,D,E\n * @return\n */\n","repo_name":"biojava-master/","id":1339,"method_signature":"Chain getRepresentative()"}