{"callee_method_names":["Atom[].getGroup","Group.getAtom","Atom[].getName","List<Atom>.add","List<Atom>.toArray","List<Atom>.size"],"method_name":"CeCalculatorEnhanced.getAtoms","method_implementation":"{\n    List<Atom> atoms = new ArrayList<Atom>();\n    for (int i = 0; i < length; i++) {\n        Atom a;\n        if (clone) {\n            Group g = (Group) ca[i].getGroup().clone();\n            a = g.getAtom(ca[i].getName());\n        } else {\n            a = ca[i];\n        }\n        atoms.add(a);\n    }\n    return atoms.toArray(new Atom[atoms.size()]);\n}","repo_id":"9","comment":"/**\n * Copies the first length atoms from the input array\n * @param ca The array to copy\n * @param length the number of atoms to copy\n * @param clone If true, preform a deep copy, cloning the underlying Groups\n * @return An array with the first length items of ca, possibly cloning the Atoms.\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":738,"method_signature":"Atom[] getAtoms(Atom[], int, boolean)"}