{"callee_method_names":[],"method_name":"AlignerHelper.setScoreVector","method_implementation":"{\n    Last[][] pointers;\n    ensureScoringMatrixColumn(x, storing, scores);\n    if (x == xb) {\n        pointers = new Last[ye + 1][1];\n    } else {\n        pointers = new Last[ye + 1][1];\n        pointers[0] = new Last[1];\n        for (int y = 1; y < scores[x].length; y++) {\n            pointers[y][0] = setScorePoint(x, y, gep, subs[y], scores);\n            if (scores[x][y][0] <= 0) {\n                scores[x][y][0] = 0;\n                pointers[y][0] = null;\n            } else if (scores[x][y][0] > score) {\n                xyMax[0] = x;\n                xyMax[1] = y;\n                score = scores[x][y][0];\n            }\n        }\n    }\n    return pointers;\n}","repo_id":"9","comment":"/**\n * Score local alignment for a given position in the query sequence for a linear gap penalty\n * @param x\n * @param xb\n * @param yb\n * @param ye\n * @param gep\n * @param subs\n * @param storing\n * @param scores\n * @param xyMax\n * @param score\n * @return\n */\n","repo_name":"biojava-master/","id":90,"method_signature":"Last[][] setScoreVector(int, int, int, int, int, int[], boolean, int[][][], int[], int)"}