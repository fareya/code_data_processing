{"callee_method_ids":[914],"callee_method_names":["BoundingBox.overlaps"],"method_name":"Grid.fillGrid","method_implementation":"{\n    if (jbounds != null && !ibounds.overlaps(jbounds, cutoff)) {\n        //System.out.print(\"-\");\n        noOverlap = true;\n        return;\n    }\n    findFullGridIntBounds();\n    cells = new GridCell[1 + (bounds[3] - bounds[0]) / cellSize][1 + (bounds[4] - bounds[1]) / cellSize][1 + (bounds[5] - bounds[2]) / cellSize];\n    int i = 0;\n    for (Point3d atom : iAtoms) {\n        int xind = xintgrid2xgridindex(getFloor(atom.x));\n        int yind = yintgrid2ygridindex(getFloor(atom.y));\n        int zind = zintgrid2zgridindex(getFloor(atom.z));\n        if (cells[xind][yind][zind] == null) {\n            cells[xind][yind][zind] = new GridCell(this);\n        }\n        cells[xind][yind][zind].addIindex(i);\n        i++;\n    }\n    if (jAtoms == null)\n        return;\n    int j = 0;\n    for (Point3d atom : jAtoms) {\n        int xind = xintgrid2xgridindex(getFloor(atom.x));\n        int yind = yintgrid2ygridindex(getFloor(atom.y));\n        int zind = zintgrid2zgridindex(getFloor(atom.z));\n        if (cells[xind][yind][zind] == null) {\n            cells[xind][yind][zind] = new GridCell(this);\n        }\n        cells[xind][yind][zind].addJindex(j);\n        j++;\n    }\n}","repo_id":"9","comment":"/**\n * Creates the grid based on the boundaries defined by all atoms given (iAtoms and jAtoms)\n * and places the atoms in their corresponding grid cells.\n * Checks also if the i and j grid overlap, i.e. the enclosing bounds of\n * the 2 grids (i and j) are no more than one cell size apart. If they don't\n * overlap then they are too far apart so there's nothing to calculate, we set\n * the noOverlap flag and then {@link #getIndicesContacts()} will do no calculation at all.\n */\n","repo_name":"biojava-master/","id":934,"method_signature":"void fillGrid()"}