{"callee_method_names":["File.isDirectory","BufferedReader.readLine","String.length","String.substring","String.length","String.substring","EmblRecord.setEmblId","String.contains","EmblRecord.setCreatedDate","String.contains","EmblRecord.setLastUpdatedDate","EmblRecord.setSequenceDescription","LinkedList<String>.add","EmblRecord.setOrganismSpecies","EmblRecord.setOrganismClassification","EmblRecord.setOrGanelle","EmblRecord.setDatabaseCrossReference","EmblRecord.setAssemblyHeader","EmblRecord.setAssemblyInformation","EmblRecord.setConstructedSequence","EmblRecord.setFeatureHeader","EmblRecord.setFeatureTable","EmblRecord.setSequenceHeader","EmblRecord.setKeyword","EmblRecord.setEmblReference","EmblRecord.setAccessionNumber","EmblRecord.setSequence","StringBuilder.toString"],"method_name":"EmblReader.process","method_implementation":"{\n    EmblRecord emblRecord = new EmblRecord();\n    StringBuilder sequence = new StringBuilder(\"\");\n    LinkedList<EmblReference> emblReferences = new LinkedList<>();\n    EmblReference emblReference = new EmblReference();\n    LinkedList<String> accessionNumber = new LinkedList<>();\n    LinkedList<String> keyword = new LinkedList<>();\n    if (file == null)\n        throw new NullPointerException(\"file can't be null\");\n    if (file.isDirectory())\n        throw new IllegalArgumentException(\"the file can't be a directory\");\n    try (FileReader fileReader = new FileReader(file)) {\n        String line = \"\";\n        String lineIdentifier;\n        String lineInfo;\n        try (BufferedReader bufferedReader = new BufferedReader(fileReader)) {\n            while ((line = bufferedReader.readLine()) != null) {\n                if (line.length() > 1) {\n                    lineInfo = line.substring(2, line.length()).trim();\n                    lineIdentifier = line.substring(0, 2);\n                    if (\"ID\".equals(lineIdentifier))\n                        emblRecord.setEmblId(populateID(lineInfo));\n                    else if (\"AC\".equals(lineIdentifier))\n                        populateAccessionNumber(line, accessionNumber);\n                    else if (\"DT\".equals(lineIdentifier) && line.contains(\"Created\"))\n                        emblRecord.setCreatedDate(lineInfo);\n                    else if (\"DT\".equals(lineIdentifier) && line.contains(\"updated\"))\n                        emblRecord.setLastUpdatedDate(lineInfo);\n                    else if (\"DE\".equals(lineIdentifier))\n                        emblRecord.setSequenceDescription(lineInfo);\n                    else if (\"KW\".equals(lineIdentifier))\n                        keyword.add(lineInfo);\n                    else if (\"OS\".equals(lineIdentifier))\n                        emblRecord.setOrganismSpecies(lineInfo);\n                    else if (\"OC\".equals(lineIdentifier))\n                        emblRecord.setOrganismClassification(lineInfo);\n                    else if (\"OG\".equals(lineIdentifier))\n                        emblRecord.setOrGanelle(lineInfo);\n                    else if (\"RN\".equals(lineIdentifier) || \"RP\".equals(lineIdentifier) || \"RX\".equals(lineIdentifier) || \"RG\".equals(lineIdentifier) || \"RA\".equals(lineIdentifier) || \"RT\".equals(lineIdentifier) || \"RL\".equals(lineIdentifier))\n                        populateEmblReferences(lineIdentifier, lineInfo, emblReference, emblReferences);\n                    else if (\"DR\".equals(lineIdentifier))\n                        emblRecord.setDatabaseCrossReference(lineInfo);\n                    else if (\"AH\".equals(lineIdentifier))\n                        emblRecord.setAssemblyHeader(lineInfo);\n                    else if (\"AS\".equals(lineIdentifier))\n                        emblRecord.setAssemblyInformation(lineInfo);\n                    else if (\"CO\".equals(lineIdentifier))\n                        emblRecord.setConstructedSequence(lineInfo);\n                    else if (\"FH\".equals(lineIdentifier))\n                        emblRecord.setFeatureHeader(lineInfo);\n                    else if (\"FT\".equals(lineIdentifier))\n                        emblRecord.setFeatureTable(lineInfo);\n                    else if (\"SQ\".equals(lineIdentifier))\n                        emblRecord.setSequenceHeader(lineInfo);\n                    else if (\"  \".equals(lineIdentifier) && !\"//\".equals(lineIdentifier))\n                        populateSequence(line, sequence);\n                    else if (\"//\".equals(lineIdentifier)) {\n                        emblRecord.setKeyword(keyword);\n                        emblRecord.setEmblReference(emblReferences);\n                        emblRecord.setAccessionNumber(accessionNumber);\n                        emblRecord.setSequence(sequence.toString());\n                    }\n                }\n            }\n        }\n    }\n    return emblRecord;\n}","repo_id":"9","comment":"/**\n * The parsing is done in this method.<br>\n * This method tries to process all the Embl records\n * in the File , closes the underlying resource,\n * and return the results in object of EmblRecord.<br>\n *\n * @return EmblRecord containing all the parsed Embl records\n * @throws IOException\n */\n","repo_name":"biojava-master/","id":2763,"method_signature":"EmblRecord process(File)"}