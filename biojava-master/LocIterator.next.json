{"callee_method_ids":[2408,2408,2407],"callee_method_names":["Location.suffix","Location.suffix","Location.prefix","int.toString"],"method_name":"LocIterator.next","method_implementation":"{\n    if (windowSize <= 0) {\n        throw new IllegalArgumentException(\"Window size must be positive.\");\n    }\n    if (increment == 0) {\n        throw new IllegalArgumentException(\"Increment must be non-zero.\");\n    }\n    Location r;\n    try {\n        if (increment > 0) {\n            r = mBounds.suffix(mPosition).prefix(windowSize);\n        } else {\n            if (mPosition == 0) {\n                r = mBounds.suffix(-windowSize);\n            } else {\n                r = mBounds.prefix(mPosition).suffix(-windowSize);\n            }\n        }\n        mPosition += increment;\n    } catch (Exception e) {\n        throw new IndexOutOfBoundsException(e.toString());\n    }\n    return r;\n}","repo_id":"9","comment":"/**\n * Get next window of specified size, then increment position by specified amount.\n *\n * @return Location of next window.\n * @param windowSize Size of window to get.\n * @param increment Amount by which to shift position. If increment is positive, the position is shifted\n * toward the end of the bounding location; if increment is negative, the position is shifted toward\n * the beginning of the bounding location.\n * @throws IndexOutOfBoundsException The next window was not within the bounding location.\n * @throws IllegalArgumentException The increment was zero, or windowSize was not positive.\n */\n","repo_name":"biojava-master/","id":2469,"method_signature":"Location next(int, int)"}