{"callee_method_names":["Document.getDocumentElement","Element.getTextContent","String.trim","ArrayList<String>.add","Element.getTextContent","String.trim","ArrayList<String>.add","Element.getTextContent","String.trim","ArrayList<String>.add","Element.getTextContent","String.trim","ArrayList<String>.add"],"method_name":"UniprotProxySequenceReader.getProteinAliases","method_implementation":"{\n    ArrayList<String> aliasList = new ArrayList<String>();\n    if (uniprotDoc == null) {\n        return aliasList;\n    }\n    Element uniprotElement = uniprotDoc.getDocumentElement();\n    Element entryElement = XMLHelper.selectSingleElement(uniprotElement, \"entry\");\n    Element proteinElement = XMLHelper.selectSingleElement(entryElement, \"protein\");\n    ArrayList<Element> keyWordElementList;\n    getProteinAliasesFromNameGroup(aliasList, proteinElement);\n    keyWordElementList = XMLHelper.selectElements(proteinElement, \"component\");\n    for (Element element : keyWordElementList) {\n        getProteinAliasesFromNameGroup(aliasList, element);\n    }\n    keyWordElementList = XMLHelper.selectElements(proteinElement, \"domain\");\n    for (Element element : keyWordElementList) {\n        getProteinAliasesFromNameGroup(aliasList, element);\n    }\n    keyWordElementList = XMLHelper.selectElements(proteinElement, \"submittedName\");\n    for (Element element : keyWordElementList) {\n        getProteinAliasesFromNameGroup(aliasList, element);\n    }\n    keyWordElementList = XMLHelper.selectElements(proteinElement, \"cdAntigenName\");\n    for (Element element : keyWordElementList) {\n        String cdAntigenName = element.getTextContent();\n        if (null != cdAntigenName && !cdAntigenName.trim().isEmpty()) {\n            aliasList.add(cdAntigenName);\n        }\n    }\n    keyWordElementList = XMLHelper.selectElements(proteinElement, \"innName\");\n    for (Element element : keyWordElementList) {\n        String cdAntigenName = element.getTextContent();\n        if (null != cdAntigenName && !cdAntigenName.trim().isEmpty()) {\n            aliasList.add(cdAntigenName);\n        }\n    }\n    keyWordElementList = XMLHelper.selectElements(proteinElement, \"biotechName\");\n    for (Element element : keyWordElementList) {\n        String cdAntigenName = element.getTextContent();\n        if (null != cdAntigenName && !cdAntigenName.trim().isEmpty()) {\n            aliasList.add(cdAntigenName);\n        }\n    }\n    keyWordElementList = XMLHelper.selectElements(proteinElement, \"allergenName\");\n    for (Element element : keyWordElementList) {\n        String cdAntigenName = element.getTextContent();\n        if (null != cdAntigenName && !cdAntigenName.trim().isEmpty()) {\n            aliasList.add(cdAntigenName);\n        }\n    }\n    return aliasList;\n}","repo_id":"9","comment":"/**\n * Pull uniprot protein aliases associated with this sequence\n * @return\n * @throws XPathExpressionException\n */\n","repo_name":"biojava-master/","id":3130,"method_signature":"ArrayList<String> getProteinAliases()"}