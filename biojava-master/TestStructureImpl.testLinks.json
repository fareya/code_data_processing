{"callee_method_names":["Structure.addModel","Structure.addChain","Chain.getStructure","Chain.addGroup","Group.getChain","Group.addAtom","Group.getChain","Atom.clone","Structure.addModel","Structure.addChain","Chain.addGroup","Group.addAtom","Atom.getGroup","Atom.getGroup","Group.clone","Group.getAtom","Structure.addModel","Structure.addChain","Chain.addGroup","Group.getChain","Atom.getGroup","Group.getChain","Atom.getGroup"],"method_name":"TestStructureImpl.testLinks","method_implementation":"{\n    // Create new Structure and assign one Chain to it\n    Structure s1 = new StructureImpl();\n    s1.addModel(new ArrayList<Chain>(1));\n    Chain c1 = new ChainImpl();\n    s1.addChain(c1);\n    // Test that chains parent is s1\n    assertEquals(s1, c1.getStructure());\n    // Populate the Chain with one Group\n    Group g1 = new HetatomImpl();\n    c1.addGroup(g1);\n    // Test that the group parent is c1\n    assertEquals(c1, g1.getChain());\n    // Add a single Atom to the Group\n    Atom a1 = new AtomImpl();\n    g1.addAtom(a1);\n    // Test that the atom parent is g1\n    assertEquals(c1, g1.getChain());\n    // Now clone the Atom and assign it to a second structure\n    Atom a2 = (Atom) a1.clone();\n    Structure s2 = new StructureImpl();\n    s2.addModel(new ArrayList<Chain>(1));\n    Chain c2 = new ChainImpl();\n    s2.addChain(c2);\n    Group g2 = new HetatomImpl();\n    c2.addGroup(g2);\n    g2.addAtom(a2);\n    // Test correct parent links in Atoms\n    assertEquals(g1, a1.getGroup());\n    assertEquals(g2, a2.getGroup());\n    // Now clone the Group and assign it to new third structure\n    Group g3 = (Group) g1.clone();\n    Atom a3 = g3.getAtom(0);\n    Structure s3 = new StructureImpl();\n    s3.addModel(new ArrayList<Chain>(1));\n    Chain c3 = new ChainImpl();\n    s3.addChain(c3);\n    c3.addGroup(g3);\n    // Test correct parent links in Groups and Atoms\n    assertEquals(c1, g1.getChain());\n    assertEquals(g1, a1.getGroup());\n    assertEquals(c3, g3.getChain());\n    assertEquals(g3, a3.getGroup());\n}","repo_id":"9","comment":"/**\n * This tests the correctness of the Links between the different objects\n * that create a Structure (Chains, Groups, Atoms). The correct behavior is\n * that objects higher in the hierarchy should set the links of lower level\n * objects.\n */\n","repo_name":"biojava-master/","id":2314,"method_signature":"void testLinks()"}