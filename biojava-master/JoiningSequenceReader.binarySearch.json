{"callee_method_names":[],"method_name":"JoiningSequenceReader.binarySearch","method_implementation":"{\n    int[] minSeqIndex = getMinSequenceIndex();\n    int[] maxSeqIndex = getMaxSequenceIndex();\n    int low = 0;\n    int high = minSeqIndex.length - 1;\n    while (low <= high) {\n        //Go to the mid point in the array\n        int mid = (low + high) >>> 1;\n        //Get the max position represented by this Sequence\n        int midMinPosition = minSeqIndex[mid];\n        int midMaxPosition = maxSeqIndex[mid];\n        //if current position is greater than the current bounds then\n        //increase search space\n        if (midMinPosition < position && midMaxPosition < position) {\n            low = mid + 1;\n        } else //if current position is less than current bounds then decrease\n        //search space\n        if (midMinPosition > position && midMaxPosition > position) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    throw new IndexOutOfBoundsException(\"Given position \" + position + \" does not map into this Sequence\");\n}","repo_id":"9","comment":"/**\n * Scans through the sequence index arrays using binary search\n */\n","repo_name":"biojava-master/","id":2981,"method_signature":"int binarySearch(int)"}