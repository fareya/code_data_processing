{"callee_method_ids":[2421],"callee_method_names":["Pattern.split","String[].trim","String[].trim","String[].trim","String[].trim","String[].trim","String[].trim","String[].trim","Location.isNegative","String[].trim","String.split"],"method_name":"GFF3Reader.parseLine","method_implementation":"{\n    //FIXME update to use regex split on tabs\n    //FIXME better errors on parse failures\n    String[] line = p.split(s);\n    String seqname = line[0].trim();\n    String source = line[1].trim();\n    String type = line[2].trim();\n    String locStart = line[3].trim();\n    String locEnd = line[4].trim();\n    Double score;\n    try {\n        score = Double.parseDouble(line[5].trim());\n    } catch (Exception e) {\n        score = 0.0;\n    }\n    char strand = line[6].trim().charAt(0);\n    //added by scooter willis to deal with glimmer predictions that\n    //have the start after the end but is a negative strand\n    int locationStart = Integer.parseInt(locStart);\n    int locationEnd = Integer.parseInt(locEnd);\n    if (locationStart > locationEnd) {\n        int temp = locationStart;\n        locationStart = locationEnd;\n        locationEnd = temp;\n    }\n    Location location = Location.fromBio(locationStart, locationEnd, strand);\n    assert (strand == '-') == location.isNegative();\n    int frame;\n    try {\n        frame = Integer.parseInt(line[7].trim());\n    } catch (Exception e) {\n        frame = -1;\n    }\n    String attributes = line[8];\n    /*    //grab everything until end of line (or # comment)\n\t\tstart = end + 1;\n\t\tend = s.indexOf('#', start);\n\t\tString attributes = null;\n\t\tif (end < 0) {\n\t\t\tattributes = new String(s.substring(start));\n\t\t} else {\n\t\t\tattributes = new String(s.substring(start, end));\n\t\t}\n */\n    return new Feature(seqname, source, type, location, score, frame, attributes.split(\"#\")[0]);\n}","repo_id":"9","comment":"/**\n * create Feature from line of GFF file\n */\n","repo_name":"biojava-master/","id":2389,"method_signature":"Feature parseLine(String)"}