{"callee_method_ids":[1347,1352,1346],"callee_method_names":["String.trim","Logger.warn","ArrayList.add","Logger.debug","EntityInfo.setMolId","EntityInfo.setType","EntityInfo.setDescription","StringTokenizer.hasMoreTokens","StringTokenizer.nextToken","List<String>.add","HashMap.put","EntityInfo.getMolId","StringTokenizer.hasMoreTokens","List<String>.add","StringTokenizer.nextToken","EntityInfo.setSynonyms","StringTokenizer.hasMoreTokens","List<String>.add","StringTokenizer.nextToken","EntityInfo.setEcNums","EntityInfo.setFragment","EntityInfo.setEngineered","EntityInfo.setMutation","EntityInfo.setBiologicalUnit","EntityInfo.setDetails"],"method_name":"PDBFileParser.compndValueSetter","method_implementation":"{\n    value = value.trim().replace(\";\", \"\");\n    if (\"MOL_ID:\".equals(field)) {\n        int i = -1;\n        try {\n            i = Integer.valueOf(value);\n        } catch (NumberFormatException e) {\n            logger.warn(\"Value '{}' does not look like a number, while trying to parse COMPND MOL_ID line.\", value);\n        }\n        if (i > 0 && prevMolId != i) {\n            if (current_compound != null)\n                entities.add(current_compound);\n            logger.debug(\"Initialising new Compound with mol_id {}\", i);\n            current_compound = new EntityInfo();\n            current_compound.setMolId(i);\n            // we will set polymer for all defined compounds in PDB file (non-polymer compounds are not defined in header) - JD 2016-03-25\n            current_compound.setType(EntityType.POLYMER);\n            prevMolId = i;\n        }\n    }\n    // if for some reason (e.g. missing mol_id line) the current_compound is null we can't add anything to it, return\n    if (current_compound == null) {\n        return;\n    }\n    if (\"MOLECULE:\".equals(field)) {\n        current_compound.setDescription(value);\n    }\n    if (\"CHAIN:\".equals(field)) {\n        //System.out.println(value);\n        StringTokenizer chainTokens = new StringTokenizer(value, \",\");\n        List<String> chains = new ArrayList<String>();\n        while (chainTokens.hasMoreTokens()) {\n            String chainID = chainTokens.nextToken().trim();\n            // NULL is used in old PDB files to represent empty chain DI\n            if (\"NULL\".equals(chainID))\n                chainID = \" \";\n            chains.add(chainID);\n        }\n        compoundMolIds2chainIds.put(current_compound.getMolId(), chains);\n    }\n    if (\"SYNONYM:\".equals(field)) {\n        StringTokenizer synonyms = new StringTokenizer(value, \",\");\n        List<String> names = new ArrayList<String>();\n        while (synonyms.hasMoreTokens()) {\n            names.add(synonyms.nextToken());\n            current_compound.setSynonyms(names);\n        }\n    }\n    if (\"EC:\".equals(field)) {\n        StringTokenizer ecNumTokens = new StringTokenizer(value, \",\");\n        List<String> ecNums = new ArrayList<String>();\n        while (ecNumTokens.hasMoreTokens()) {\n            ecNums.add(ecNumTokens.nextToken());\n            current_compound.setEcNums(ecNums);\n        }\n    }\n    if (\"FRAGMENT:\".equals(field)) {\n        current_compound.setFragment(value);\n    }\n    if (\"ENGINEERED:\".equals(field)) {\n        current_compound.setEngineered(value);\n    }\n    if (\"MUTATION:\".equals(field)) {\n        current_compound.setMutation(value);\n    }\n    if (\"BIOLOGICAL_UNIT:\".equals(field)) {\n        current_compound.setBiologicalUnit(value);\n    }\n    if (\"OTHER_DETAILS:\".equals(field)) {\n        current_compound.setDetails(value);\n    }\n}","repo_id":"9","comment":"/**\n * Set the value in the current molId object\n * @param field\n * @param value\n */\n","repo_name":"biojava-master/","id":1172,"method_signature":"void compndValueSetter(String, String)"}