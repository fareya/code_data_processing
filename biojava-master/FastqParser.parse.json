{"callee_method_ids":[2353,2354,2353],"callee_method_names":["FastqParserLineProcessor.getState","ParseListener.complete","FastqParserLineProcessor.setState","FastqParserLineProcessor.getState"],"method_name":"FastqParser.parse","method_implementation":"{\n    if (readable == null) {\n        throw new IllegalArgumentException(\"readable must not be null\");\n    }\n    FastqParserLineProcessor lineProcessor = new FastqParserLineProcessor(listener);\n    CharStreams.readLines(readable, lineProcessor);\n    if (lineProcessor.getState() == State.COMPLETE) {\n        listener.complete();\n        lineProcessor.setState(State.DESCRIPTION);\n    }\n    if (lineProcessor.getState() != State.DESCRIPTION) {\n        // at line \" + lineNumber);\n        throw new IOException(\"truncated sequence\");\n    }\n}","repo_id":"9","comment":"/**\n * Parse the specified readable.\n *\n * @param readable readable, must not be null\n * @param listener low-level event based parser callback, must not be null\n * @throws IOException if an I/O error occurs\n */\n","repo_name":"biojava-master/","id":2350,"method_signature":"void parse(Readable, ParseListener)"}