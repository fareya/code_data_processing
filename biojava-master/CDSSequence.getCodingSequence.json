{"callee_method_names":["String.length","String.charAt","CompoundSet<NucleotideCompound>.getCompoundForString","StringBuilder.append","NucleotideCompound.getComplement","StringBuilder.toString"],"method_name":"CDSSequence.getCodingSequence","method_implementation":"{\n    String sequence = this.getSequenceAsString(getBioBegin(), getBioEnd(), getStrand());\n    if (getStrand() == Strand.NEGATIVE) {\n        //need to take complement of sequence because it is negative and we are returning a coding sequence\n        StringBuilder b = new StringBuilder(getLength());\n        CompoundSet<NucleotideCompound> compoundSet = this.getCompoundSet();\n        for (int i = 0; i < sequence.length(); i++) {\n            String nucleotide = String.valueOf(sequence.charAt(i));\n            NucleotideCompound nucleotideCompound = compoundSet.getCompoundForString(nucleotide);\n            b.append(nucleotideCompound.getComplement().getShortName());\n        }\n        sequence = b.toString();\n    }\n    //  sequence = sequence.substring(phase);\n    return sequence;\n}","repo_id":"9","comment":"/**\n * A CDS sequence if negative stranded needs to be reverse complement\n * to represent the actual coding sequence. When getting a ProteinSequence\n * from a TranscriptSequence this method is callled for each CDSSequence\n * {@link http://www.sequenceontology.org/gff3.shtml}\n * {@link http://biowiki.org/~yam/bioe131/GFF.ppt}\n * @return coding sequence\n */\n","repo_name":"biojava-master/","id":3077,"method_signature":"String getCodingSequence()"}