{"callee_method_names":["List<Atom>.isEmpty","List<Atom>.isEmpty","Atom.getAltLoc","Atom.getAltLoc","Atom.getAltLoc","Atom.getAltLoc","Atom.getAltLoc","Atom.getAltLoc","Logger.debug","Atom.toString","Atom.getAltLoc","Atom.toString","Atom.getAltLoc","Logger.debug","Atom.getPDBserial","Atom.getName","Atom.getPDBserial","Atom.getName","Logger.debug","Atom.getPDBserial","Atom.getName","Atom.getPDBserial","Atom.getName","Logger.debug","Atom.getPDBserial","Atom.getName","Atom.getPDBserial","Atom.getName"],"method_name":"BondMaker.formBondAltlocAware","method_implementation":"{\n    List<Atom> a1s = getAtoms(g1, name1);\n    List<Atom> a2s = getAtoms(g2, name2);\n    if (a1s.isEmpty() || a2s.isEmpty()) {\n        // some structures may be incomplete and not store info\n        // about all of their atoms\n        return;\n    }\n    for (Atom a1 : a1s) {\n        for (Atom a2 : a2s) {\n            if (a1.getAltLoc() != null && a2.getAltLoc() != null && !a1.getAltLoc().equals(' ') && !a2.getAltLoc().equals(' ') && !a1.getAltLoc().equals(a2.getAltLoc())) {\n                logger.debug(\"Skipping bond between atoms with differently named alt locs {} (altLoc '{}') -- {} (altLoc '{}')\", a1.toString(), a1.getAltLoc(), a2.toString(), a2.getAltLoc());\n                continue;\n            }\n            if (maxAllowedLength < 0) {\n                // negative maxAllowedLength means we don't check distance and always add bond\n                logger.debug(\"Forming bond between atoms {}-{} and {}-{} with bond order {}\", a1.getPDBserial(), a1.getName(), a2.getPDBserial(), a2.getName(), bondOrder);\n                new BondImpl(a1, a2, bondOrder);\n            } else {\n                if (Calc.getDistance(a1, a2) < maxAllowedLength) {\n                    logger.debug(\"Forming bond between atoms {}-{} and {}-{} with bond order {}. Distance is below {}\", a1.getPDBserial(), a1.getName(), a2.getPDBserial(), a2.getName(), bondOrder, maxAllowedLength);\n                    new BondImpl(a1, a2, bondOrder);\n                } else {\n                    logger.debug(\"Not forming bond between atoms {}-{} and {}-{} with bond order {}, because distance is above {}\", a1.getPDBserial(), a1.getName(), a2.getPDBserial(), a2.getName(), bondOrder, maxAllowedLength);\n                }\n            }\n        }\n    }\n}","repo_id":"9","comment":"/**\n * Form bond between atoms of the given names and groups, respecting alt loc rules to form bonds:\n * no bonds between differently named alt locs (that are not the default alt loc '.')\n * and multiple bonds for default alt loc to named alt loc.\n * @param g1 first group\n * @param name1 name of atom in first group\n * @param g2 second group\n * @param name2 name of atom in second group\n * @param maxAllowedLength max length, if atoms distance above this length no bond will be added. If negative no check on distance is performed.\n * @param bondOrder the bond order to be set in the created bond(s)\n */\n","repo_name":"biojava-master/","id":1289,"method_signature":"void formBondAltlocAware(Group, String, Group, String, double, int)"}