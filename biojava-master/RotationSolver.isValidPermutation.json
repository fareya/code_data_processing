{"callee_method_names":["List<Integer>.size","HashMap.containsKey","HashMap.get","HashMap.put"],"method_name":"RotationSolver.isValidPermutation","method_implementation":"{\n    if (permutation.size() == 0) {\n        return null;\n    }\n    // cached value\n    if (evaluatedPermutations.containsKey(permutation)) {\n        return evaluatedPermutations.get(permutation);\n    }\n    // check if permutation is allowed\n    if (!isAllowedPermutation(permutation)) {\n        evaluatedPermutations.put(permutation, null);\n        return null;\n    }\n    // check if superimposes\n    Rotation rot = superimposePermutation(permutation);\n    return rot;\n}","repo_id":"9","comment":"/**\n * Checks if a particular permutation is allowed and superimposes well.\n * Caches results.\n * @param permutation\n * @return null if invalid, or a rotation if valid\n */\n","repo_name":"biojava-master/","id":1903,"method_signature":"Rotation isValidPermutation(List)"}