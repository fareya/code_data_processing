{"callee_method_names":["Structure.nrModels","Structure.getModel","List<Chain>.size","List<Chain>.get","Chain.getAtomLength","Chain.getAtomGroup"],"method_name":"GroupIterator.getNextGroup","method_implementation":"{\n    if (tmp_model >= structure.nrModels()) {\n        throw new NoSuchElementException(\"arrived at end of structure!\");\n    }\n    List<Chain> model = structure.getModel(tmp_model);\n    if (tmp_chain >= model.size()) {\n        if (fixed_model)\n            throw new NoSuchElementException(\"arrived at end of model!\");\n        return getNextGroup(tmp_model + 1, 0, 0);\n    }\n    Chain chain = model.get(tmp_chain);\n    if (tmp_group >= chain.getAtomLength()) {\n        // start search at beginning of next chain.\n        return getNextGroup(tmp_model, tmp_chain + 1, 0);\n    } else {\n        current_model_pos = tmp_model;\n        current_chain_pos = tmp_chain;\n        current_group_pos = tmp_group;\n        return chain.getAtomGroup(current_group_pos);\n    }\n}","repo_id":"9","comment":"/**\n * recursive method to retrieve the next group. Helper\n * method for gext().\n * @see #next\n */\n","repo_name":"biojava-master/","id":405,"method_signature":"Group getNextGroup(int, int, int)"}