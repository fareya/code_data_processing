{"callee_method_ids":[1483],"callee_method_names":["MomentsOfInertia.addPoint","Quat4d.set","MomentsOfInertia.getOrientationMatrix"],"method_name":"UnitQuaternions.orientation","method_implementation":"{\n    MomentsOfInertia moi = new MomentsOfInertia();\n    for (Point3d p : points) moi.addPoint(p, 1.0);\n    // Convert rotation matrix to quaternion\n    Quat4d quat = new Quat4d();\n    quat.set(moi.getOrientationMatrix());\n    return quat;\n}","repo_id":"9","comment":"/**\n * The orientation represents the rotation of the principal axes with\n * respect to the axes of the coordinate system (unit vectors [1,0,0],\n * [0,1,0] and [0,0,1]).\n * <p>\n * The orientation can be expressed as a unit quaternion.\n *\n * @param points\n *            array of Point3d\n * @return the orientation of the point cloud as a unit quaternion\n */\n","repo_name":"biojava-master/","id":1513,"method_signature":"Quat4d orientation(Point3d[])"}