{"callee_method_names":["List<Integer>.isEmpty","List<Integer>.add"],"method_name":"SymmetryTools.getValidFolds","method_implementation":"{\n    List<Integer> denominators = new ArrayList<Integer>();\n    if (stoichiometry.isEmpty())\n        return denominators;\n    int nChains = Collections.max(stoichiometry);\n    // Remove duplicate stoichiometries\n    Set<Integer> nominators = new TreeSet<Integer>(stoichiometry);\n    // find common denominators\n    for (int d = 1; d <= nChains; d++) {\n        boolean isDivisable = true;\n        for (Integer n : nominators) {\n            if (n % d != 0) {\n                isDivisable = false;\n                break;\n            }\n        }\n        if (isDivisable) {\n            denominators.add(d);\n        }\n    }\n    return denominators;\n}","repo_id":"9","comment":"/**\n * Find valid symmetry orders for a given stoichiometry. For instance, an\n * A6B4 protein would give [1,2] because (A6B4)1 and (A3B2)2 are valid\n * decompositions.\n *\n * @param stoichiometry\n *            List giving the number of copies in each Subunit cluster\n * @return The common factors of the stoichiometry\n */\n","repo_name":"biojava-master/","id":2051,"method_signature":"List<Integer> getValidFolds(List)"}