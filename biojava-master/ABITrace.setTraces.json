{"callee_method_names":["DataInputStream.readShort","DataInputStream.readShort","DataInputStream.readShort","DataInputStream.readShort"],"method_name":"ABITrace.setTraces","method_implementation":"{\n    //alphabetical, 0=A, 1=C, 2=G, 3=T\n    int[] pointers = new int[4];\n    int[] datas = new int[4];\n    char[] order = new char[4];\n    datas[0] = DATA9;\n    datas[1] = DATA10;\n    datas[2] = DATA11;\n    datas[3] = DATA12;\n    for (int i = 0; i <= 3; i++) {\n        order[i] = (char) traceData[FWO + i];\n    }\n    for (int i = 0; i <= 3; i++) {\n        switch(order[i]) {\n            case 'A':\n            case 'a':\n                pointers[0] = datas[i];\n                break;\n            case 'C':\n            case 'c':\n                pointers[1] = datas[i];\n                break;\n            case 'G':\n            case 'g':\n                pointers[2] = datas[i];\n                break;\n            case 'T':\n            case 't':\n                pointers[3] = datas[i];\n                break;\n            default:\n                throw new IllegalArgumentException(\"Trace contains illegal values.\");\n        }\n    }\n    A = new int[traceLength];\n    C = new int[traceLength];\n    G = new int[traceLength];\n    T = new int[traceLength];\n    for (int i = 0; i <= 3; i++) {\n        byte[] qq = new byte[traceLength * 2];\n        getSubArray(qq, pointers[i]);\n        DataInputStream dis = new DataInputStream(new ByteArrayInputStream(qq));\n        for (int x = 0; x <= traceLength - 1; x++) {\n            try {\n                if (i == 0)\n                    A[x] = (int) dis.readShort();\n                if (i == 1)\n                    C[x] = (int) dis.readShort();\n                if (i == 2)\n                    G[x] = (int) dis.readShort();\n                if (i == 3)\n                    T[x] = (int) dis.readShort();\n            } catch (//This shouldn't happen. If it does something must be seriously wrong.\n            IOException e) {\n                throw new IllegalStateException(\"Unexpected IOException encountered while manipulating internal streams.\");\n            }\n        }\n    }\n    return;\n}","repo_id":"9","comment":"/**\n * Shuffle the pointers to point to the proper spots in the trace, then load the\n * traces into their arrays.\n */\n","repo_name":"biojava-master/","id":2870,"method_signature":"void setTraces()"}