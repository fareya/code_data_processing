{"callee_method_ids":[771],"callee_method_names":["StartupParameters.isOutputPDB","AFPChain.getAlgorithmName","AFPChain.getVersion","AFPChain.getName1","AFPChain.getName2","Structure.toPDB","StartupParameters.getOutFile","StartupParameters.getSaveOutputDir","StartupParameters.getSaveOutputDir","AFPChain.getName1","AFPChain.getName2","StartupParameters.getSaveOutputDir","StartupParameters.getOutFile","StartupParameters.getOutFile","PrintStream.println","PrintStream.close"],"method_name":"AbstractUserArgumentProcessor.checkWriteFile","method_implementation":"{\n    String output = null;\n    if (params.isOutputPDB()) {\n        if (!GuiWrapper.isGuiModuleInstalled()) {\n            System.err.println(\"The biojava-structure-gui module is not installed. Please install!\");\n            output = AFPChainXMLConverter.toXML(afpChain, ca1, ca2);\n        } else {\n            Structure tmp = AFPAlignmentDisplay.createArtificalStructure(afpChain, ca1, ca2);\n            output = \"TITLE  \" + afpChain.getAlgorithmName() + \" \" + afpChain.getVersion() + \" \";\n            output += afpChain.getName1() + \" vs. \" + afpChain.getName2();\n            output += newline;\n            output += tmp.toPDB();\n        }\n    } else if (params.getOutFile() != null) {\n        // output by default is XML\n        // write the XML to a file...\n        output = AFPChainXMLConverter.toXML(afpChain, ca1, ca2);\n    } else if (params.getSaveOutputDir() != null) {\n        output = AFPChainXMLConverter.toXML(afpChain, ca1, ca2);\n    }\n    // no output requested.\n    if (output == null)\n        return;\n    String fileName = null;\n    if (dbsearch) {\n        if (params.getSaveOutputDir() != null) {\n            // we currently don't have a naming convention for how to store results for custom files\n            // they will be re-created on the fly\n            if (afpChain.getName1().startsWith(\"file:\") || afpChain.getName2().startsWith(\"file:\"))\n                return;\n            fileName = params.getSaveOutputDir();\n            fileName += getAutoFileName(afpChain);\n        } else {\n            return;\n        }\n        //\n        //else {\n        //\tfileName = getAutoFileName(afpChain);\n        //}\n    } else if (params.getOutFile() != null) {\n        fileName = params.getOutFile();\n    }\n    if (fileName == null) {\n        System.err.println(\"Can't write outputfile. Either provide a filename using -outFile or set -autoOutputFile to true .\");\n        System.exit(1);\n        return;\n    }\n    //System.out.println(\"writing results to \" + fileName + \" \" + params.getSaveOutputDir());\n    // declare a file output object\n    FileOutputStream out;\n    // declare a print stream object\n    PrintStream p;\n    // Create a new file output stream\n    out = new FileOutputStream(fileName);\n    // Connect print stream to the output stream\n    p = new PrintStream(out);\n    p.println(output);\n    p.close();\n}","repo_id":"9","comment":"/**\n * check if the result should be written to the local file system\n *\n * @param afpChain\n * @param ca1\n * @param ca2\n * @throws IOException If an error occurs when writing the afpChain to XML\n * @throws ClassNotFoundException If an error occurs when invoking jmol\n * @throws NoSuchMethodException If an error occurs when invoking jmol\n * @throws InvocationTargetException If an error occurs when invoking jmol\n * @throws IllegalAccessException If an error occurs when invoking jmol\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":705,"method_signature":"void checkWriteFile(AFPChain, Atom[], Atom[], boolean)"}