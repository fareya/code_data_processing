{"callee_method_names":["MultipleAlignment.getBlockSets","String.length","String.getAlignRes","List<Integer>.add","List<List<Integer>>.add","List<SortedSet<Integer>>.add","List<Atom[]>.get","List<List<Integer>>.get","List<SortedSet<Integer>>.get","MultipleAlignment.clear","MultipleSuperimposer.superimpose"],"method_name":"MultipleMcOptimizer.initialize","method_implementation":"{\n    // Initialize alignment variables\n    freePool = new ArrayList<SortedSet<Integer>>();\n    List<List<Integer>> aligned = new ArrayList<List<Integer>>();\n    // Generate freePool residues from the ones not aligned\n    for (int i = 0; i < size; i++) {\n        List<Integer> residues = new ArrayList<Integer>();\n        for (BlockSet bs : msa.getBlockSets()) {\n            for (Block b : bs.getBlocks()) {\n                for (int l = 0; l < b.length(); l++) {\n                    Integer residue = b.getAlignRes().get(i).get(l);\n                    if (residue != null)\n                        residues.add(residue);\n                }\n            }\n        }\n        aligned.add(residues);\n        freePool.add(new TreeSet<Integer>());\n    }\n    // Add any residue not aligned to the free pool for every structure\n    for (int i = 0; i < size; i++) {\n        for (int k = 0; k < atomArrays.get(i).length; k++) {\n            if (!aligned.get(i).contains(k))\n                freePool.get(i).add(k);\n        }\n    }\n    // Set the superposition and score for the seed aligment\n    checkGaps();\n    msa.clear();\n    imposer.superimpose(msa);\n    mcScore = MultipleAlignmentScorer.getMCScore(msa, Gopen, Gextend, dCutoff);\n    // Initialize the history variables\n    if (history) {\n        lengthHistory = new ArrayList<Integer>();\n        rmsdHistory = new ArrayList<Double>();\n        scoreHistory = new ArrayList<Double>();\n    }\n}","repo_id":"9","comment":"/**\n * Initialize the freePool and all the variables needed for the\n * optimization.\n *\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":693,"method_signature":"void initialize()"}