{"callee_method_names":["Integer.compareTo"],"method_name":"MultipleAlignmentTools.sortBlocks","method_implementation":"{\n    Collections.sort(blocks, new Comparator<Block>() {\n\n        @Override\n        public int compare(Block o1, Block o2) {\n            // Compare the first non-null residue of each block\n            List<Integer> alignres1 = o1.getAlignRes().get(sortedIndex);\n            List<Integer> alignres2 = o2.getAlignRes().get(sortedIndex);\n            Integer res1 = null;\n            Integer res2 = null;\n            for (Integer r : alignres1) {\n                if (r != null) {\n                    res1 = r;\n                    break;\n                }\n            }\n            for (Integer r : alignres2) {\n                if (r != null) {\n                    res2 = r;\n                    break;\n                }\n            }\n            return res1.compareTo(res2);\n        }\n    });\n}","repo_id":"9","comment":"/**\n * Sort blocks so that the specified row is in sequential order. The sort\n * happens in place.\n *\n * @param blocks\n *            List of blocks\n * @param sortedIndex\n *            Index of the row to be sorted\n */\n","repo_name":"biojava-master/","id":663,"method_signature":"void sortBlocks(List, int)"}