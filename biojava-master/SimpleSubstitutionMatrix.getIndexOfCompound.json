{"callee_method_names":["List<C>.indexOf","List<C>.size","C.equalsIgnoreCase","List<C>.get"],"method_name":"SimpleSubstitutionMatrix.getIndexOfCompound","method_implementation":"{\n    int index = list.indexOf(compound);\n    if (index == -1) {\n        for (int i = 0; i < list.size(); i++) {\n            if (compound.equalsIgnoreCase(list.get(i))) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}","repo_id":"9","comment":"/**\n * Returns the index of the first occurrence of the specified element in the list.\n * If the list does not contain the given compound, the index of the first occurrence\n * of the element according to case-insensitive equality.\n * If no such elements exist, -1 is returned.\n * @param list list of compounds to search\n * @param compound compound to search for\n * @return Returns the index of the first match to the specified element in this list, or -1 if there is no such index.\n */\n","repo_name":"biojava-master/","id":2514,"method_signature":"int getIndexOfCompound(List, C)"}