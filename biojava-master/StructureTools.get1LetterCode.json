{"callee_method_names":["String.trim","Map<String, Character>.get","Map<String, Character>.get"],"method_name":"StructureTools.get1LetterCode","method_implementation":"{\n    Character code1;\n    // is it a standard amino acid ?\n    code1 = get1LetterCodeAmino(groupCode3);\n    if (code1 == null) {\n        // hm groupCode3 is not standard\n        // perhaps it is a nucleotide?\n        groupCode3 = groupCode3.trim();\n        if (isNucleotide(groupCode3)) {\n            code1 = nucleotides30.get(groupCode3);\n            if (code1 == null) {\n                code1 = nucleotides23.get(groupCode3);\n            }\n            if (code1 == null) {\n                code1 = UNKNOWN_GROUP_LABEL;\n            }\n        } else {\n            // does not seem to be so let's assume it is\n            // nonstandard aminoacid and label it \"X\"\n            // logger.warning(\"unknown group name \"+groupCode3 );\n            code1 = UNKNOWN_GROUP_LABEL;\n        }\n    }\n    return code1;\n}","repo_id":"9","comment":"/**\n * Convert a three letter amino acid or nucleotide code into a single\n * character code. If the code does not correspond to an amino acid or\n * nucleotide, returns {@link #UNKNOWN_GROUP_LABEL}.\n *\n * Returned null for nucleotides prior to version 4.0.1.\n *\n * @param groupCode3\n *            three letter representation\n * @return The 1-letter abbreviation\n */\n","repo_name":"biojava-master/","id":1044,"method_signature":"Character get1LetterCode(String)"}