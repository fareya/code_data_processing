{"callee_method_ids":[639,634,641,628],"callee_method_names":["Logger.info","Path.toString","Path.toString","Path.toString","AtomCache.setPath","Path.toString","AtomCache.setCachePath","Path.toString","AtomCache.setFiletype","Path.toString","Path.resolve","Path.getParent","Path.resolve","Path.getParent","URL.getPath","File.toPath","AtomCache.getStructure","Structure.getChain","Group.getPDBName","Group.getChemComp","ChemComp.getAtoms","ChemComp.getType"],"method_name":"AtomCacheTest.testEmptyChemComp","method_implementation":"{\n    Path tmpCache = Paths.get(System.getProperty(\"java.io.tmpdir\"), \"BIOJAVA_TEST_CACHE\");\n    logger.info(\"Testing AtomCache at {}\", tmpCache.toString());\n    System.setProperty(UserConfiguration.PDB_DIR, tmpCache.toString());\n    System.setProperty(UserConfiguration.PDB_CACHE_DIR, tmpCache.toString());\n    FileDownloadUtils.deleteDirectory(tmpCache);\n    Files.createDirectory(tmpCache);\n    try {\n        cache.setPath(tmpCache.toString());\n        cache.setCachePath(tmpCache.toString());\n        cache.setFiletype(StructureFiletype.CIF);\n        ChemCompGroupFactory.setChemCompProvider(new DownloadChemCompProvider(tmpCache.toString()));\n        // Create an empty chemcomp\n        Path chemCompCif = tmpCache.resolve(Paths.get(\"chemcomp\", \"ATP.cif.gz\"));\n        Files.createDirectories(chemCompCif.getParent());\n        Files.createFile(chemCompCif);\n        assertTrue(Files.exists(chemCompCif));\n        assertEquals(0, Files.size(chemCompCif));\n        // Copy stub file into place\n        Path testCif = tmpCache.resolve(Paths.get(\"data\", \"structures\", \"divided\", \"mmCIF\", \"ab\", \"1abc.cif.gz\"));\n        Files.createDirectories(testCif.getParent());\n        URL resource = AtomCacheTest.class.getResource(\"/atp.cif.gz\");\n        File src = new File(resource.getPath());\n        Files.copy(src.toPath(), testCif, StandardCopyOption.REPLACE_EXISTING);\n        // Load structure\n        Structure s = cache.getStructure(\"1ABC\");\n        // Should have re-downloaded the file\n        assertTrue(Files.size(chemCompCif) > LocalPDBDirectory.MIN_PDB_FILE_SIZE);\n        // Structure should have valid ChemComp now\n        assertNotNull(s);\n        Group g = s.getChain(\"A\").getAtomGroup(0);\n        assertTrue(g.getPDBName().equals(\"ATP\"));\n        // should be unknown\n        ChemComp chem = g.getChemComp();\n        assertNotNull(chem);\n        assertTrue(chem.getAtoms().size() > 0);\n        assertEquals(\"NON-POLYMER\", chem.getType());\n    } finally {\n        FileDownloadUtils.deleteDirectory(tmpCache);\n    }\n}","repo_id":"9","comment":"/**\n * Test for #703 - Chemical component cache poisoning\n *\n * Handle empty CIF files\n * @throws IOException\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":2182,"method_signature":"void testEmptyChemComp()"}