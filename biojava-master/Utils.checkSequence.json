{"callee_method_names":["Logger.warn","Logger.warn"],"method_name":"Utils.checkSequence","method_implementation":"{\n    boolean containInvalid = false;\n    if (cSet != null) {\n        containInvalid = sequence != null && doesSequenceContainInvalidChar(sequence, cSet);\n    } else {\n        containInvalid = sequence != null && doesSequenceContainInvalidChar(sequence, PeptideProperties.standardAASet);\n    }\n    if (containInvalid) {\n        String cSeq = cleanSequence(sequence, cSet);\n        logger.warn(\"There exists invalid characters in the sequence. Computed results might not be precise.\");\n        logger.warn(\"To remove this warning: Please use org.biojava.nbio.aaproperties.Utils.cleanSequence to clean sequence.\");\n        return cSeq;\n    } else {\n        return sequence;\n    }\n}","repo_id":"9","comment":"/**\n * Checks if the sequence contains invalid characters.\n * Note that any character outside of the 20 standard protein amino acid codes are considered as invalid.\n * If yes, it will return a new sequence where invalid characters are replaced with '-'.\n * If no, it will simply return the input sequence.\n *\n * @param sequence\n * \t\tprotein sequence to be check for invalid characters.\n * @param cSet\n * \t\tcharacter set which define the valid characters.\n * @return\n * \t\ta sequence with no invalid characters.\n */\n","repo_name":"biojava-master/","id":3844,"method_signature":"String checkSequence(String, Set)"}