{"callee_method_names":["Structure.nrModels","Structure.getModel","String.getAtomGroups","Group.getAltLocs","Character.getPDBName","Group.getPDBName","List<Group>.add","List<Group>.add","Group.getAltLocs","List<Group>.addAll","String.setAtomGroups"],"method_name":"MmtfUtils.fixMicroheterogenity","method_implementation":"{\n    // Loop through the models\n    for (int i = 0; i < bioJavaStruct.nrModels(); i++) {\n        // Then the chains\n        List<Chain> chains = bioJavaStruct.getModel(i);\n        for (Chain c : chains) {\n            // Build a new list of groups\n            List<Group> outGroups = new ArrayList<>();\n            for (Group g : c.getAtomGroups()) {\n                List<Group> removeList = new ArrayList<>();\n                for (Group altLoc : g.getAltLocs()) {\n                    // Check if they are not equal -> microheterogenity\n                    if (!altLoc.getPDBName().equals(g.getPDBName())) {\n                        // Now add this group to the main list\n                        removeList.add(altLoc);\n                    }\n                }\n                // Add this group\n                outGroups.add(g);\n                // Remove any microhet alt locs\n                g.getAltLocs().removeAll(removeList);\n                // Add these microhet alt locs\n                outGroups.addAll(removeList);\n            }\n            c.setAtomGroups(outGroups);\n        }\n    }\n}","repo_id":"9","comment":"/**\n * This sets all microheterogeneous groups\n * (previously alternate location groups) as separate groups.\n * This is required because mmtf groups cannot have multiple HET codes.\n * @param bioJavaStruct\n */\n","repo_name":"biojava-master/","id":1242,"method_signature":"void fixMicroheterogenity(Structure)"}