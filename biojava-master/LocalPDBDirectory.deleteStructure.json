{"callee_method_names":["File.exists","File.delete","Logger.debug","File.getAbsolutePath","File.getParentFile","File.delete","Logger.debug","File.getAbsolutePath"],"method_name":"LocalPDBDirectory.deleteStructure","method_implementation":"{\n    boolean deleted = false;\n    // Force getLocalFile to check in obsolete locations\n    ObsoleteBehavior obsolete = getObsoleteBehavior();\n    setObsoleteBehavior(ObsoleteBehavior.FETCH_OBSOLETE);\n    try {\n        File existing = getLocalFile(pdbId);\n        while (existing != null) {\n            // should exist unless concurrency problems\n            assert (existing.exists());\n            if (getFetchBehavior() == FetchBehavior.LOCAL_ONLY) {\n                throw new RuntimeException(\"Refusing to delete from LOCAL_ONLY directory\");\n            }\n            // delete file\n            boolean success = existing.delete();\n            if (success) {\n                logger.debug(\"Deleting {}\", existing.getAbsolutePath());\n            }\n            deleted = deleted || success;\n            // delete parent if empty\n            File parent = existing.getParentFile();\n            if (parent != null) {\n                success = parent.delete();\n                if (success) {\n                    logger.debug(\"Deleting {}\", parent.getAbsolutePath());\n                }\n            }\n            existing = getLocalFile(pdbId);\n        }\n        return deleted;\n    } finally {\n        setObsoleteBehavior(obsolete);\n    }\n}","repo_id":"9","comment":"/**\n * Attempts to delete all versions of a structure from the local directory.\n * @param pdbId The PDB ID\n * @return True if one or more files were deleted\n * @throws IOException if the file cannot be deleted\n */\n","repo_name":"biojava-master/","id":1135,"method_signature":"boolean deleteStructure(PdbId)"}