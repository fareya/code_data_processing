{"callee_method_ids":[1347,1347,1349,1349,1349],"callee_method_names":["EntityInfo.setMolId","EntityInfo.setMolId","Structure.addEntityInfo","Structure.addEntityInfo","Chain.setId","Chain.setName","Chain.setId","Chain.setName","EntityInfo.addChain","EntityInfo.addChain","Chain.setId","Chain.setName","EntityInfo.addChain","Structure.addChain","Structure.addChain","Structure.addChain","Chain.setAtomGroups","Chain.setSeqResGroups","Chain.setEntityInfo","Chain.setAtomGroups","List<Group>.subList","Chain.setSeqResGroups","Chain.setEntityInfo","Chain.setAtomGroups","Chain.setSeqResGroups","Chain.setEntityInfo"],"method_name":"TestInterfaceFinder.mockStructure","method_implementation":"{\n    Structure structure = new StructureImpl();\n    EntityInfo entity1 = new EntityInfo();\n    entity1.setMolId(1);\n    EntityInfo entity2 = new EntityInfo();\n    entity2.setMolId(2);\n    structure.addEntityInfo(entity1);\n    structure.addEntityInfo(entity2);\n    Chain chainA = new ChainImpl();\n    chainA.setId(\"A\");\n    chainA.setName(\"A\");\n    Chain chainB = new ChainImpl();\n    chainB.setId(\"B\");\n    chainB.setName(\"B\");\n    entity1.addChain(chainA);\n    entity1.addChain(chainB);\n    Chain chainC = new ChainImpl();\n    chainC.setId(\"C\");\n    chainC.setName(\"C\");\n    entity2.addChain(chainC);\n    structure.addChain(chainA);\n    structure.addChain(chainB);\n    structure.addChain(chainC);\n    // entity 1: chain A 10 observed residues, chain B 9 observed residues (first unobserved)\n    List<Group> aGroups = getGroupList(10, \"ALA\", chainA, new Point3d(0, 0, 0));\n    chainA.setAtomGroups(new ArrayList<>(aGroups));\n    chainA.setSeqResGroups(aGroups);\n    chainA.setEntityInfo(entity1);\n    List<Group> bGroups = getGroupList(10, \"ALA\", chainB, new Point3d(4, 0, 0));\n    chainB.setAtomGroups(new ArrayList<>(bGroups.subList(1, 10)));\n    chainB.setSeqResGroups(bGroups);\n    chainB.setEntityInfo(entity1);\n    int size;\n    if (addNoAtomsPolyChain)\n        size = 0;\n    else\n        size = 20;\n    List<Group> cGroups = getGroupList(size, \"GLY\", chainC, new Point3d(0, 4, 0));\n    chainC.setAtomGroups(new ArrayList<>(cGroups));\n    chainC.setSeqResGroups(cGroups);\n    chainC.setEntityInfo(entity2);\n    return structure;\n}","repo_id":"9","comment":"/**\n * Create a mock structure with 2 entities 1 (chains A, B) and 2 (chain C).\n * @return a structure\n */\n","repo_name":"biojava-master/","id":2198,"method_signature":"Structure mockStructure(boolean)"}