{"callee_method_names":["RotationGroup.getRotation","RotationGroup.getOrder","RotationGroup.getRotation","RotationGroup.getRotation","RotationGroup.getPointGroup","RotationGroup.getRotation","Vector3d.normalize","Vector3d.angle","Vector3d.negate","Vector3d.angle","Vector3d.normalize"],"method_name":"RotationAxisAligner.getReferenceAxisDihedralWithSubunitAlignment","method_implementation":"{\n    int maxFold = rotationGroup.getRotation(0).getFold();\n    double minAngle = Double.MAX_VALUE;\n    Vector3d refVec = null;\n    Vector3d ref = getSubunitReferenceVector();\n    for (int i = 0; i < rotationGroup.getOrder(); i++) {\n        if (rotationGroup.getRotation(i).getDirection() == 1 && (rotationGroup.getRotation(i).getFold() < maxFold) || \"D2\".equals(rotationGroup.getPointGroup())) {\n            AxisAngle4d axisAngle = rotationGroup.getRotation(i).getAxisAngle();\n            Vector3d v = new Vector3d(axisAngle.x, axisAngle.y, axisAngle.z);\n            v.normalize();\n            //\t\t\t\tSystem.out.println(\"Ref axis angle(+): \" + Math.toDegrees(v.angle(ref)));\n            double angle = v.angle(ref);\n            if (angle < minAngle) {\n                minAngle = angle;\n                refVec = v;\n            }\n            Vector3d vn = new Vector3d(v);\n            vn.negate();\n            //\t\t\t\tSystem.out.println(\"Ref axis angle(-): \" + Math.toDegrees(vn.angle(ref)));\n            angle = vn.angle(ref);\n            if (angle < minAngle) {\n                minAngle = angle;\n                refVec = vn;\n            }\n        }\n    }\n    refVec.normalize();\n    return refVec;\n}","repo_id":"9","comment":"/**\n */\n","repo_name":"biojava-master/","id":1998,"method_signature":"Vector3d getReferenceAxisDihedralWithSubunitAlignment()"}