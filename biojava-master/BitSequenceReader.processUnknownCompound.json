{"callee_method_names":[],"method_name":"BitSequenceReader.processUnknownCompound","method_implementation":"{\n    throw new IllegalStateException(\"Do not know how to translate the compound \" + compound + \" to a \" + bitsPerCompound() + \"bit representation\");\n}","repo_id":"9","comment":"/**\n * Since bit encoding only supports a finite number of bases\n * it is more than likely when processing sequence you will encounter a\n * compound which is not covered by the encoding e.g. N in a 2bit sequence.\n * You can override this to convert the unknown base into one you can\n * process or store locations of unknown bases for a level of post processing\n * in your subclass.\n *\n * @param compound Compound process\n * @return Byte representation of the compound\n * @throws IllegalStateException Done whenever this method is invoked\n */\n","repo_name":"biojava-master/","id":2997,"method_signature":"byte processUnknownCompound(C, int)"}