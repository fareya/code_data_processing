{"callee_method_names":[],"method_name":"CeCalculatorEnhanced.checkPrintRmsdNew","method_implementation":"{\n    int is = 0;\n    // calc initial RMSD for bestTrace1\n    Atom[] strBuf1 = new Atom[traceMaxSize];\n    Atom[] strBuf2 = new Atom[traceMaxSize];\n    for (int jt = 0; jt < nBestTrace; jt++) {\n        for (int i = 0; i < winSize; i++) {\n            setStrBuf(strBuf1, is + i, ca1, bestTrace1[jt] + i);\n            setStrBuf(strBuf2, is + i, ca2, bestTrace2[jt] + i);\n        }\n        is += winSize;\n    }\n    //sup_str(strBuf1, strBuf2, nBestTrace*winSize, d_);\n    double rmsdNew = calc_rmsd(strBuf1, strBuf2, nBestTrace * winSize, true, false);\n    //afpChain.setTotalRmsdIni(rmsdNew);\n    if (isPrint) {\n        System.out.println(\"rmsdNew after trace: \" + rmsdNew);\n        for (int k = 0; k < nBestTrace; k++) System.out.println(String.format(\"(%d,%d,%d) \", bestTrace1[k] + 1, bestTrace2[k] + 1, 8));\n    }\n    if (isPrint) {\n        System.out.println(\"best traces: \" + nBestTraces);\n    }\n}","repo_id":"9","comment":"/**\n * calc initial RMSD for bestTrace1 in debug only\n */\n","repo_name":"biojava-master/","id":735,"method_signature":"void checkPrintRmsdNew(int, int, Atom[], Atom[])"}