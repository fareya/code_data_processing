{"callee_method_names":["RotationGroup.getPointGroup","String.startsWith","String.startsWith"],"method_name":"JmolSymmetryScriptGeneratorPointGroup.getSymmetryColors","method_implementation":"{\n    String pointGroup = rotationGroup.getPointGroup();\n    Color[] col = null;\n    Color4f[] colors = null;\n    if (\"C1\".equals(pointGroup)) {\n        col = ColorBrewer.Greys.getColorPalette(nColors);\n        colors = ColorConverter.convertColor4f(col);\n    } else if (pointGroup.startsWith(\"C\")) {\n        col = ColorBrewer.YlGnBu.getColorPalette(nColors);\n        colors = ColorConverter.convertColor4f(col);\n    } else if (pointGroup.startsWith(\"D\")) {\n        col = ColorBrewer.YlOrRd.getColorPalette(nColors);\n        colors = ColorConverter.convertColor4f(col);\n    } else if (\"T\".equals(pointGroup)) {\n        col = ColorBrewer.Greens.getColorPalette(nColors);\n        colors = ColorConverter.convertColor4f(col);\n    } else if (\"O\".equals(pointGroup)) {\n        col = ColorBrewer.Blues.getColorPalette(nColors);\n        colors = ColorConverter.convertColor4f(col);\n    } else if (\"I\".equals(pointGroup)) {\n        col = ColorBrewer.BuPu.getColorPalette(nColors);\n        colors = ColorConverter.convertColor4f(col);\n    } else {\n        col = ColorBrewer.Greys.getColorPalette(nColors);\n        colors = ColorConverter.convertColor4f(col);\n    }\n    System.arraycopy(colors, 0, colors, 0, nColors);\n    return colors;\n}","repo_id":"9","comment":"/**\n * Returns a unique color palette based on point group\n * @param nColors\n * @return\n */\n","repo_name":"biojava-master/","id":3408,"method_signature":"Color4f[] getSymmetryColors(int)"}