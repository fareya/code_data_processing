{"callee_method_ids":[628,489,489],"callee_method_names":["AtomCache.getStructure","List<Chain>.size","List<Chain>.size","List<Chain>.get","List<Chain>.get","StructureAlignment.align","AFPChain.getOptAln","AFPChain.getOptAln"],"method_name":"TestAlignmentConsistency.testDuplicateIndices","method_implementation":"{\n    String[] algorithmIDs = { CeMain.algorithmName, FatCatRigid.algorithmName };\n    AtomCache cache = new AtomCache();\n    // 3j47 is a bunch of a-helices, so there are many valid ways to align chains\n    // structurally between each other.\n    List<Chain> chains = cache.getStructure(\"3j47\").getChains();\n    for (String algorithmID : algorithmIDs) {\n        StructureAlignment algorithm = StructureAlignmentFactory.getAlgorithm(algorithmID);\n        System.out.println(\"Testing \" + algorithmID);\n        for (int c1 = 0; c1 < chains.size() - 1; c1++) {\n            for (int c2 = chains.size() - 1; c2 > c1; c2--) {\n                Atom[] ca1 = StructureTools.getAtomCAArray(chains.get(c1));\n                Atom[] ca2 = StructureTools.getAtomCAArray(chains.get(c2));\n                AFPChain afpChain_fc = algorithm.align(ca1, ca2);\n                assertEquals(1, afpChain_fc.getOptAln().length);\n                int[][] optAln = afpChain_fc.getOptAln()[0];\n                // two chains aligned\n                assertEquals(2, optAln.length);\n                //same number of aligned residues between the chains\n                assertEquals(optAln[0].length, optAln[1].length);\n                // no indices duplicated in the alignments\n                for (int[] optAlnSeq : optAln) {\n                    long count_unique = Arrays.stream(optAlnSeq).distinct().count();\n                    long count_all = optAlnSeq.length;\n                    assertEquals(count_unique, count_all);\n                }\n            }\n        }\n    }\n}","repo_id":"9","comment":"// Check that indices of the aligned residues are unique\n","repo_name":"biojava-master/","id":2196,"method_signature":"void testDuplicateIndices()"}