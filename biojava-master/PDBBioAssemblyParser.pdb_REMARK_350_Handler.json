{"callee_method_names":["String.startsWith","String.substring","String.startsWith","ArrayList.clear","String.startsWith","ArrayList.clear","String.startsWith","String.contains","String.startsWith"],"method_name":"PDBBioAssemblyParser.pdb_REMARK_350_Handler","method_implementation":"{\n    if (line.startsWith(\"REMARK 350 BIOMOLECULE:\")) {\n        initialize();\n        currentBioMolecule = Integer.parseInt(line.substring(24).trim());\n    } else // not parsing anymore the size (from biojava 5.0), thus this is not needed anymore\n    // eventually if needed this could be used to\n    // infer if bioassembly is author or software determined\n    //else if ( line.matches(\"REMARK 350 \\\\w+ DETERMINED BIOLOGICAL UNIT:.*\" ) ||\n    //\t\t\tline.matches(\"REMARK 350 \\\\w+ DETERMINED QUATERNARY STRUCTURE:.*\" )) {\n    // text can be :\n    // author determined biological unit\n    // software determined quaternary structure\n    //}\n    if (line.startsWith(\"REMARK 350 APPLY THE FOLLOWING TO CHAINS:\")) {\n        currentChainIDs.clear();\n        addToCurrentChainList(line);\n    } else if (line.startsWith(\"REMARK 350 IN ADDITION APPLY THE FOLLOWING TO CHAINS:\")) {\n        currentChainIDs.clear();\n        addToCurrentChainList(line);\n    } else if (line.startsWith(\"REMARK 350\") && line.contains(\"AND CHAINS:\")) {\n        addToCurrentChainList(line);\n    } else if (line.startsWith(\"REMARK 350   BIOMT\")) {\n        if (readMatrix(line)) {\n            saveMatrix();\n            modelNumber++;\n        }\n    }\n}","repo_id":"9","comment":"/**\n * Parses REMARK 350 line. See format description:\n * http://www.wwpdb.org/documentation/format33/remarks2.html\n *\n * @param line\n */\n","repo_name":"biojava-master/","id":1225,"method_signature":"void pdb_REMARK_350_Handler(String)"}