{"callee_method_names":[],"method_name":"CrystalTransform.formatCoef","method_implementation":"{\n    // rounding tolerance\n    double tol = 1e-6;\n    // zero case\n    if (Math.abs(coef) < tol) {\n        return \"0\";\n    }\n    // integer case\n    long num = Math.round(coef);\n    if (Math.abs(num - coef) < tol) {\n        return Long.toString(num);\n    }\n    // Other small cases\n    for (int denom = 2; denom < 12; denom++) {\n        num = Math.round(coef * denom);\n        if (num - coef * denom < tol) {\n            return String.format(\"%d/%d\", num, denom);\n        }\n    }\n    // Give up and use floating point;\n    return String.format(Locale.US, \"%.3f\", coef);\n}","repo_id":"9","comment":"/**\n * helper function to format simple fractions into rationals\n * @param coef\n * @return\n */\n","repo_name":"biojava-master/","id":1433,"method_signature":"String formatCoef(double)"}