{"callee_method_names":["Class<?>.getMethods","int.getName","String.substring","int.invoke","int.invoke","Logger.warn","Logger.warn","Object.equals","Logger.warn","Logger.error","Logger.error","Logger.error"],"method_name":"PDBHeader.equals","method_implementation":"{\n    try {\n        Class<?> c = Class.forName(PDBHeader.class.getName());\n        Method[] methods = c.getMethods();\n        for (Method m : methods) {\n            String name = m.getName();\n            if (\"get\".equals(name.substring(0, 3))) {\n                if (\"getClass\".equals(name)) {\n                    continue;\n                }\n                Object a = m.invoke(this);\n                Object b = m.invoke(other);\n                if (a == null) {\n                    if (b == null) {\n                        continue;\n                    } else {\n                        logger.warn(name + \" a is null, where other is \" + b);\n                        return false;\n                    }\n                }\n                if (b == null) {\n                    logger.warn(name + \" other is null, where a is \" + a);\n                    return false;\n                }\n                if (!(a.equals(b))) {\n                    logger.warn(\"mismatch with \" + name + \" >\" + a + \"< >\" + b + \"<\");\n                    return false;\n                }\n            }\n        }\n    } catch (ClassNotFoundException e) {\n        logger.error(\"Exception caught while comparing PDBHeader objects \", e);\n        return false;\n    } catch (InvocationTargetException e) {\n        logger.error(\"Exception caught while comparing PDBHeader objects \", e);\n        return false;\n    } catch (IllegalAccessException e) {\n        logger.error(\"Exception caught while comparing PDBHeader objects \", e);\n        return false;\n    }\n    return true;\n}","repo_id":"9","comment":"/**\n * Compare two PDBHeader objects\n *\n * @param other a PDBHeader object to compare this one to.\n * @return true if they are equal or false if they are not.\n */\n","repo_name":"biojava-master/","id":1764,"method_signature":"boolean equals(PDBHeader)"}