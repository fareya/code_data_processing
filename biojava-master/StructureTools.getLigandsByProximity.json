{"callee_method_ids":[929,940],"callee_method_names":["Grid.addAtoms","Group.isWater","Group.isPolymeric","Group.getAtoms","Grid.hasAnyContact","List<Group>.add"],"method_name":"StructureTools.getLigandsByProximity","method_implementation":"{\n    // Spatial hashing of the reduced structure\n    Grid grid = new Grid(cutoff);\n    grid.addAtoms(query);\n    List<Group> ligands = new ArrayList<>();\n    for (Group g : target) {\n        // don't worry about waters\n        if (g.isWater()) {\n            continue;\n        }\n        if (g.isPolymeric()) {\n            // Polymers aren't ligands\n            continue;\n        }\n        // It is a ligand!\n        // Check that it's within cutoff of something in reduced\n        List<Atom> groupAtoms = g.getAtoms();\n        if (!grid.hasAnyContact(Calc.atomsToPoints(groupAtoms))) {\n            continue;\n        }\n        ligands.add(g);\n    }\n    return ligands;\n}","repo_id":"9","comment":"/**\n * Finds all ligand groups from the target which fall within the cutoff distance\n * of some atom from the query set.\n *\n * @param target Set of groups including the ligands\n * @param query Atom selection\n * @param cutoff Distance from query atoms to consider, in angstroms\n * @return All groups from the target with at least one atom within cutoff of a query atom\n * @see StructureTools#DEFAULT_LIGAND_PROXIMITY_CUTOFF\n */\n","repo_name":"biojava-master/","id":1023,"method_signature":"List<Group> getLigandsByProximity(Collection, Atom[], double)"}