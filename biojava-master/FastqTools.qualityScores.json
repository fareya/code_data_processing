{"callee_method_ids":[2372,2373,2372],"callee_method_names":["Fastq.getQuality","Fastq.getVariant","Fastq.getQuality","FastqVariant.qualityScore"],"method_name":"FastqTools.qualityScores","method_implementation":"{\n    if (fastq == null) {\n        throw new IllegalArgumentException(\"fastq must not be null\");\n    }\n    if (qualityScores == null) {\n        throw new IllegalArgumentException(\"qualityScores must not be null\");\n    }\n    int size = fastq.getQuality().length();\n    if (qualityScores.length != size) {\n        throw new IllegalArgumentException(\"qualityScores must be the same length as the FASTQ formatted sequence quality\");\n    }\n    FastqVariant variant = fastq.getVariant();\n    for (int i = 0; i < size; i++) {\n        char c = fastq.getQuality().charAt(i);\n        qualityScores[i] = variant.qualityScore(c);\n    }\n    return qualityScores;\n}","repo_id":"9","comment":"/**\n * Copy the quality scores from the specified FASTQ formatted sequence into the specified int array.\n *\n * @param fastq FASTQ formatted sequence, must not be null\n * @param qualityScores int array of quality scores, must not be null and must be the same\n *    length as the FASTQ formatted sequence quality\n * @return the specified int array of quality scores\n */\n","repo_name":"biojava-master/","id":2364,"method_signature":"int[] qualityScores(Fastq, int[])"}