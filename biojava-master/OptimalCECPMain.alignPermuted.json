{"callee_method_names":["AFPChain.getName2","AFPChain.setName2","AFPChain.getName2"],"method_name":"OptimalCECPMain.alignPermuted","method_implementation":"{\n    // initial permutation\n    permuteArray(ca2, cp);\n    // perform alignment\n    AFPChain afpChain = super.align(ca1, ca2, param);\n    // un-permute alignment\n    permuteAFPChain(afpChain, -cp);\n    if (afpChain.getName2() != null) {\n        afpChain.setName2(afpChain.getName2() + \" CP=\" + cp);\n    }\n    // Specify the permuted\n    return afpChain;\n}","repo_id":"9","comment":"/**\n * Aligns ca1 with ca2 permuted by <i>cp<\/i> residues.\n * <p><strong>WARNING:<\/strong> Modifies ca2 during the permutation. Be sure\n * to make a copy before calling this method.\n *\n * @param ca1\n * @param ca2\n * @param param\n * @param cp\n * @return\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":784,"method_signature":"AFPChain alignPermuted(Atom[], Atom[], Object, int)"}