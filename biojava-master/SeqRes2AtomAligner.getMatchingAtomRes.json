{"callee_method_names":["List<Chain>.iterator","Iterator<Chain>.hasNext","Iterator<Chain>.next","Chain.getId","Chain.getId","Chain.getName","Chain.getName","String.equals","Logger.info","Chain.getId","Chain.getName","List<Chain>.size"],"method_name":"SeqRes2AtomAligner.getMatchingAtomRes","method_implementation":"{\n    Iterator<Chain> iter = atomList.iterator();\n    while (iter.hasNext()) {\n        Chain atomChain = iter.next();\n        String atomChainId = null;\n        String seqResChainId = null;\n        if (useChainId) {\n            atomChainId = atomChain.getId();\n            seqResChainId = seqRes.getId();\n        } else {\n            atomChainId = atomChain.getName();\n            seqResChainId = seqRes.getName();\n        }\n        if (atomChainId.equals(seqResChainId)) {\n            return atomChain;\n        }\n    }\n    logger.info(\"Could not match SEQRES chainID asymId:\" + seqRes.getId() + \" authId:\" + seqRes.getName() + \"  to ATOM chains!, size of atom chain: \" + atomList.size());\n    return null;\n}","repo_id":"9","comment":"/**\n * @param seqRes\n * @param atomList\n * @param useChainId if true chainId (Chain.getId) is used for matching,\n * if false chainName (Chain.getName) is used\n * @return\n */\n","repo_name":"biojava-master/","id":1231,"method_signature":"Chain getMatchingAtomRes(Chain, List, boolean)"}