{"callee_method_ids":[628,633],"callee_method_names":["AtomCache.getStructure","List<ResidueRangeAndLength>.get","AtomCache.getStructureForDomain","Structure.getPolyChains","Structure.getPolyChainByPDB","Chain.getAtomGroups","Structure.getNonPolyChainsByPDB","Chain.getAtomGroups","List<Group>.size"],"method_name":"AtomCacheTest.testGetStructureForDomain3","method_implementation":"{\n    String ranges = \"E:\";\n    Structure whole = cache.getStructure(\"1I3O\");\n    AtomPositionMap map = new AtomPositionMap(StructureTools.getAllAtomArray(whole), AtomPositionMap.ANYTHING_MATCHER);\n    List<ResidueRangeAndLength> rrs = ResidueRangeAndLength.parseMultiple(ranges, map);\n    int expectedLengthE = rrs.get(0).getLength();\n    Structure structure = cache.getStructureForDomain(\"d1i3oe_\");\n    assertEquals(1, structure.getPolyChains().size());\n    Chain e = structure.getPolyChainByPDB(\"E\");\n    // since biojava 5.0 we have no ligand molecules in the polymer chains, we have to subtract the 2 zinc molecules\n    assertEquals(expectedLengthE - 2, e.getAtomGroups().size());\n    Chain eligands = structure.getNonPolyChainsByPDB(\"E\").get(0);\n    List<Group> ligandsE = StructureTools.filterLigands(eligands.getAtomGroups());\n    assertEquals(1, ligandsE.size());\n}","repo_id":"9","comment":"/**\n * Tests {@link AtomCache#getStructureForDomain(String)} on a single-chain domain with two zinc ligands that occurs after the TER.\n */\n","repo_name":"biojava-master/","id":2180,"method_signature":"void testGetStructureForDomain3()"}