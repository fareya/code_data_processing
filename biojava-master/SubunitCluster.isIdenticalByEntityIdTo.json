{"callee_method_ids":[1673,1673,1675,1675],"callee_method_names":["SubunitCluster.get","Subunit.getName","Subunit.getName","Subunit.getStructure","Subunit.getStructure","Logger.info","Structure.getChain","Structure.getChain","Logger.info","Chain.getEntityInfo","Chain.getEntityInfo","Logger.info","Chain.getEntityInfo","Chain.getEntityInfo"],"method_name":"SubunitCluster.isIdenticalByEntityIdTo","method_implementation":"{\n    Subunit thisSub = this.subunits.get(this.representative);\n    Subunit otherSub = other.subunits.get(other.representative);\n    String thisName = thisSub.getName();\n    String otherName = otherSub.getName();\n    Structure thisStruct = thisSub.getStructure();\n    Structure otherStruct = otherSub.getStructure();\n    if (thisStruct == null || otherStruct == null) {\n        logger.info(\"SubunitClusters {}-{} have no referenced structures. Ignoring identity check by entity id\", thisName, otherName);\n        return false;\n    }\n    if (thisStruct != otherStruct) {\n        // different object references: will not cluster even if entity id is same\n        return false;\n    }\n    Chain thisChain = thisStruct.getChain(thisName);\n    Chain otherChain = otherStruct.getChain(otherName);\n    if (thisChain == null || otherChain == null) {\n        logger.info(\"Can't determine entity ids of SubunitClusters {}-{}. Ignoring identity check by entity id\", thisName, otherName);\n        return false;\n    }\n    if (thisChain.getEntityInfo() == null || otherChain.getEntityInfo() == null) {\n        logger.info(\"Can't determine entity ids of SubunitClusters {}-{}. Ignoring identity check by entity id\", thisName, otherName);\n        return false;\n    }\n    int thisEntityId = thisChain.getEntityInfo().getMolId();\n    int otherEntityId = otherChain.getEntityInfo().getMolId();\n    return thisEntityId == otherEntityId;\n}","repo_id":"9","comment":"/**\n * Tells whether the other SubunitCluster contains exactly the same Subunit.\n * This is checked by equality of their entity identifiers if they are present.\n *\n * @param other\n *            SubunitCluster\n * @return true if the SubunitClusters are identical, false otherwise\n */\n","repo_name":"biojava-master/","id":1658,"method_signature":"boolean isIdenticalByEntityIdTo(SubunitCluster)"}