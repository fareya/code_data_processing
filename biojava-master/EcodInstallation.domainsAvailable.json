{"callee_method_names":["ReadWriteLock.readLock","Logger.trace","File.exists","String.equals","File.lastModified","Calendar.setTime","Calendar.add","Calendar.getTimeInMillis","Logger.info","Logger.trace","ReadWriteLock.readLock"],"method_name":"EcodInstallation.domainsAvailable","method_implementation":"{\n    domainsFileLock.readLock().lock();\n    logger.trace(\"LOCK readlock\");\n    try {\n        File f = getDomainFile();\n        if (!(f.exists() && FileDownloadUtils.validateFile(f)))\n            return false;\n        // Re-download old copies of \"latest\"\n        if (updateFrequency != null && requestedVersion.equals(DEFAULT_VERSION)) {\n            long mod = f.lastModified();\n            // Time of last update\n            Date lastUpdate = new Date();\n            Calendar cal = Calendar.getInstance();\n            cal.setTime(lastUpdate);\n            cal.add(Calendar.DAY_OF_WEEK, -updateFrequency);\n            long updateTime = cal.getTimeInMillis();\n            // Check if file predates last update\n            if (mod < updateTime) {\n                logger.info(\"{} is out of date.\", f);\n                return false;\n            }\n        }\n        return true;\n    } finally {\n        logger.trace(\"UNLOCK readlock\");\n        domainsFileLock.readLock().unlock();\n    }\n}","repo_id":"9","comment":"/**\n * Checks that the domains file has been downloaded\n * @return\n */\n","repo_name":"biojava-master/","id":1812,"method_signature":"boolean domainsAvailable()"}