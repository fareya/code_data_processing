{"callee_method_names":[],"method_name":"SequenceFunctionRefiner.scoreAbsError","method_implementation":"{\n    // Use the absolute error score, |x - f^k(x)|\n    double error;\n    if (image == null) {\n        error = Double.POSITIVE_INFINITY;\n    } else {\n        error = Math.abs(pre - image);\n    }\n    //TODO favor lower degree-in\n    // Add fractional portion relative to sequence position, for uniqueness\n    if (error > 0)\n        error += (double) (pre - minPre) / (1 + maxPre - minPre);\n    return error;\n}","repo_id":"9","comment":"/**\n * Calculate the score for a residue, specifically the Absolute Error\n * \tscore(x) = |x-f^k(x)|\n *\n * Also includes a small bias based on residue number, for uniqueness..\n * @param pre x\n * @param image f^k(x)\n * @param minPre lowest possible residue number\n * @param maxPre highest possible residue number\n * @return\n */\n","repo_name":"biojava-master/","id":2067,"method_signature":"double scoreAbsError(Integer, Integer, int, int)"}