{"callee_method_names":["Structure.getChains","double[].isNucleicAcid","List<Chain>.add","List<Chain>.size","List<Chain>.size","List<Chain>.get","List<Chain>.get","List<Chain>.remove"],"method_name":"BasePairParameters.getNucleicChains","method_implementation":"{\n    if (structure == null)\n        return new ArrayList<>();\n    List<Chain> chains = structure.getChains();\n    List<Chain> result = new ArrayList<>();\n    for (Chain c : chains) {\n        if (c.isNucleicAcid()) {\n            result.add(c);\n        }\n    }\n    if (removeDups)\n        for (int i = 0; i < result.size(); i++) {\n            for (int j = i + 2; j < result.size(); j++) {\n                // remove duplicate sequences (structures with two or more identical units)\n                if (result.get(i).getAtomSequence().equals(result.get(j).getAtomSequence())) {\n                    result.remove(j);\n                }\n            }\n        }\n    return result;\n}","repo_id":"9","comment":"/**\n * This method reports all the nucleic acid chains and has an option to remove duplicates if you\n * are considering an analysis of only unique DNA or RNA helices in the Structure.\n * @param removeDups If true, it will ignore duplicate chains\n * @return A list of all the nucleic acid chains in order of the Structure\n */\n","repo_name":"biojava-master/","id":1736,"method_signature":"List<Chain> getNucleicChains(boolean)"}