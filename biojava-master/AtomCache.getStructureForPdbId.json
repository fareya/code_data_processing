{"callee_method_names":["Logger.error","int[].getMessage","Logger.debug","Logger.debug","Logger.debug","Logger.debug"],"method_name":"AtomCache.getStructureForPdbId","method_implementation":"{\n    if (pdbId == null)\n        return null;\n    while (checkLoading(pdbId)) {\n        // waiting for loading to be finished...\n        try {\n            Thread.sleep(100);\n        } catch (InterruptedException e) {\n            logger.error(e.getMessage());\n        }\n    }\n    switch(filetype) {\n        case CIF:\n            logger.debug(\"loading from mmcif\");\n            return loadStructureFromCifByPdbId(pdbId);\n        case BCIF:\n            logger.debug(\"loading from bcif\");\n            return loadStructureFromBcifByPdbId(pdbId);\n        case MMTF:\n            logger.debug(\"loading from mmtf\");\n            return loadStructureFromMmtfByPdbId(pdbId);\n        case PDB:\n        default:\n            logger.debug(\"loading from pdb\");\n            return loadStructureFromPdbByPdbId(pdbId);\n    }\n}","repo_id":"9","comment":"/**\n * Loads a structure directly by PDB ID\n * @param pdbId\n * @return\n * @throws IOException\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":645,"method_signature":"Structure getStructureForPdbId(PdbId)"}