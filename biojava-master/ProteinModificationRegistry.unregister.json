{"callee_method_names":["Set<ProteinModification>.remove","Map<String, ProteinModification>.remove","ProteinModification.getId","Map<String, Set<ProteinModification>>.get","ProteinModification.getResidId","Set<ProteinModification>.remove","Map<String, Set<ProteinModification>>.get","ProteinModification.getPsimodId","Set<ProteinModification>.remove","Map<String, Set<ProteinModification>>.get","ProteinModification.getPdbccId","Set<ProteinModification>.remove","ProteinModification.getKeywords","Map<String, Set<ProteinModification>>.get","Set<ProteinModification>.remove","ProteinModification.getCondition","ModificationCondition.getComponents","Map<Component, Set<ProteinModification>>.get","Set<ProteinModification>.remove","Map<ModificationCategory, Set<ProteinModification>>.get","ProteinModification.getCategory","Map<ModificationOccurrenceType, Set<ProteinModification>>.get","ProteinModification.getOccurrenceType"],"method_name":"ProteinModificationRegistry.unregister","method_implementation":"{\n    if (modification == null)\n        throw new IllegalArgumentException(\"modification == null!\");\n    registry.remove(modification);\n    byId.remove(modification.getId());\n    Set<ProteinModification> mods;\n    mods = byResidId.get(modification.getResidId());\n    if (mods != null)\n        mods.remove(modification);\n    mods = byPsimodId.get(modification.getPsimodId());\n    if (mods != null)\n        mods.remove(modification);\n    mods = byPdbccId.get(modification.getPdbccId());\n    if (mods != null)\n        mods.remove(modification);\n    for (String keyword : modification.getKeywords()) {\n        mods = byKeyword.get(keyword);\n        if (mods != null)\n            mods.remove(modification);\n    }\n    ModificationCondition condition = modification.getCondition();\n    List<Component> comps = condition.getComponents();\n    for (Component comp : comps) {\n        mods = byComponent.get(comp);\n        if (mods != null)\n            mods.remove(modification);\n    }\n    byCategory.get(modification.getCategory()).remove(modification);\n    byOccurrenceType.get(modification.getOccurrenceType()).remove(modification);\n}","repo_id":"9","comment":"/**\n * Remove a modification from registry.\n * @param mod\n */\n","repo_name":"biojava-master/","id":248,"method_signature":"void unregister(ProteinModification)"}