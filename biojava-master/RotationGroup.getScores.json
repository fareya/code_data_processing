{"callee_method_ids":[1939,1941,1943,1945,1947,1949,1951,1955,1953,1957],"callee_method_names":["ArrayList.size","ArrayList.size","ArrayList.get","QuatSymmetryScores.setMinRmsd","ArrayList.size","ArrayList.get","QuatSymmetryScores.setMaxRmsd","ArrayList.size","ArrayList.get","QuatSymmetryScores.setRmsd","ArrayList.size","ArrayList.get","QuatSymmetryScores.setMinTm","ArrayList.size","ArrayList.get","QuatSymmetryScores.setMaxTm","ArrayList.size","ArrayList.get","QuatSymmetryScores.setTm","ArrayList.size","ArrayList.get","QuatSymmetryScores.setRmsdCenters","ArrayList.size","ArrayList.get","QuatSymmetryScores.setTmIntra","ArrayList.size","ArrayList.get","QuatSymmetryScores.setRmsdIntra","QuatSymmetryScores.setSymDeviation"],"method_name":"RotationGroup.getScores","method_implementation":"{\n    QuatSymmetryScores scores = new QuatSymmetryScores();\n    int n = rotations.size() - 1;\n    if (n > 0) {\n        double[] values = new double[n];\n        // minRmsd\n        for (int i = 1; i < rotations.size(); i++) {\n            values[i - 1] = rotations.get(i).getScores().getMinRmsd();\n        }\n        scores.setMinRmsd(minScores(values));\n        // maxRmsd\n        for (int i = 1; i < rotations.size(); i++) {\n            values[i - 1] = rotations.get(i).getScores().getMaxRmsd();\n        }\n        scores.setMaxRmsd(maxScores(values));\n        // Rmsd\n        for (int i = 1; i < rotations.size(); i++) {\n            values[i - 1] = rotations.get(i).getScores().getRmsd();\n        }\n        scores.setRmsd(averageScores(values));\n        // minTm\n        for (int i = 1; i < rotations.size(); i++) {\n            values[i - 1] = rotations.get(i).getScores().getMinTm();\n        }\n        scores.setMinTm(minScores(values));\n        // maxTm\n        for (int i = 1; i < rotations.size(); i++) {\n            values[i - 1] = rotations.get(i).getScores().getMaxTm();\n        }\n        scores.setMaxTm(maxScores(values));\n        // Tm\n        for (int i = 1; i < rotations.size(); i++) {\n            values[i - 1] = rotations.get(i).getScores().getTm();\n        }\n        scores.setTm(averageScores(values));\n        // Rmsd subunit centers\n        for (int i = 1; i < rotations.size(); i++) {\n            values[i - 1] = rotations.get(i).getScores().getRmsdCenters();\n        }\n        scores.setRmsdCenters(averageScores(values));\n        // TmIntra\n        for (int i = 1; i < rotations.size(); i++) {\n            values[i - 1] = rotations.get(i).getScores().getTmIntra();\n        }\n        scores.setTmIntra(averageScores(values));\n        // RmsdIntra\n        for (int i = 1; i < rotations.size(); i++) {\n            values[i - 1] = rotations.get(i).getScores().getRmsdIntra();\n        }\n        scores.setRmsdIntra(averageScores(values));\n        // SymDeviation\n        scores.setSymDeviation(symmetryDeviation);\n    }\n    return scores;\n}","repo_id":"9","comment":"/**\n * Returns QuatSymmetryScores averaged over all rotations\n * (except the first rotation, which is the unit operation E)\n * @return mean scores average over rotations\n */\n","repo_name":"biojava-master/","id":1935,"method_signature":"QuatSymmetryScores getScores()"}