{"callee_method_ids":[1831,1832],"callee_method_names":["AtomIterator.hasNext","AtomIterator.next","Logger.debug","Logger.error","Atom.clone","Atom.getX","Atom.getY","Atom.getZ","Matrix.plus","Matrix.get","Matrix.get","Matrix.get","Atom.setCoords","Logger.debug","Logger.error","Atom.clone"],"method_name":"Calc.plus","method_implementation":"{\n    AtomIterator iter = new AtomIterator(s);\n    Atom oldAtom = null;\n    Atom rotOldAtom = null;\n    while (iter.hasNext()) {\n        Atom atom = null;\n        atom = iter.next();\n        try {\n            if (oldAtom != null) {\n                logger.debug(\"before {}\", getDistance(oldAtom, atom));\n            }\n        } catch (Exception e) {\n            logger.error(\"Exception: \", e);\n        }\n        oldAtom = (Atom) atom.clone();\n        double x = atom.getX();\n        double y = atom.getY();\n        double z = atom.getZ();\n        double[][] ad = new double[][] { { x, y, z } };\n        Matrix am = new Matrix(ad);\n        Matrix na = am.plus(matrix);\n        double[] coords = new double[3];\n        coords[0] = na.get(0, 0);\n        coords[1] = na.get(0, 1);\n        coords[2] = na.get(0, 2);\n        atom.setCoords(coords);\n        try {\n            if (rotOldAtom != null) {\n                logger.debug(\"after {}\", getDistance(rotOldAtom, atom));\n            }\n        } catch (Exception e) {\n            logger.error(\"Exception: \", e);\n        }\n        rotOldAtom = (Atom) atom.clone();\n    }\n}","repo_id":"9","comment":"/**\n * calculate structure + Matrix coodinates ...\n *\n * @param s\n *            the structure to operate on\n * @param matrix\n *            a Matrix object\n */\n","repo_name":"biojava-master/","id":372,"method_signature":"void plus(Structure, Matrix)"}