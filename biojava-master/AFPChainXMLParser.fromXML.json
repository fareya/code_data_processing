{"callee_method_names":["AFPChain.getName1","AFPChain.getName2","String.equals","String.equals"],"method_name":"AFPChainXMLParser.fromXML","method_implementation":"{\n    AFPChain[] afps = parseMultiXML(xml);\n    if (afps.length > 0) {\n        AFPChain afpChain = afps[0];\n        String n1 = afpChain.getName1();\n        String n2 = afpChain.getName2();\n        if (n1 == null)\n            n1 = \"\";\n        if (n2 == null)\n            n2 = \"\";\n        //System.out.println(\"from AFPCHAIN: \" + n1 + \" \" + n2);\n        if (n1.equals(name2) && n2.equals(name1)) {\n            // flipped order\n            //System.out.println(\"AfpChain in wrong order, flipping...\");\n            afpChain = AFPChainFlipper.flipChain(afpChain);\n        }\n        rebuildAFPChain(afpChain, ca1, ca2);\n        return afpChain;\n    }\n    return null;\n}","repo_id":"9","comment":"/**\n * new utility method that checks that the order of the pair in the XML alignment is correct and flips the direction if needed\n *\n * @param xml\n * @param name1\n * @param name1\n * @param ca1\n * @param ca2\n * @return\n */\n","repo_name":"biojava-master/","id":520,"method_signature":"AFPChain fromXML(String, String, String, Atom[], Atom[])"}