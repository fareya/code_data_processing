{"callee_method_names":["QuatSymmetrySubunits.getClusterIds","List<Integer>.size","List<Integer>.get","List<Integer>.get","List<Integer>.get","List<Integer>.size"],"method_name":"RotationSolver.isAllowedPermutation","method_implementation":"{\n    List<Integer> seqClusterId = subunits.getClusterIds();\n    int selfaligned = 0;\n    for (int i = 0; i < permutation.size(); i++) {\n        int j = permutation.get(i);\n        if (!Objects.equals(seqClusterId.get(i), seqClusterId.get(j))) {\n            return false;\n        }\n        if (i == j) {\n            selfaligned++;\n        }\n    }\n    // either identity (all self aligned) or all unique\n    return selfaligned == 0 || selfaligned == permutation.size();\n}","repo_id":"9","comment":"/**\n * The permutation must map all subunits onto an equivalent subunit\n * and no subunit onto itself\n * @param permutation\n * @return\n */\n","repo_name":"biojava-master/","id":1904,"method_signature":"boolean isAllowedPermutation(List)"}