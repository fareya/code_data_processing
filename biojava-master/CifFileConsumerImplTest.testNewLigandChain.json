{"callee_method_ids":[1190],"callee_method_names":["PDBFileParser.setFileParsingParameters","PDBFileParser.parsePDBFile","Structure.getNonPolyChainsByPDB","Chain.getAtomGroups","Structure.getNonPolyChainsByPDB","Chain.getAtomGroups","Structure.getChains","Structure.getChains"],"method_name":"CifFileConsumerImplTest.testNewLigandChain","method_implementation":"{\n    // Test the file parsing speed when the files are already downloaded.\n    InputStream pdbStream = new GZIPInputStream(getClass().getResourceAsStream(\"/ligandTest.pdb.gz\"));\n    InputStream cifStream = new GZIPInputStream(getClass().getResourceAsStream(\"/ligandTest.cif.gz\"));\n    assertNotNull(cifStream);\n    assertNotNull(pdbStream);\n    FileParsingParameters params = new FileParsingParameters();\n    PDBFileParser pdbpars = new PDBFileParser();\n    pdbpars.setFileParsingParameters(params);\n    Structure s1 = pdbpars.parsePDBFile(pdbStream);\n    // The chain B should be present with 1 ligand HEM\n    Chain c1 = s1.getNonPolyChainsByPDB(\"B\").get(0);\n    assertNotNull(c1);\n    int expectedNumLigands = 1;\n    assertEquals(expectedNumLigands, c1.getAtomGroups().size());\n    Structure s2 = new CifFileReader().getStructure(cifStream);\n    // The chain B should be present with 1 ligand HEM\n    Chain c2 = s2.getNonPolyChainsByPDB(\"B\").get(0);\n    assertNotNull(c2);\n    assertEquals(expectedNumLigands, c2.getAtomGroups().size());\n    // pdb and mmcif should have same number of chains\n    assertEquals(s1.getChains().size(), s2.getChains().size());\n}","repo_id":"9","comment":"/**\n * This test represents a common situation for a non-deposited structure.\n * When building with common crystallography software, the user often adds new\n * ligands (or solvent) molecules as new chains.  Only prior to deposition\n * then relabel them so that they belong to the same chain as the polymeric residues.\n *\n * In this case, the ligands represent valuable information and should not be discarded.\n */\n","repo_name":"biojava-master/","id":2236,"method_signature":"void testNewLigandChain()"}