{"callee_method_names":["String.compareTo","String.compareTo"],"method_name":"SystemInfo.quickSort","method_implementation":"{\n    int i = startIndex;\n    int j = endIndex;\n    String pivot = vector[(i + j) / 2];\n    do {\n        while (i < endIndex && pivot.compareTo(vector[i]) > 0) {\n            ++i;\n        }\n        while (j > startIndex && pivot.compareTo(vector[j]) < 0) {\n            --j;\n        }\n        if (i < j) {\n            String temp = vector[i];\n            vector[i] = vector[j];\n            vector[j] = temp;\n        }\n        if (i <= j) {\n            ++i;\n            --j;\n        }\n    } while (i <= j);\n    if (startIndex < j) {\n        quickSort(vector, startIndex, j);\n    }\n    if (i < endIndex) {\n        quickSort(vector, i, endIndex);\n    }\n}","repo_id":"9","comment":"/**\n * Stripped-down QuickSort.\n * @param   vector      The vector of strings to sort\n * @param   startIndex  The first element to sort\n * @param   endIndex    The last element to sort\n *\n * example use:\n * <pre>\n *    JavaInfo.quickSort(vector, 0, vector.length - 1);\n *  <\/pre>\n */\n","repo_name":"biojava-master/","id":3303,"method_signature":"void quickSort(String[], int, int)"}