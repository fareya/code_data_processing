{"callee_method_names":["MultipleAlignment.getAtomArrays","MultipleAlignment.size","MultipleAlignment.getStructureIdentifier","Map<String, Integer>.containsKey","Map<String, Integer>.put","Map<String, Integer>.get","Map<String, Integer>.get","Map<String, Integer>.put","List<String>.get","ProteinSequence.setAccession","MultipleSequenceAlignment<ProteinSequence, AminoAcidCompound>.addAlignedSequence"],"method_name":"MultipleAlignmentTools.toProteinMSA","method_implementation":"{\n    // Check that the alignment is of protein structures\n    Group g = msta.getAtomArrays().get(0)[0].getGroup();\n    if (!(g instanceof AminoAcid)) {\n        throw new IllegalArgumentException(\"Cannot convert to multiple sequence alignment: \" + \"the structures aligned are not proteins\");\n    }\n    MultipleSequenceAlignment<ProteinSequence, AminoAcidCompound> msa = new MultipleSequenceAlignment<ProteinSequence, AminoAcidCompound>();\n    Map<String, Integer> uniqueID = new HashMap<String, Integer>();\n    List<String> seqs = getSequenceAlignment(msta);\n    for (int i = 0; i < msta.size(); i++) {\n        // Make sure the identifiers are unique (required by AccessionID)\n        String id = msta.getStructureIdentifier(i).toString();\n        if (uniqueID.containsKey(id)) {\n            uniqueID.put(id, uniqueID.get(id) + 1);\n            id += \"_\" + uniqueID.get(id);\n        } else\n            uniqueID.put(id, 1);\n        AccessionID acc = new AccessionID(id);\n        ProteinSequence pseq = new ProteinSequence(seqs.get(i));\n        pseq.setAccession(acc);\n        msa.addAlignedSequence(pseq);\n    }\n    return msa;\n}","repo_id":"9","comment":"/**\n * Convert a MultipleAlignment into a MultipleSequenceAlignment of AminoAcid\n * residues. This method is only valid for protein structure alignments.\n *\n * @param msta\n *            Multiple Structure Alignment\n * @return MultipleSequenceAlignment of protein sequences\n * @throws CompoundNotFoundException\n */\n","repo_name":"biojava-master/","id":664,"method_signature":"MultipleSequenceAlignment<ProteinSequence,AminoAcidCompound> toProteinMSA(MultipleAlignment)"}