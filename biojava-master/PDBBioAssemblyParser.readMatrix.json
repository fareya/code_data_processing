{"callee_method_names":["String.split","String[].substring","Matrix.set","Matrix.set","Matrix.set"],"method_name":"PDBBioAssemblyParser.readMatrix","method_implementation":"{\n    // split by one or more spaces\n    String[] items = line.split(\"[ ]+\");\n    // parse BIOMTx, where x is the position in the matrix\n    String pos = items[2].substring(5);\n    int row = Integer.parseInt(pos);\n    if (row == 1) {\n        currentMatrix = Matrix.identity(3, 3);\n        shift = new double[3];\n    }\n    currentMatrix.set((row - 1), 0, Float.parseFloat(items[4]));\n    currentMatrix.set((row - 1), 1, Float.parseFloat(items[5]));\n    currentMatrix.set((row - 1), 2, Float.parseFloat(items[6]));\n    shift[row - 1] = Float.parseFloat(items[7]);\n    // return true if 3rd row of matrix has been processed\n    return row == 3;\n}","repo_id":"9","comment":"/**\n * Parses a row of a BIOMT matrix in a REMARK 350 record.\n * Example: REMARK 350   BIOMT1   2  1.000000  0.000000  0.000000        0.00000\n * @param line\n * @return true if 3rd line of matrix has been parsed (matrix is complete)\n */\n","repo_name":"biojava-master/","id":1227,"method_signature":"boolean readMatrix(String)"}