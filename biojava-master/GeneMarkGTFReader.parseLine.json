{"callee_method_ids":[2421],"callee_method_names":["String.indexOf","String.substring","String.indexOf","String.substring","String.indexOf","String.substring","String.indexOf","String.substring","String.indexOf","String.substring","String.indexOf","String.substring","String.indexOf","String.charAt","Location.isNegative","String.indexOf","String.substring","String.indexOf","String.substring","String.substring"],"method_name":"GeneMarkGTFReader.parseLine","method_implementation":"{\n    //FIXME update to use regex split on tabs\n    //FIXME better errors on parse failures\n    int start = 0;\n    int end = 0;\n    start = end;\n    end = s.indexOf('\\t', start);\n    String seqname = s.substring(start, end).trim();\n    start = end + 1;\n    end = s.indexOf('\\t', start);\n    String source = s.substring(start, end).trim();\n    start = end + 1;\n    end = s.indexOf('\\t', start);\n    String type = s.substring(start, end);\n    start = end + 1;\n    end = s.indexOf('\\t', start);\n    String locStart = s.substring(start, end);\n    start = end + 1;\n    end = s.indexOf('\\t', start);\n    String locEnd = s.substring(start, end);\n    Double score;\n    start = end + 1;\n    end = s.indexOf('\\t', start);\n    try {\n        score = Double.parseDouble(s.substring(start, end));\n    } catch (Exception e) {\n        score = 0.0;\n    }\n    start = end + 1;\n    end = s.indexOf('\\t', start);\n    char strand = s.charAt(end - 1);\n    Location location = Location.fromBio(Integer.parseInt(locStart), Integer.parseInt(locEnd), strand);\n    assert (strand == '-') == location.isNegative();\n    int frame;\n    start = end + 1;\n    end = s.indexOf('\\t', start);\n    try {\n        frame = Integer.parseInt(s.substring(start, end));\n    } catch (Exception e) {\n        frame = -1;\n    }\n    //grab everything until end of line (or # comment)\n    start = end + 1;\n    end = s.indexOf('#', start);\n    String attributes = null;\n    if (end < 0) {\n        attributes = s.substring(start);\n    } else {\n        attributes = s.substring(start, end);\n    }\n    return new Feature(seqname, source, type, location, score, frame, attributes);\n}","repo_id":"9","comment":"/**\n * create Feature from line of GFF file\n */\n","repo_name":"biojava-master/","id":2429,"method_signature":"Feature parseLine(String)"}