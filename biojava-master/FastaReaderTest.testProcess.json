{"callee_method_names":["Logger.info","FastaReader<ProteinSequence, AminoAcidCompound>.process","InputStream.close","LinkedHashMap<String, ProteinSequence>.size","LinkedHashMap<String, ProteinSequence>.keySet","LinkedHashMap<String, ProteinSequence>.get","ProteinSequence.getAccession","ProteinSequence.getSequenceAsString","ProteinSequence.getAccession","ProteinSequence.getSequenceAsString","ProteinSequence.getAccession","ProteinSequence.getSequenceAsString"],"method_name":"FastaReaderTest.testProcess","method_implementation":"{\n    logger.info(\"process\");\n    InputStream inStream = this.getClass().getResourceAsStream(\"/PF00104_small.fasta\");\n    Assert.assertNotNull(inStream);\n    FastaReader<ProteinSequence, AminoAcidCompound> fastaReader = new FastaReader<ProteinSequence, AminoAcidCompound>(inStream, new GenericFastaHeaderParser<ProteinSequence, AminoAcidCompound>(), new ProteinSequenceCreator(AminoAcidCompoundSet.getAminoAcidCompoundSet()));\n    LinkedHashMap<String, ProteinSequence> proteinSequences = fastaReader.process();\n    inStream.close();\n    //Should have 282 sequences\n    //logger.debug(\"Expecting 283 got \" + proteinSequences.size());\n    Assert.assertEquals(proteinSequences.size(), 283);\n    int seqNum = 0;\n    for (String id : proteinSequences.keySet()) {\n        ProteinSequence proteinSequence = proteinSequences.get(id);\n        switch(seqNum) {\n            case 0:\n                Assert.assertEquals(proteinSequence.getAccession().getID(), \"A2D504_ATEGE/1-46\");\n                Assert.assertEquals(proteinSequence.getSequenceAsStringn                break;\n            case 281:\n                //logger.debug(\"Get Accession: {}\", proteinSequence.getAccession());\n                //logger.debug(\"Get Protein Sequence: {}\", proteinSequence.getSequenceAsString());\n                Assert.assertEquals(proteinSequence.getAccession().getID(), \"Q9PU76_CRONI/141-323\");\n                Assert.assertEquals(proteinSequence.getSequenceAsString(), \"VETVTELTEFAKSI-PGFS-N----LD-LND----------------Q----VTL--LKY-----------GVY----------------------EA-IFAM------LASVMNK---DGMPVAYGNGFITRE------------------------------------------------------------------------------------------------------------------------------------------------------------FLKSLRKPFCDIMEPKFDFA-MKF-NSL-E-LDDSDI--------------------SLFVA-AIIC-CGDRPG-------------------------------------------LVNV--GHIEKMQESIVHVLKL-H-----LQN---------NH---PD----------------------------DI------F--------LFP-KLLQKMAD-LRQLV-----------------TEH-AQLV--QIIKK---TESDAHLHPLL-------QEI---\");\n                break;\n            case 282:\n                Assert.assertEquals(proteinSequence.getAccession().getID(), \"Q98SJ1_CHICK/15-61\");\n                Assert.assertEquals(proteinSequence.getSequenceAsStringn                break;\n        }\n        seqNum++;\n    }\n    Assert.assertEquals(seqNum, 283);\n}","repo_id":"9","comment":"/**\n * Test of process method, of class FastaReader.\n */\n","repo_name":"biojava-master/","id":3224,"method_signature":"void testProcess()"}