{"callee_method_names":["String.length","String.substring","String.substring","HashMap<String, SpaceGroup>.get"],"method_name":"SymoplibParser.getSpaceGroup","method_implementation":"{\n    if (shortName == null || shortName.length() <= 2)\n        return null;\n    // PDB uses group \"P 1-\" for 13 racemic mixture entries (as of Sep2011), e.g. 3e7r\n    // they call the space group \"P 1-\" unusually (symop.lib and everyone else call it \"P -1\")\n    if (\"P 1-\".equals(shortName))\n        shortName = \"P -1\";\n    // enantiomorphic space groups contain sometime letters indicating glide planes which should always be lower case\n    // in some PDB entries like 4gwv they are in upper case, we fix that here: convert any non-first letter to lower case\n    shortName = shortName.substring(0, 1) + shortName.substring(1).toLowerCase();\n    return name2sgs.get(shortName);\n}","repo_id":"9","comment":"/**\n * Get the space group for the given international short name, using\n * the PDB format, e.g. 'P 21 21 21' or 'C 1 c 1'\n * @param shortName\n * @return the SpaceGroup or null if the shortName is not valid\n */\n","repo_name":"biojava-master/","id":1447,"method_signature":"SpaceGroup getSpaceGroup(String)"}