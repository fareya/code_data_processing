{"callee_method_names":["List<List<AFPChain>>.size","List<List<AFPChain>>.size","List<List<AFPChain>>.get","List<Double>.add","List<Double>.get","List<Double>.get","Logger.info"],"method_name":"MultipleMcMain.chooseReferenceRMSD","method_implementation":"{\n    int size = afpAlignments.size();\n    List<Double> RMSDs = new ArrayList<Double>();\n    for (int i = 0; i < afpAlignments.size(); i++) {\n        double rmsd = 0.0;\n        for (int j = 0; j < size; j++) {\n            if (i != j)\n                rmsd += afpAlignments.get(i).get(j).getTotalRmsdOpt();\n        }\n        RMSDs.add(rmsd);\n    }\n    int reference = 0;\n    for (int i = 1; i < size; i++) {\n        if (RMSDs.get(i) < RMSDs.get(reference))\n            reference = i;\n    }\n    logger.info(\"Reference structure is \" + reference);\n    return reference;\n}","repo_id":"9","comment":"/**\n * This method takes the all-to-all pairwise alignments Matrix (as a\n * double List of AFPChain) and calculates the structure with the\n * lowest average RMSD against all others.\n * The index of this structure is returned.\n *\n * @param alignments List double containing all-to-all pairwise alignments\n * @return int reference index\n */\n","repo_name":"biojava-master/","id":691,"method_signature":"int chooseReferenceRMSD(List)"}