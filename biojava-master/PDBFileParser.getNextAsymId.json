{"callee_method_names":["String.length","String.charAt","String.length","String.getChars","String.length","String.getChars"],"method_name":"PDBFileParser.getNextAsymId","method_implementation":"{\n    if (asymId.length() == 1) {\n        if (!\"Z\".equals(asymId)) {\n            return Character.toString(getNextChar(asymId.charAt(0)));\n        } else {\n            return \"AA\";\n        }\n    } else if (asymId.length() == 2) {\n        if (\"ZZ\".equals(asymId)) {\n            return \"AAA\";\n        }\n        char[] c = new char[2];\n        asymId.getChars(0, 2, c, 0);\n        c[0] = getNextChar(c[0]);\n        if (c[0] == 'A') {\n            c[1] = getNextChar(c[1]);\n        }\n        return String.valueOf(c);\n    } else if (asymId.length() == 3) {\n        char[] c = new char[3];\n        asymId.getChars(0, 3, c, 0);\n        c[0] = getNextChar(c[0]);\n        if (c[0] == 'A') {\n            c[1] = getNextChar(c[1]);\n            if (c[1] == 'A') {\n                c[2] = getNextChar(c[2]);\n            }\n        }\n        return String.valueOf(c);\n    }\n    return null;\n}","repo_id":"9","comment":"/**\n * Gets the next asym id given an asymId, according to the convention followed by\n * mmCIF files produced by the PDB\n * i.e.: A,B,...,Z,AA,BA,CA,...,ZA,AB,BB,CB,...,ZB,.......,ZZ,AAA,BAA,CAA,...\n * @param asymId\n * @return\n */\n","repo_name":"biojava-master/","id":1198,"method_signature":"String getNextAsymId(String)"}