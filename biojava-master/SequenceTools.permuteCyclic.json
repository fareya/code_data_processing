{"callee_method_names":[],"method_name":"SequenceTools.permuteCyclic","method_implementation":"{\n    if (array.length != fill.length)\n        throw new IllegalArgumentException(\"Lengths do not match\");\n    if (n < 0)\n        n = array.length + n;\n    while (n > array.length) {\n        n -= array.length;\n    }\n    for (int i = 0; i < array.length; i++) {\n        if (i + n < array.length) {\n            fill[i] = array[i + n];\n        } else {\n            fill[i] = array[i - array.length + n];\n        }\n    }\n}","repo_id":"9","comment":"/**\n * Cyclically permute {@code array} <em>forward<\/em> by {@code n} elements.\n * @param array The original result; will not be changed\n * @param fill The permuted result will be filled into this array\n * @param n The number of elements to permute by; can be positive or negative; values greater than the length of the array are acceptable\n */\n","repo_name":"biojava-master/","id":2593,"method_signature":"void permuteCyclic(T[], T[], int)"}