{"callee_method_names":["HashMap<String, ResultFactory>.put","File.getAbsolutePath","String.lastIndexOf","String.substring","HashMap<String, ResultFactory>.get","HashMap<String, ResultFactory>.get"],"method_name":"SearchIO.guessFactory","method_implementation":"{\n    if (extensionFactoryAssociation == null) {\n        extensionFactoryAssociation = new HashMap<String, ResultFactory>();\n        ServiceLoader<ResultFactory> impl = ServiceLoader.load(ResultFactory.class);\n        for (ResultFactory loadedImpl : impl) {\n            List<String> fileExtensions = loadedImpl.getFileExtensions();\n            for (String ext : fileExtensions) extensionFactoryAssociation.put(ext, loadedImpl);\n        }\n    }\n    String filename = f.getAbsolutePath();\n    int extensionPos = filename.lastIndexOf(\".\");\n    String extension = filename.substring(extensionPos + 1);\n    if (extensionFactoryAssociation.get(extension) == null)\n        throw new UnsupportedOperationException(NOT_SUPPORTED_FILE_EXCEPTION + \"\\nExtension:\" + extension);\n    return extensionFactoryAssociation.get(extension);\n}","repo_id":"9","comment":"/**\n * Guess factory class to be used using file extension.\n * It can be used both for read and for in write.\n * To be ResultFactory classes automatically available to this subsystem\n * they must be listed in the file org.biojava.nbio.core.search.io.ResultFactory\n * located in src/main/resources\n *\n * @param f: file. Its last extension (text after last dot) will be compared\n * to default extensions of known ResultFactory implementing classes\n * @return the guessed factory\n */\n","repo_name":"biojava-master/","id":2558,"method_signature":"ResultFactory guessFactory(File)"}