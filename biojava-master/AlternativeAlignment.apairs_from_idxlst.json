{"callee_method_names":["JointFragments.getIdxlist","List<int[]>.size","List<int[]>.size","List<int[]>.size","List<int[]>.size","List<int[]>.get"],"method_name":"AlternativeAlignment.apairs_from_idxlst","method_implementation":"{\n    List<int[]> il = jf.getIdxlist();\n    //System.out.println(\"Alt Alig apairs_from_idxlst\");\n    aligpath = new IndexPair[il.size()];\n    idx1 = new int[il.size()];\n    idx2 = new int[il.size()];\n    for (int i = 0; i < il.size(); i++) {\n        int[] p = il.get(i);\n        //System.out.print(\" idx1 \" + p[0] + \" idx2 \" + p[1]);\n        idx1[i] = p[0];\n        idx2[i] = p[1];\n        aligpath[i] = new IndexPair((short) p[0], (short) p[1]);\n    }\n    eqr0 = idx1.length;\n    //System.out.println(\"eqr \" + eqr0);\n    gaps0 = count_gaps(idx1, idx2);\n}","repo_id":"9","comment":"/**\n * Set apairs according to a list of (i,j) tuples.\n *\n * @param jf a JoingFragment\n */\n","repo_name":"biojava-master/","id":820,"method_signature":"void apairs_from_idxlst(JointFragments)"}