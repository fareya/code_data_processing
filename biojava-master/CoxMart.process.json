{"callee_method_ids":[3673,3675,3659,3657,3661],"callee_method_names":["ArrayList<SurvivalInfo>.size","ArrayList<SurvivalInfo>.size","ArrayList<SurvivalInfo>.get","SurvivalInfo.getTime","SurvivalInfo.getStatus","SurvivalInfo.getStrata","SurvivalInfo.getWeight","SurvivalInfo.getScore"],"method_name":"CoxMart.process","method_implementation":"{\n    int i, j;\n    int lastone;\n    int n = survivalInfoList.size();\n    double deaths, denom = 0, e_denom = 0;\n    double hazard;\n    double temp, wtsum;\n    double downwt;\n    double[] time = new double[n];\n    double[] status = new double[n];\n    double[] strata = new double[n];\n    double[] wt = new double[n];\n    double[] score = new double[n];\n    double[] expect = new double[survivalInfoList.size()];\n    for (int p = 0; p < n; p++) {\n        SurvivalInfo si = survivalInfoList.get(p);\n        time[p] = si.getTime();\n        status[p] = si.getStatus();\n        if (useStrata) {\n            strata[p] = si.getStrata();\n        } else {\n            strata[p] = 0;\n        }\n        wt[p] = si.getWeight();\n        score[p] = si.getScore();\n    }\n    strata[n - 1] = 1;\n    /*failsafe */\n    /* Pass 1-- store the risk denominator in 'expect' */\n    for (i = n - 1; i >= 0; i--) {\n        // Error because of no bounds checking in C it is an error on the get i - 1\n        //   SurvivalInfo si = survivalInfoList.get(i);\n        if (strata[i] == 1) {\n            //strata[i]\n            denom = 0;\n        }\n        //score[i]*wt[i];\n        denom += score[i] * wt[i];\n        if (//strata[i-1]==1 ||  time[i-1]!=time[i]\n        i == 0 || strata[i - 1] == 1 || time[i - 1] != time[i]) {\n            //   si.setResidual(denom);\n            expect[i] = denom;\n        } else {\n            //   si.setResidual(0); //expect[i] =0;\n            expect[i] = 0;\n        }\n    }\n    /* Pass 2-- now do the work */\n    deaths = 0;\n    wtsum = 0;\n    e_denom = 0;\n    hazard = 0;\n    lastone = 0;\n    for (i = 0; i < n; i++) {\n        //         SurvivalInfo si = survivalInfoList.get(i);\n        //         SurvivalInfo sip1 = null;\n        //         if (i + 1 < n) {\n        //             sip1 = survivalInfoList.get(i + 1);\n        //         }\n        //         if (si.getResidual() != 0) {\n        //             denom = si.getResidual();\n        //         }\n        if (expect[i] != 0)\n            denom = expect[i];\n        //         si.setResidual(status[i]);//expect[i] = status[i];\n        expect[i] = status[i];\n        //status[i];\n        deaths += status[i];\n        // status[i]*wt[i];\n        wtsum += status[i] * wt[i];\n        //score[i]*status[i] *wt[i];\n        e_denom += score[i] * status[i] * wt[i];\n        if (strata[i] == 1 || time[i + 1] != time[i]) {\n            //strata[i]==1 ||  time[i+1]!=time[i]\n            /*last subject of a set of tied times */\n            if (deaths < 2 || method == CoxMethod.Breslow) {\n                //*method==0\n                hazard += wtsum / denom;\n                for (j = lastone; j <= i; j++) {\n                    //     SurvivalInfo sj = survivalInfoList.get(j);\n                    //     double res =  sj.getResidual() - score[j] * hazard;\n                    expect[j] -= score[j] * hazard;\n                    //     sj.setResidual(res); //expect[j] -= score[j]*hazard;\n                }\n            } else {\n                temp = hazard;\n                wtsum /= deaths;\n                for (j = 0; j < deaths; j++) {\n                    downwt = j / deaths;\n                    hazard += wtsum / (denom - e_denom * downwt);\n                    temp += wtsum * (1 - downwt) / (denom - e_denom * downwt);\n                }\n                for (j = lastone; j <= i; j++) {\n                    //   SurvivalInfo sj = survivalInfoList.get(j);\n                    if (status[j] == 0) {\n                        //this appears to be an error for = - versus -=\n                        //   double res = -score[j] * hazard;\n                        expect[j] = -score[j] * hazard;\n                        //   sj.setResidual(res);//expect[j] = -score[j]*hazard; This appears to be an error of -score vs -=\n                    } else {\n                        // double res = sj.getResidual() - score[j] * temp;\n                        expect[j] -= score[j] * temp;\n                        //expect[j] -=  score[j]* temp;\n                    }\n                }\n            }\n            lastone = i + 1;\n            deaths = 0;\n            wtsum = 0;\n            e_denom = 0;\n        }\n        if (strata[i] == 1) {\n            hazard = 0;\n        }\n    }\n    for (j = lastone; j < n; j++) {\n        expect[j] -= score[j] * hazard;\n    }\n    return expect;\n}","repo_id":"9","comment":"/**\n * @param method\n * @param survivalInfoList\n * @param useStrata\n * @return\n */\n","repo_name":"biojava-master/","id":3677,"method_signature":"double[] process(CoxMethod, ArrayList, boolean)"}