{"callee_method_names":["DocumentBuilderFactory.newDocumentBuilder","InputSource.setCharacterStream","DocumentBuilder.parse","Document.getDocumentElement","Document.getElementsByTagName","NodeList.getLength","NodeList.item","List<MultipleAlignmentEnsemble>.add"],"method_name":"MultipleAlignmentXMLParser.parseXMLfile","method_implementation":"{\n    List<MultipleAlignmentEnsemble> ensembles = new ArrayList<MultipleAlignmentEnsemble>();\n    //Convert string to XML document\n    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n    DocumentBuilder db = factory.newDocumentBuilder();\n    InputSource inStream = new InputSource();\n    inStream.setCharacterStream(new StringReader(xml));\n    Document doc = db.parse(inStream);\n    doc.getDocumentElement().normalize();\n    //In case there are more than one ensemble in the document (generalize)\n    NodeList listOfEnsembles = doc.getElementsByTagName(\"MultipleAlignmentEnsemble\");\n    //Explore all the ensembles, if multiple ones\n    for (int e = 0; e < listOfEnsembles.getLength(); e++) {\n        Node root = listOfEnsembles.item(e);\n        MultipleAlignmentEnsemble ensemble = parseEnsemble(root);\n        ensembles.add(ensemble);\n    }\n    return ensembles;\n}","repo_id":"9","comment":"/**\n * Creates a list of MultipleAlignment ensembles from an XML file.\n * This recovers only the information that was previously stored.\n * If the Atoms are needed, the method getAtomArrays() will automatically\n * download the structures from the stored structure identifiers.\n *\n * @param xml String XML file containing any number of ensembles\n * @return List of ensembles in the file\n * @throws ParserConfigurationException\n * @throws SAXException\n * @throws IOException\n */\n","repo_name":"biojava-master/","id":526,"method_signature":"List<MultipleAlignmentEnsemble> parseXMLfile(String)"}