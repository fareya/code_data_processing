{"callee_method_ids":[641],"callee_method_names":["AtomCache.getFileParsingParams","FileParsingParameters.setParseBioAssembly","AtomCache.setFiletype","Structure.getPDBHeader","Structure.getPDBHeader"],"method_name":"TestDifficultMmCIFFiles.test2KLI","method_implementation":"{\n    AtomCache cache = new AtomCache();\n    StructureIO.setAtomCache(cache);\n    FileParsingParameters params = cache.getFileParsingParams();\n    params.setParseBioAssembly(true);\n    StructureIO.setAtomCache(cache);\n    cache.setFiletype(StructureFiletype.CIF);\n    Structure sCif = StructureIO.getStructure(\"2KLI\");\n    assertNotNull(sCif);\n    assertNotNull(sCif.getPDBHeader().getBioAssemblies());\n    Map<Integer, BioAssemblyInfo> mapCif = sCif.getPDBHeader().getBioAssemblies();\n    assertNotNull(mapCif);\n}","repo_id":"9","comment":"/**\n * The last category in 2KLI mmCIF file is _pdbx_struct_oper_list, which is needed for\n * the biounit annotation.\n * This tests makes sure that the last category in a mmCIF file is not missed because\n * of its position as last one in file.\n * @throws IOException\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":2274,"method_signature":"void test2KLI()"}