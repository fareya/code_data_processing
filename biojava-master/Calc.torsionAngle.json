{"callee_method_names":[],"method_name":"Calc.torsionAngle","method_implementation":"{\n    Atom ab = subtract(a, b);\n    Atom cb = subtract(c, b);\n    Atom bc = subtract(b, c);\n    Atom dc = subtract(d, c);\n    Atom abc = vectorProduct(ab, cb);\n    Atom bcd = vectorProduct(bc, dc);\n    double angl = angle(abc, bcd);\n    /* calc the sign: */\n    Atom vecprod = vectorProduct(abc, bcd);\n    double val = scalarProduct(cb, vecprod);\n    if (val < 0.0)\n        angl = -angl;\n    return angl;\n}","repo_id":"9","comment":"/**\n * Calculate the torsion angle, i.e. the angle between the normal vectors of\n * the two plains a-b-c and b-c-d. See\n * http://en.wikipedia.org/wiki/Dihedral_angle\n *\n * @param a\n *            an Atom object\n * @param b\n *            an Atom object\n * @param c\n *            an Atom object\n * @param d\n *            an Atom object\n * @return the torsion angle in degrees, in range +-[0,180]. If either first\n *         3 or last 3 atoms are colinear then torsion angle is not defined\n *         and NaN is returned\n */\n","repo_name":"biojava-master/","id":353,"method_signature":"double torsionAngle(Atom, Atom, Atom, Atom)"}