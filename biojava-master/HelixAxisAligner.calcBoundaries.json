{"callee_method_names":["QuatSymmetrySubunits.getTraces","Point3d.set","Matrix4d.transform"],"method_name":"HelixAxisAligner.calcBoundaries","method_implementation":"{\n    minBoundary.x = Double.MAX_VALUE;\n    maxBoundary.x = Double.MIN_VALUE;\n    minBoundary.y = Double.MAX_VALUE;\n    maxBoundary.x = Double.MIN_VALUE;\n    minBoundary.z = Double.MAX_VALUE;\n    maxBoundary.z = Double.MIN_VALUE;\n    xzRadiusMax = Double.MIN_VALUE;\n    Point3d probe = new Point3d();\n    for (Point3d[] list : subunits.getTraces()) {\n        for (Point3d p : list) {\n            probe.set(p);\n            transformationMatrix.transform(probe);\n            minBoundary.x = Math.min(minBoundary.x, probe.x);\n            maxBoundary.x = Math.max(maxBoundary.x, probe.x);\n            minBoundary.y = Math.min(minBoundary.y, probe.y);\n            maxBoundary.y = Math.max(maxBoundary.y, probe.y);\n            minBoundary.z = Math.min(minBoundary.z, probe.z);\n            maxBoundary.z = Math.max(maxBoundary.z, probe.z);\n            xzRadiusMax = Math.max(xzRadiusMax, Math.sqrt(probe.x * probe.x + probe.z * probe.z));\n        }\n    }\n    //\t\tSystem.out.println(\"MinBoundary: \" + minBoundary);\n    //\t\tSystem.out.println(\"MaxBoundary: \" + maxBoundary);\n    //\t\tSystem.out.println(\"zxRadius: \" + xzRadiusMax);\n}","repo_id":"9","comment":"/**\n * Calculates the min and max boundaries of the structure after it has been\n * transformed into its canonical orientation.\n */\n","repo_name":"biojava-master/","id":1976,"method_signature":"void calcBoundaries()"}