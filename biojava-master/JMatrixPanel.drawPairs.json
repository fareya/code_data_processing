{"callee_method_ids":[817,818],"callee_method_names":["Graphics2D.getStroke","Graphics2D.setStroke","AlternativeAlignment.getIdx1","AlternativeAlignment.getIdx2","Graphics.setColor","Graphics.fillRect","Graphics.fillRect","Graphics.fillRect","Graphics2D.setStroke"],"method_name":"JMatrixPanel.drawPairs","method_implementation":"{\n    if (aligs == null)\n        return;\n    int nr = aligs.length;\n    Graphics2D g2D = (Graphics2D) g;\n    Stroke oldStroke = g2D.getStroke();\n    g2D.setStroke(stroke);\n    Color color;\n    float hue;\n    int width = Math.round(scale);\n    int w2 = width / 2;\n    for (int i = 0; i < aligs.length; i++) {\n        AlternativeAlignment a = aligs[i];\n        int[] idx1 = a.getIdx1();\n        int[] idx2 = a.getIdx2();\n        int xold = -1;\n        int yold = -1;\n        boolean start = true;\n        if ((selectedAlignmentPos != -1) && (selectedAlignmentPos == i)) {\n            color = Color.white;\n        } else {\n            hue = i * (1 / (float) nr);\n            color = Color.getHSBColor(hue, 1.0f, 1.0f);\n        }\n        g.setColor(color);\n        for (int j = 0; j < idx1.length; j++) {\n            int x1 = Math.round(idx1[j] * scale);\n            int y1 = Math.round(idx2[j] * scale);\n            if (!start) {\n                //g.drawLine(xold+1,yold,x1+1,y1);\n                //g2D.draw(new Line2D.Double(xold,yold,x1,y1));\n                g.fillRect(xold, yold, 2, 2);\n            } else {\n                g.fillRect(x1, y1, w2, w2);\n                start = false;\n            }\n            xold = x1;\n            yold = y1;\n        }\n        if (!start)\n            g.fillRect(xold, yold, w2, w2);\n    }\n    g2D.setStroke(oldStroke);\n}","repo_id":"9","comment":"/**\n * draw alternative alignments\n *\n * @param g\n */\n","repo_name":"biojava-master/","id":3312,"method_signature":"void drawPairs(Graphics)"}