{"callee_method_names":["Logger.info","Atom.getGroup"],"method_name":"AFPTwister.calCaRmsd","method_implementation":"{\n    Atom[] cod1 = getAtoms(ca1, res1, resn, false);\n    Atom[] cod2 = getAtoms(pro, res2, resn, false);\n    if (cod1.length == 0 || cod2.length == 0) {\n        logger.info(\"length of atoms  == 0!\");\n        return 99;\n    }\n    Matrix4d transform = SuperPositions.superpose(Calc.atomsToPoints(cod1), Calc.atomsToPoints(cod2));\n    for (Atom a : cod2) Calc.transform(a.getGroup(), transform);\n    return Calc.rmsd(cod1, cod2);\n}","repo_id":"9","comment":"/**\n * Return the rmsd of the CAs between the input pro and this protein, at\n * given positions. quite similar to transPdb but while that one transforms\n * the whole ca2, this one only works on the res1 and res2 positions.\n *\n * Modifies the coordinates in the second set of Atoms (pro).\n *\n * @return rmsd of CAs\n */\n","repo_name":"biojava-master/","id":543,"method_signature":"double calCaRmsd(Atom[], Atom[], int, int[], int[])"}