{"callee_method_ids":[1317],"callee_method_names":["FileParsingParameters.isHeaderOnly","String.substring","HashMap<String, Integer>.put","HashMap<String, Integer>.put","HashMap<String, Integer>.put","HashMap<String, Integer>.put","HashMap<String, Integer>.put","HashMap<String, Integer>.put","HashMap<String, Integer>.put","HashMap<String, Integer>.put","HashMap<String, Integer>.put","HashMap<String, Integer>.put","HashMap<String, Integer>.put","List<Map<String, Integer>>.add","Logger.info","Element.getMessage"],"method_name":"PDBFileParser.pdb_CONECT_Handler","method_implementation":"{\n    if (atomOverflow) {\n        return;\n    }\n    if (params.isHeaderOnly()) {\n        return;\n    }\n    // this try .. catch is e.g. to catch 1gte which has wrongly formatted lines...\n    try {\n        int atomserial = Integer.parseInt(line.substring(6, 11).trim());\n        Integer bond1 = conect_helper(line, 11, 16);\n        Integer bond2 = conect_helper(line, 16, 21);\n        Integer bond3 = conect_helper(line, 21, 26);\n        Integer bond4 = conect_helper(line, 26, 31);\n        Integer hyd1 = conect_helper(line, 31, 36);\n        Integer hyd2 = conect_helper(line, 36, 41);\n        Integer salt1 = conect_helper(line, 41, 46);\n        Integer hyd3 = conect_helper(line, 46, 51);\n        Integer hyd4 = conect_helper(line, 51, 56);\n        Integer salt2 = conect_helper(line, 56, 61);\n        //System.out.println(atomserial+ \" \"+ bond1 +\" \"+bond2+ \" \" +bond3+\" \"+bond4+\" \"+\n        //\t\t   hyd1+\" \"+hyd2 +\" \"+salt1+\" \"+hyd3+\" \"+hyd4+\" \"+salt2);\n        HashMap<String, Integer> cons = new HashMap<String, Integer>();\n        cons.put(\"atomserial\", atomserial);\n        if (bond1 != null)\n            cons.put(\"bond1\", bond1);\n        if (bond2 != null)\n            cons.put(\"bond2\", bond2);\n        if (bond3 != null)\n            cons.put(\"bond3\", bond3);\n        if (bond4 != null)\n            cons.put(\"bond4\", bond4);\n        if (hyd1 != null)\n            cons.put(\"hydrogen1\", hyd1);\n        if (hyd2 != null)\n            cons.put(\"hydrogen2\", hyd2);\n        if (salt1 != null)\n            cons.put(\"salt1\", salt1);\n        if (hyd3 != null)\n            cons.put(\"hydrogen3\", hyd3);\n        if (hyd4 != null)\n            cons.put(\"hydrogen4\", hyd4);\n        if (salt2 != null)\n            cons.put(\"salt2\", salt2);\n        connects.add(cons);\n    } catch (NumberFormatException e) {\n        logger.info(\"could not parse CONECT line correctly (\" + e.getMessage() + \"), at line : \" + line);\n        return;\n    }\n}","repo_id":"9","comment":"/**\n *  Handler for CONECT Record Format\n * \t<pre>\n * \t COLUMNS         DATA TYPE        FIELD           DEFINITION\n * \t ---------------------------------------------------------------------------------\n * \t 1 -  6         Record name      \"CONECT\"\n * \t 7 - 11         Integer          serial          Atom serial number\n * \t 12 - 16         Integer          serial          Serial number of bonded atom\n * \t 17 - 21         Integer          serial          Serial number of bonded atom\n * \t 22 - 26         Integer          serial          Serial number of bonded atom\n * \t 27 - 31         Integer          serial          Serial number of bonded atom\n * \t 32 - 36         Integer          serial          Serial number of hydrogen bonded\n * \t atom\n * \t 37 - 41         Integer          serial          Serial number of hydrogen bonded\n * \t atom\n * \t 42 - 46         Integer          serial          Serial number of salt bridged\n * \t atom\n * \t 47 - 51         Integer          serial          Serial number of hydrogen bonded\n * \t atom\n * \t 52 - 56         Integer          serial          Serial number of hydrogen bonded\n * \t atom\n * \t 57 - 61         Integer          serial          Serial number of salt bridged\n * \t atom\n * \t <\/pre>\n */\n","repo_name":"biojava-master/","id":1181,"method_signature":"void pdb_CONECT_Handler(String)"}