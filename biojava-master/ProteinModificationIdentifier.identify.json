{"callee_method_names":["Set<ProteinModification>.isEmpty","Chain.getAtomGroups","List<Group>.addAll","List<Group>.removeAll","List<Group>.addAll","List<Group>.isEmpty","List<Chain>.size","List<Chain>.get","Structure.getPDBCode","Logger.warn","ModificationCondition.getComponents","Map<Component, Set<Group>>.keySet","List<Component>.size","Set<ModifiedCompound>.addAll"],"method_name":"ProteinModificationIdentifier.identify","method_implementation":"{\n    if (chains == null) {\n        throw new IllegalArgumentException(\"Null structure.\");\n    }\n    if (potentialModifications == null) {\n        throw new IllegalArgumentException(\"Null potentialModifications.\");\n    }\n    reset();\n    if (potentialModifications.isEmpty()) {\n        return;\n    }\n    residues = new ArrayList<Group>();\n    List<Group> ligands = new ArrayList<Group>();\n    Map<Component, Set<Group>> mapCompGroups = new HashMap<Component, Set<Group>>();\n    for (Chain chain : chains) {\n        List<Group> ress = StructureUtil.getAminoAcids(chain);\n        //List<Group> ligs = chain.getAtomLigands();\n        List<Group> ligs = StructureTools.filterLigands(chain.getAtomGroups());\n        residues.addAll(ress);\n        residues.removeAll(ligs);\n        ligands.addAll(ligs);\n        addModificationGroups(potentialModifications, ress, ligs, mapCompGroups);\n    }\n    if (residues.isEmpty()) {\n        String pdbId = \"?\";\n        if (chains.size() > 0) {\n            Structure struc = chains.get(0).getStructure();\n            if (struc != null)\n                pdbId = struc.getPDBCode();\n        }\n        logger.warn(\"No amino acids found for {}. Either you did not parse the PDB file with alignSEQRES records, or this record does not contain any amino acids.\", pdbId);\n    }\n    List<ModifiedCompound> modComps = new ArrayList<ModifiedCompound>();\n    for (ProteinModification mod : potentialModifications) {\n        ModificationCondition condition = mod.getCondition();\n        List<Component> components = condition.getComponents();\n        if (!mapCompGroups.keySet().containsAll(components)) {\n            // not all components exist for this mod.\n            continue;\n        }\n        int sizeComps = components.size();\n        if (sizeComps == 1) {\n            processCrosslink1(mapCompGroups, modComps, mod, components);\n        } else {\n            processMultiCrosslink(mapCompGroups, modComps, mod, condition);\n        }\n    }\n    if (recordAdditionalAttachments) {\n        // identify additional groups that are not directly attached to amino acids.\n        for (ModifiedCompound mc : modComps) {\n            identifyAdditionalAttachments(mc, ligands, chains);\n        }\n    }\n    mergeModComps(modComps);\n    identifiedModifiedCompounds.addAll(modComps);\n    // record unidentifiable linkage\n    if (recordUnidentifiableModifiedCompounds) {\n        recordUnidentifiableAtomLinkages(modComps, ligands);\n        recordUnidentifiableModifiedResidues(modComps);\n    }\n}","repo_id":"9","comment":"/**\n * Identify a set of modifications in a a list of chains.\n * @param chains query {@link Chain}s.\n * @param potentialModifications query {@link ProteinModification}s.\n */\n","repo_name":"biojava-master/","id":298,"method_signature":"void identify(List, Set)"}