{"callee_method_names":["URLConnection.getContentLengthLong","Logger.warn","URLConnection.getURL","Logger.debug","File.getParentFile","File.getName","Logger.warn","int.getMessage","File.getParentFile","File.getName","Logger.warn","int.getMessage"],"method_name":"FileDownloadUtils.createValidationFiles","method_implementation":"{\n    long size = resourceUrlConnection.getContentLengthLong();\n    if (size == -1) {\n        logger.warn(\"could not find expected file size for resource {}.\", resourceUrlConnection.getURL());\n    } else {\n        logger.debug(\"Content-Length: {}\", size);\n        File sizeFile = new File(localDestination.getParentFile(), localDestination.getName() + SIZE_EXT);\n        try (PrintStream sizePrintStream = new PrintStream(sizeFile)) {\n            sizePrintStream.print(size);\n            sizePrintStream.close();\n        } catch (FileNotFoundException e) {\n            logger.warn(\"could not write size validation file due to exception: {}\", e.getMessage());\n        }\n    }\n    if (hashURL == null)\n        return;\n    if (hash == Hash.UNKNOWN)\n        throw new IllegalArgumentException(\"Hash URL given but algorithm is unknown\");\n    try {\n        File hashFile = new File(localDestination.getParentFile(), String.format(\"%s%s_%s\", localDestination.getName(), HASH_EXT, hash));\n        downloadFile(hashURL, hashFile);\n    } catch (IOException e) {\n        logger.warn(\"could not write validation hash file due to exception: {}\", e.getMessage());\n    }\n}","repo_id":"9","comment":"/**\n * Creates validation files beside a file to be downloaded.<br>\n * Whenever possible, for a <code>file.ext<\/code> file, it creates\n * <code>file.ext.size<\/code> and <code>file.hash_XXXX<\/code> in the same\n * folder where <code>file.ext<\/code> exists (XXXX may be DM5, SHA1, or SHA256).\n * If the file connection size could not be deduced from the resourceUrlConnection\n * {@link URLConnection}, no size file is created.\n * If <code>hashURL<\/code> is <code>null<\/code>, no hash file is created.<br>\n * <b>N.B.<\/b> None of the hashing algorithms is implemented (yet), because we did not need any of them yet.\n * @param resourceUrlConnection the remote file URLConnection to download\n * @param localDestination the local file to download into\n * @param hashURL the URL of the hash file to download. Can be <code>null<\/code>.\n * @param hash The Hashing algorithm. Ignored if <code>hashURL<\/code> is <code>null<\/code>.\n * @since 7.0.0\n */\n","repo_name":"biojava-master/","id":2571,"method_signature":"void createValidationFiles(URLConnection, File, URL, Hash)"}