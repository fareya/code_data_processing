{"callee_method_ids":[1322,641],"callee_method_names":["AtomCache.getFileParsingParams","FileParsingParameters.setParseBioAssembly","FileParsingParameters.setAlignSeqRes","AtomCache.setFiletype","Structure.nrModels","Structure.getModel","List<Chain>.get"],"method_name":"TestDifficultMmCIFFiles.test2KSA","method_implementation":"{\n    AtomCache cache = new AtomCache();\n    StructureIO.setAtomCache(cache);\n    FileParsingParameters params = cache.getFileParsingParams();\n    params.setParseBioAssembly(true);\n    params.setAlignSeqRes(true);\n    StructureIO.setAtomCache(cache);\n    cache.setFiletype(StructureFiletype.CIF);\n    Structure sCif = StructureIO.getStructure(\"2KSA\");\n    assertNotNull(sCif);\n    // Unit test for each of the chains to show they begin with the correct first residue.\n    for (int i = 0; i < sCif.nrModels(); i++) {\n        List<Chain> chains = sCif.getModel(i);\n        // Chain A first residue should start at ASP 2..\n        // but if replaceGroupSeqPos(PdbxPolySeqScheme ppss) is used, this is incorrect and will be 1.\n        assertEquals(2, chains.get(0).getAtomGroup(0).getResidueNumber().getSeqNum().intValue());\n    }\n}","repo_id":"9","comment":"/**\n * The 2KSA mmCIF contains a 5 model NMR structure.  The first residue of the sequence is not visible\n * and the models should all begin with Asp indexed as residue #2.\n * @throws IOException\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":2272,"method_signature":"void test2KSA()"}