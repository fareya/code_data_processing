{"callee_method_names":["Logger.debug","String.length","Logger.debug","String.length","Logger.warn","Element.getMessage","PairwiseSequenceAligner<ProteinSequence, AminoAcidCompound>.getPair","SequencePair<ProteinSequence, AminoAcidCompound>.getLength","Logger.warn","Logger.warn","Logger.warn","Logger.warn","Logger.debug","SequencePair<ProteinSequence, AminoAcidCompound>.toString"],"method_name":"SeqRes2AtomAligner.alignProteinChains","method_implementation":"{\n    Map<Integer, Integer> seqresIndexPosition = new HashMap<Integer, Integer>();\n    Map<Integer, Integer> atomIndexPosition = new HashMap<Integer, Integer>();\n    String seq1 = getFullAtomSequence(seqRes, seqresIndexPosition, false);\n    //\n    String seq2 = getFullAtomSequence(atomRes, atomIndexPosition, false);\n    logger.debug(\"Protein seq1 to align (length \" + seq1.length() + \"): \" + seq1);\n    logger.debug(\"Protein seq2 to align (length \" + seq2.length() + \"): \" + seq2);\n    ProteinSequence s1;\n    ProteinSequence s2;\n    try {\n        s1 = new ProteinSequence(seq1);\n        s2 = new ProteinSequence(seq2);\n    } catch (CompoundNotFoundException e) {\n        logger.warn(\"Could not create protein sequences ({}) to align ATOM and SEQRES groups, they will remain unaligned.\", e.getMessage());\n        return true;\n    }\n    SubstitutionMatrix<AminoAcidCompound> matrix = SubstitutionMatrixHelper.getBlosum65();\n    GapPenalty penalty = new SimpleGapPenalty(8, 1);\n    PairwiseSequenceAligner<ProteinSequence, AminoAcidCompound> smithWaterman = Alignments.getPairwiseAligner(s1, s2, PairwiseSequenceAlignerType.LOCAL, penalty, matrix);\n    SequencePair<ProteinSequence, AminoAcidCompound> pair = smithWaterman.getPair();\n    // sequences that are only X (e.g. 1jnv chain A) produced empty alignments, because nothing aligns to nothing and thus the local alignment is empty\n    // to avoid those empty alignments we catch them here with pair.getLength()==0\n    if (pair == null || pair.getLength() == 0) {\n        logger.warn(\"Could not align protein sequences. ATOM and SEQRES groups will not be aligned.\");\n        logger.warn(\"Sequences: \");\n        logger.warn(seq1);\n        logger.warn(seq2);\n        return true;\n    }\n    logger.debug(\"Alignment:\\n{}\", pair.toString(100));\n    boolean noMatchFound = mapChains(seqRes, atomRes, pair, seqresIndexPosition, atomIndexPosition);\n    return noMatchFound;\n}","repo_id":"9","comment":"/**\n * Aligns two chains of groups, where the first parent is representing the\n * list of amino acids as obtained from the SEQRES records, and the second parent\n * represents the groups obtained from the ATOM records (and containing the actual ATOM information).\n * This does the actual alignment and if a group can be mapped to a position in the SEQRES then the corresponding\n * position is replaced with the group that contains the atoms.\n *\n * @param seqRes\n * @param atomRes\n * @return true if no match has been found\n */\n","repo_name":"biojava-master/","id":1235,"method_signature":"boolean alignProteinChains(List, List)"}