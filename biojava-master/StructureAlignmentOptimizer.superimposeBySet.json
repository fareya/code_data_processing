{"callee_method_names":["Atom[].clone"],"method_name":"StructureAlignmentOptimizer.superimposeBySet","method_implementation":"{\n    //extract the coordinations of equivalent residues\n    Atom[] tmp1 = new Atom[equLen];\n    Atom[] tmp2 = new Atom[equLen];\n    int i, r1, r2;\n    for (i = 0; i < equLen; i++) {\n        r1 = equSet[0][i];\n        r2 = equSet[1][i];\n        tmp1[i] = cod1[r1];\n        // have to be cloned!\n        tmp2[i] = (Atom) cod2[r2].clone();\n        //tmp2[i] = cod2[ r2 ];\n        /*try {\n\t\t\t\tSystem.out.println(\"before superimpos: \" + equSet[0][i]+\"-\"+ equSet[1][i]+ \" dist:\" + Calc.getDistance(tmp1[i], cod2[equSet[1][i]]));\n\t\t\t} catch (Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}*/\n    }\n    //superimpose the equivalent residues\n    Matrix4d trans = SuperPositions.superpose(Calc.atomsToPoints(tmp1), Calc.atomsToPoints(tmp2));\n    Calc.transform(tmp2, trans);\n    // weird, why does it take the RMSD before the rotation?\n    // the rmsd is only for the subset contained in the tmp arrays.\n    rmsd = Calc.rmsd(tmp1, tmp2);\n    //System.err.println(\"rmsd after superimpose by set: \" + rmsd);\n    //transform structure 2 according to the superimposition of the equivalent residues\n    Calc.transform(cod2, trans);\n    //      for(i = 0; i < equLen; i ++)    {\n    //         try {\n    //            System.err.println(\"after superimpos: \" + equSet[0][i]+\"-\"+ equSet[1][i]+ \" dist:\" + Calc.getDistance(tmp1[i], cod2[equSet[1][i]]));\n    //         } catch (Exception e){\n    //            e.printStackTrace();\n    //         }\n    //      }\n}","repo_id":"9","comment":"/**\n * superimpose two structures according to the equivalent residues\n */\n","repo_name":"biojava-master/","id":440,"method_signature":"void superimposeBySet()"}