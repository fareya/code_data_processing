{"callee_method_ids":[2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2422,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2402,2424,2404,2466,2469,2424],"callee_method_names":["Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Location.opposite","Logger.info","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.window","Logger.info","Location.toString","Logger.info","Location.iterator","LocIterator.hasNext","LocIterator.next","Logger.info","Location.toString","Logger.info"],"method_name":"LocIterator.main","method_implementation":"{\n    Location r = new Location(10, 21);\n    logger.info(\"10 to 21, 1 by 1\");\n    for (Location t : r.window(1, 1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 3 by 3\");\n    for (Location t : r.window(3, 3)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 3 by 1\");\n    for (Location t : r.window(3, 1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 11 by 1\");\n    for (Location t : r.window(11, 1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 12 by 1\");\n    for (Location t : r.window(12, 1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 1 by -1\");\n    for (Location t : r.window(1, -1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 3 by -3\");\n    for (Location t : r.window(3, -3)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 3 by -1\");\n    for (Location t : r.window(3, -1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 1 by 1\");\n    for (Location t : r.window(1, 1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 3 by 3\");\n    for (Location t : r.window(3, 3)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 3 by 1\");\n    for (Location t : r.window(3, 1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 11 by 1\");\n    for (Location t : r.window(11, 1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 12 by 1\");\n    for (Location t : r.window(12, 1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 1 by -1\");\n    for (Location t : r.window(1, -1)) {\n        logger.info(t.toString());\n    }\n    //reverse strand\n    r = r.opposite();\n    logger.info(\"reverse strand\");\n    logger.info(\"10 to 21, 1 by 1\");\n    for (Location t : r.window(1, 1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 3 by 3\");\n    for (Location t : r.window(3, 3)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 3 by 1\");\n    for (Location t : r.window(3, 1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 11 by 1\");\n    for (Location t : r.window(11, 1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 12 by 1\");\n    for (Location t : r.window(12, 1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 1 by -1\");\n    for (Location t : r.window(1, -1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 3 by -3\");\n    for (Location t : r.window(3, -3)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 3 by -1\");\n    for (Location t : r.window(3, -1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 1 by 1\");\n    for (Location t : r.window(1, 1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 3 by 3\");\n    for (Location t : r.window(3, 3)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 3 by 1\");\n    for (Location t : r.window(3, 1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 11 by 1\");\n    for (Location t : r.window(11, 1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 12 by 1\");\n    for (Location t : r.window(12, 1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 1 by -1\");\n    for (Location t : r.window(1, -1)) {\n        logger.info(t.toString());\n    }\n    logger.info(\"10 to 21, 1 by 1 (+2)\");\n    LocIterator i = r.iterator();\n    int chunk = 1;\n    while (i.hasNext(1, chunk)) {\n        Location t = i.next(1, chunk);\n        logger.info(t.toString());\n        chunk += 2;\n    }\n    //FIXME test remainder()\n    logger.info(\"JavaGene.LocIterator Passed.\");\n}","repo_id":"9","comment":"/**\n * @deprecated\n */\n","repo_name":"biojava-master/","id":2472,"method_signature":"void main(String[])"}