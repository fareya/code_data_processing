{"callee_method_names":["Bond.getAtomA","Bond.getAtomB","SSBondImpl.setChainID1","Bond.getAtomA","SSBondImpl.setChainID2","Bond.getAtomB","SSBondImpl.setResnum1","Bond.getAtomA","SSBondImpl.setResnum2","Bond.getAtomB","Bond.getAtomA","Bond.getAtomB","SSBondImpl.setInsCode1","SSBondImpl.setInsCode2"],"method_name":"SSBondImpl.toSsBond","method_implementation":"{\n    if (!\"CYS\".equals(bond.getAtomA().getGroup().getPDBName()) || !\"CYS\".equals(bond.getAtomB().getGroup().getPDBName())) {\n        throw new IllegalArgumentException(\"Trying to create a SSBond from a Bond between 2 groups that are not CYS\");\n    }\n    SSBondImpl ssbond = new SSBondImpl();\n    ssbond.setChainID1(bond.getAtomA().getGroup().getChainId());\n    ssbond.setChainID2(bond.getAtomB().getGroup().getChainId());\n    ssbond.setResnum1(String.valueOf(bond.getAtomA().getGroup().getResidueNumber().getSeqNum()));\n    ssbond.setResnum2(String.valueOf(bond.getAtomB().getGroup().getResidueNumber().getSeqNum()));\n    Character iCode1 = bond.getAtomA().getGroup().getResidueNumber().getInsCode();\n    if (iCode1 == null)\n        iCode1 = ' ';\n    Character iCode2 = bond.getAtomB().getGroup().getResidueNumber().getInsCode();\n    if (iCode2 == null)\n        iCode2 = ' ';\n    ssbond.setInsCode1(String.valueOf(iCode1));\n    ssbond.setInsCode2(String.valueOf(iCode2));\n    return ssbond;\n}","repo_id":"9","comment":"/**\n * Converts the given {@link Bond} object into a {@link SSBondImpl}.\n *\n * @return\n * @throws IllegalArgumentException if this Bond is not between two CYS residues\n */\n","repo_name":"biojava-master/","id":1148,"method_signature":"SSBondImpl toSsBond(Bond)"}