{"callee_method_names":["String.getBytes","MmCifFile.getFirstBlock","IntColumn.isDefined","IntColumn.getRowCount","IntColumn.valueKinds","IntColumn.stringData"],"method_name":"CifFileConsumerImplTest.specialCases","method_implementation":"{\n    // taken from 1s32\n    String mmcifStr = \"data_\\n\" + \"loop_\\n\" + \"_struct_ref_seq_dif.align_id\\n\" + \"_struct_ref_seq_dif.pdbx_pdb_id_code\\n\" + \"_struct_ref_seq_dif.mon_id\\n\" + \"_struct_ref_seq_dif.pdbx_pdb_strand_id\\n\" + // integer field that contains '.'\n    \"_struct_ref_seq_dif.seq_num\\n\" + \"_struct_ref_seq_dif.pdbx_seq_db_name\\n\" + \"_struct_ref_seq_dif.pdbx_seq_db_accession_code\\n\" + \"_struct_ref_seq_dif.db_mon_id\\n\" + \"_struct_ref_seq_dif.pdbx_seq_db_seq_num\\n\" + \"_struct_ref_seq_dif.details\\n\" + \"_struct_ref_seq_dif.pdbx_auth_seq_num\\n\" + \"_struct_ref_seq_dif.pdbx_pdb_ins_code\\n\" + \"_struct_ref_seq_dif.pdbx_ordinal\\n\" + \"1 1S32 . A . GB  30268544 MET 1 'INTIATING METHIONINE' ? ? 1\\n\" + \"2 1S32 . E . GB  30268544 MET 1 'INTIATING METHIONINE' ? ? 2\\n\" + \"3 1S32 . B . UNP P02304   MET 0 'INTIATING METHIONINE' ? ? 3\\n\" + \"4 1S32 . F . UNP P02304   MET 0 'INTIATING METHIONINE' ? ? 4\\n\" + \"5 1S32 . C . GB  30268540 MET 1 'INTIATING METHIONINE' ? ? 5\\n\" + \"6 1S32 . G . GB  30268540 MET 1 'INTIATING METHIONINE' ? ? 6\\n\" + \"7 1S32 . D . GB  30268542 MET 1 'INTIATING METHIONINE' ? ? 7\\n\" + \"8 1S32 . H . GB  30268542 MET 1 'INTIATING METHIONINE' ? ? 8\\n\" + \"#\";\n    MmCifFile cifFile = CifIO.readFromInputStream(new ByteArrayInputStream(mmcifStr.getBytes())).as(StandardSchemata.MMCIF);\n    IntColumn column = cifFile.getFirstBlock().getStructRefSeqDif().getSeqNum();\n    assertNotNull(column);\n    assertTrue(column.isDefined());\n    assertEquals(8, column.getRowCount());\n    column.valueKinds().forEach(vk -> assertEquals(ValueKind.NOT_PRESENT, vk));\n    column.stringData().forEach(sd -> assertTrue(sd.isEmpty()));\n}","repo_id":"9","comment":"/**\n * This tests for cases where dots appear in integer fields. Unusual but it happens in some PDB entries like 1s32.\n * See issue <a href=\"https://github.com/biojava/biojava/issues/368\">...<\/a>\n */\n","repo_name":"biojava-master/","id":2237,"method_signature":"void specialCases()"}