{"callee_method_names":["Logger.error","int.getMessage","IPeptideProperties.getIsoelectricPoint"],"method_name":"PeptideProperties.getIsoelectricPoint","method_implementation":"{\n    sequence = Utils.checkSequence(sequence);\n    ProteinSequence pSequence = null;\n    try {\n        pSequence = new ProteinSequence(sequence);\n    } catch (CompoundNotFoundException e) {\n        // the sequence was checked with Utils.checkSequence, this shouldn't happen\n        logger.error(\"The protein sequence contains invalid characters ({}), this should not happen. This is most likely a bug in Utils.checkSequence()\", e.getMessage());\n    }\n    IPeptideProperties pp = new PeptidePropertiesImpl();\n    return pp.getIsoelectricPoint(pSequence, useExpasyValues);\n}","repo_id":"9","comment":"/**\n * An adaptor method to return the isoelectric point of sequence. The sequence argument must be\n * a protein sequence consisting of only non-ambiguous characters.\n * The isoelectric point is the pH at which the protein carries no net\n * electrical charge. The isoelectric point will be computed based on\n * approach stated in\n * <a href=\"http://www.innovagen.se/custom-peptide-synthesis/peptide-property-calculator/peptide-property-calculator-notes.asp#PI\">here<\/a>\n *\n * pKa values used will be either\n * those used by Expasy which referenced \"Electrophoresis 1994, 15, 529-539\"\n * OR\n * A.Lehninger, Principles of Biochemistry, 4th Edition (2005), Chapter 3, page78, Table 3-1.\n *\n * @param sequence\n * \t\ta protein sequence consisting of non-ambiguous characters only\n * @param useExpasyValues\n * \t\twhether to use Expasy values (Default) or Innovagen values\n * @return the isoelectric point of sequence\n */\n","repo_name":"biojava-master/","id":3867,"method_signature":"double getIsoelectricPoint(String, boolean)"}