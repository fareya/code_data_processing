{"callee_method_names":["ProteinModification.getId","Map<String, ProteinModification>.containsKey","Set<ProteinModification>.add","Map<String, ProteinModification>.put","ProteinModification.getCategory","Map<ModificationCategory, Set<ProteinModification>>.get","ProteinModification.getOccurrenceType","Map<ModificationOccurrenceType, Set<ProteinModification>>.get","ProteinModification.getCondition","ModificationCondition.getComponents","Map<Component, Set<ProteinModification>>.get","Map<Component, Set<ProteinModification>>.put","Set<ProteinModification>.add","ProteinModification.getPdbccId","Map<String, Set<ProteinModification>>.get","Map<String, Set<ProteinModification>>.put","Set<ProteinModification>.add","ProteinModification.getResidId","Map<String, Set<ProteinModification>>.get","Map<String, Set<ProteinModification>>.put","Set<ProteinModification>.add","ProteinModification.getPsimodId","Map<String, Set<ProteinModification>>.get","Map<String, Set<ProteinModification>>.put","Set<ProteinModification>.add","ProteinModification.getKeywords","Map<String, Set<ProteinModification>>.get","Map<String, Set<ProteinModification>>.put","Set<ProteinModification>.add"],"method_name":"ProteinModificationRegistry.register","method_implementation":"{\n    if (modification == null)\n        throw new IllegalArgumentException(\"modification == null!\");\n    lazyInit();\n    String id = modification.getId();\n    if (byId.containsKey(id)) {\n        throw new IllegalArgumentException(id + \" has already been registered.\");\n    }\n    registry.add(modification);\n    byId.put(id, modification);\n    ModificationCategory cat = modification.getCategory();\n    byCategory.get(cat).add(modification);\n    ModificationOccurrenceType occType = modification.getOccurrenceType();\n    byOccurrenceType.get(occType).add(modification);\n    ModificationCondition condition = modification.getCondition();\n    List<Component> comps = condition.getComponents();\n    for (Component comp : comps) {\n        Set<ProteinModification> mods = byComponent.get(comp);\n        if (mods == null) {\n            mods = new HashSet<ProteinModification>();\n            byComponent.put(comp, mods);\n        }\n        mods.add(modification);\n    }\n    String pdbccId = modification.getPdbccId();\n    if (pdbccId != null) {\n        Set<ProteinModification> mods = byPdbccId.get(pdbccId);\n        if (mods == null) {\n            mods = new HashSet<ProteinModification>();\n            byPdbccId.put(pdbccId, mods);\n        }\n        mods.add(modification);\n    }\n    String residId = modification.getResidId();\n    if (residId != null) {\n        Set<ProteinModification> mods = byResidId.get(residId);\n        if (mods == null) {\n            mods = new HashSet<ProteinModification>();\n            byResidId.put(residId, mods);\n        }\n        mods.add(modification);\n    }\n    String psimodId = modification.getPsimodId();\n    if (psimodId != null) {\n        Set<ProteinModification> mods = byPsimodId.get(psimodId);\n        if (mods == null) {\n            mods = new HashSet<ProteinModification>();\n            byPsimodId.put(psimodId, mods);\n        }\n        mods.add(modification);\n    }\n    for (String keyword : modification.getKeywords()) {\n        Set<ProteinModification> mods = byKeyword.get(keyword);\n        if (mods == null) {\n            mods = new HashSet<ProteinModification>();\n            byKeyword.put(keyword, mods);\n        }\n        mods.add(modification);\n    }\n}","repo_id":"9","comment":"/**\n * Register a new ProteinModification.\n */\n","repo_name":"biojava-master/","id":247,"method_signature":"void register(ProteinModification)"}