{"callee_method_names":["ArrayList.size","ArrayList.size","ArrayList.get","ArrayList.get","ExonSequence.getBioEnd","ExonSequence.getBioBegin"],"method_name":"GeneSequence.addIntronsUsingExons","method_implementation":"{\n    if (intronAdded) {\n        //going to assume introns are correct\n        return;\n    }\n    if (exonSequenceList.size() == 0) {\n        return;\n    }\n    ExonComparator exonComparator = new ExonComparator();\n    //sort based on start position and sense;\n    Collections.sort(exonSequenceList, exonComparator);\n    int shift = -1;\n    if (getStrand() == Strand.NEGATIVE) {\n        shift = 1;\n    }\n    //ExonSequence firstExonSequence = exonSequenceList.get(0);\n    int intronIndex = 1;\n    //       if (firstExonSequence.getBioBegin().intValue() != getBioBegin().intValue()) {\n    //           this.addIntron(new AccessionID(this.getAccession().getID() + \"-\" + \"intron\" + intronIndex), getBioBegin(), firstExonSequence.getBioBegin() + shift);\n    //           intronIndex++;\n    //       }\n    for (int i = 0; i < exonSequenceList.size() - 1; i++) {\n        ExonSequence exon1 = exonSequenceList.get(i);\n        ExonSequence exon2 = exonSequenceList.get(i + 1);\n        AccessionID intronId = new AccessionID(this.getAccession().getID() + \"-\" + \"intron\" + intronIndex);\n        this.addIntron(intronId, exon1.getBioEnd() - shift, exon2.getBioBegin() + shift);\n        intronIndex++;\n    }\n    //       ExonSequence lastExonSequence = exonSequenceList.get(exonSequenceList.size() - 1);\n    //       if (lastExonSequence.getBioEnd().intValue() != getBioEnd().intValue()) {\n    //           this.addIntron(new AccessionID(this.getAccession().getID() + \"-\" + \"intron\" + intronIndex), lastExonSequence.getBioEnd() - shift, getBioEnd());\n    //           intronIndex++;\n    //       }\n    //    log.severe(\"Add in support for building introns based on added exons\");\n}","repo_id":"9","comment":"/**\n * Once everything has been added to the gene sequence where you might have added exon sequences only then you\n * can infer the intron sequences and add them. You may also have the case where you only added one or more\n * TranscriptSequences and from that you can infer the exon sequences and intron sequences.\n * Currently not implement\n */\n","repo_name":"biojava-master/","id":3061,"method_signature":"void addIntronsUsingExons()"}