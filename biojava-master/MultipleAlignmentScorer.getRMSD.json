{"callee_method_names":["List<Atom[]>.size","List<Atom[]>.get","List<Atom[]>.get","List<Atom[]>.size","List<Atom[]>.get"],"method_name":"MultipleAlignmentScorer.getRMSD","method_implementation":"{\n    double sumSqDist = 0;\n    int comparisons = 0;\n    for (int r1 = 0; r1 < transformed.size(); r1++) {\n        for (int c = 0; c < transformed.get(r1).length; c++) {\n            Atom refAtom = transformed.get(r1)[c];\n            if (refAtom == null)\n                continue;\n            double nonNullSqDist = 0;\n            int nonNullLength = 0;\n            for (int r2 = r1 + 1; r2 < transformed.size(); r2++) {\n                Atom atom = transformed.get(r2)[c];\n                if (atom != null) {\n                    nonNullSqDist += Calc.getDistanceFast(refAtom, atom);\n                    nonNullLength++;\n                }\n            }\n            if (nonNullLength > 0) {\n                comparisons++;\n                sumSqDist += nonNullSqDist / nonNullLength;\n            }\n        }\n    }\n    return Math.sqrt(sumSqDist / comparisons);\n}","repo_id":"9","comment":"/**\n * Calculates the RMSD of all-to-all structure comparisons (distances),\n * given a set of superimposed atoms.\n *\n * @param transformed\n * @return double RMSD\n * @see #getRMSD(MultipleAlignment)\n */\n","repo_name":"biojava-master/","id":679,"method_signature":"double getRMSD(List)"}