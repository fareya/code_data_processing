{"callee_method_names":["SubstitutionMatrix<NucleotideCompound>.getMatrix","SubstitutionMatrix<NucleotideCompound>.getValue","DNACompoundSet.getCompoundForString","DNACompoundSet.getCompoundForString","SubstitutionMatrix<NucleotideCompound>.getValue","DNACompoundSet.getCompoundForString","DNACompoundSet.getCompoundForString","SubstitutionMatrix<NucleotideCompound>.getValue","DNACompoundSet.getCompoundForString","DNACompoundSet.getCompoundForString","SubstitutionMatrix<NucleotideCompound>.getValue","DNACompoundSet.getCompoundForString","DNACompoundSet.getCompoundForString"],"method_name":"SimpleSubstitutionMatrixTest.testCaseEquivalence","method_implementation":"{\n    DNACompoundSet dnacs = DNACompoundSet.getDNACompoundSet();\n    SubstitutionMatrix<NucleotideCompound> dnaTest = new SimpleSubstitutionMatrix<NucleotideCompound>(dnacs, \"# Test\\nA C G T\\nA 5 0 0 0\\nC 0 5 0 0\\nG 0 0 5 0\\nT 0 0 0 1\\n\", \"DNA Test\");\n    @SuppressWarnings(\"unused\")\n    short[][] matrix = dnaTest.getMatrix();\n    assertEquals(dnaTest.getValue(dnacs.getCompoundForString(\"G\"), dnacs.getCompoundForString(\"g\")), 5);\n    assertEquals(dnaTest.getValue(dnacs.getCompoundForString(\"A\"), dnacs.getCompoundForString(\"g\")), 0);\n    assertEquals(dnaTest.getValue(dnacs.getCompoundForString(\"g\"), dnacs.getCompoundForString(\"G\")), 5);\n    assertEquals(dnaTest.getValue(dnacs.getCompoundForString(\"g\"), dnacs.getCompoundForString(\"A\")), 0);\n}","repo_id":"9","comment":"/*\n\t * Author: Daniel Cameron\n\t */\n","repo_name":"biojava-master/","id":133,"method_signature":"void testCaseEquivalence()"}