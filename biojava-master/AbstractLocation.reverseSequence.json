{"callee_method_names":[],"method_name":"AbstractLocation.reverseSequence","method_implementation":"{\n    if (getStrand() != Strand.NEGATIVE) {\n        return sequence;\n    }\n    Sequence<C> reversed = new ReversedSequenceView<C>(sequence);\n    // \"safe\" operation as we have tried to check this\n    if (canComplement(sequence)) {\n        Sequence<ComplementCompound> casted = (Sequence<ComplementCompound>) reversed;\n        ComplementSequenceView<ComplementCompound> complement = new ComplementSequenceView<ComplementCompound>(casted);\n        return (Sequence<C>) complement;\n    }\n    return reversed;\n}","repo_id":"9","comment":"/**\n * Reverses and (if possible) complements the Sequence so as to represent\n * the reverse strand (if one exists). Also does checking to see if the\n * location we are on is on the reverse strand or not.\n */\n","repo_name":"biojava-master/","id":3024,"method_signature":"Sequence<C> reverseSequence(Sequence)"}