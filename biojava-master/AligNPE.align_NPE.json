{"callee_method_names":["StrucAligParameters.getGapOpen","StrucAligParameters.getGapExtension","Matrix.getRowDimension","Matrix.getColumnDimension","Alignable.setGapExtCol","Alignable.setGapExtRow","Alignable.setGapOpenCol","Alignable.setGapOpenRow","Alignable.getAligMat","Matrix.get","AligMatEl.setValue"],"method_name":"AligNPE.align_NPE","method_implementation":"{\n    //System.out.println(\"align_NPE\");\n    float gapOpen = params.getGapOpen();\n    float gapExtension = params.getGapExtension();\n    int rows = sim.getRowDimension();\n    int cols = sim.getColumnDimension();\n    Alignable al = new StrCompAlignment(rows, cols);\n    al.setGapExtCol(gapExtension);\n    al.setGapExtRow(gapExtension);\n    al.setGapOpenCol(gapOpen);\n    al.setGapOpenRow(gapOpen);\n    //System.out.println(\"size of aligmat: \" + rows+1 + \" \" + cols+1);\n    //AligMatEl[][] aligmat = new AligMatEl[rows+1][cols+1];\n    AligMatEl[][] aligmat = al.getAligMat();\n    for (int i = 0; i < rows; i++) {\n        for (int j = 0; j < cols; j++) {\n            int e = 0;\n            //if ( ( i < rows) &&\n            //        ( j < cols)) {\n            //TODO: the ALIGFACTOR calc should be hidden in Gotoh!!\n            e = (int) Math.round(Gotoh.ALIGFACTOR * sim.get(i, j));\n            //}\n            //System.out.println(e);\n            AligMatEl am = new AligMatEl();\n            am.setValue(e);\n            //am.setTrack(new IndexPair((short)-99,(short)-99));\n            aligmat[i + 1][j + 1] = am;\n        }\n    }\n    //al.setAligMat(aligmat);\n    new Gotoh(al);\n    return al;\n}","repo_id":"9","comment":"/**\n * Align without penalizing end-gaps. Return alignment and score\n *\n * @param sim the similarity matrix\n * @param params the structure alignment parameters to be used\n * @return an Alignable\n */\n","repo_name":"biojava-master/","id":809,"method_signature":"Alignable align_NPE(Matrix, StrucAligParameters)"}