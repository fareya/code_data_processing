{"callee_method_names":[],"method_name":"AlignerHelper.setScorePoint","method_implementation":"{\n    int d = scores[x - 1][y][0] + gep;\n    int i = scores[x][y - 1][0] + gep;\n    int s = scores[x - 1][y - 1][0] + sub;\n    if (d >= s && d >= i) {\n        scores[x][y][0] = d;\n        return Last.DELETION;\n    } else if (s >= i) {\n        scores[x][y][0] = s;\n        return Last.SUBSTITUTION;\n    } else {\n        scores[x][y][0] = i;\n        return Last.INSERTION;\n    }\n}","repo_id":"9","comment":"/**\n * Calculates the optimal alignment score for the given sequence positions and a linear gap penalty\n * @param x position in query\n * @param y position in target\n * @param gep gap extension penalty\n * @param sub compound match score\n * @param scores dynamic programming score matrix to fill at the given position\n * @return traceback directions for substitution, deletion and insertion respectively\n */\n","repo_name":"biojava-master/","id":82,"method_signature":"Last setScorePoint(int, int, int, int, int[][][])"}