{"callee_method_ids":[1633,1635,1631,1929],"callee_method_names":["SubunitClustererParameters.setClustererMethod","SubunitClustererParameters.setInternalSymmetry","SubunitClustererParameters.setStructureCoverageThreshold","QuatSymmetryResults.getSymmetry","QuatSymmetryResults.getStoichiometry"],"method_name":"TestQuatSymmetryDetectorExamples.testInternalSymmetry","method_implementation":"{\n    Structure pdb = StructureIO.getStructure(\"BIO:4e3e:1\");\n    // Internal symmetry analysis, use structural clustering\n    SubunitClustererParameters cp = new SubunitClustererParameters();\n    cp.setClustererMethod(SubunitClustererMethod.SEQUENCE_STRUCTURE);\n    cp.setInternalSymmetry(true);\n    // Lower coverage for internal symm\n    cp.setStructureCoverageThreshold(0.75);\n    QuatSymmetryParameters symmParams = new QuatSymmetryParameters();\n    QuatSymmetryResults symmetry = QuatSymmetryDetector.calcGlobalSymmetry(pdb, symmParams, cp);\n    // D2 combined internal and quaternary symmetry\n    assertEquals(\"D3\", symmetry.getSymmetry());\n    assertEquals(\"A6\", symmetry.getStoichiometry().toString());\n}","repo_id":"9","comment":"/**\n * A structure with combined internal and quaternary symmetry: 4E3E\n *\n * @throws IOException\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":187,"method_signature":"void testInternalSymmetry()"}