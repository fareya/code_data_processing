{"callee_method_ids":[489,489,489,489],"callee_method_names":["AFPChain.getOptAln","AFPChain.getOptAln","AFPChain.getOptAln","AFPChain.getOptAln","Graph<Integer, DefaultEdge>.addVertex","Graph<Integer, DefaultEdge>.addVertex","Graph<Integer, DefaultEdge>.addEdge"],"method_name":"SymmetryTools.buildSymmetryGraph","method_implementation":"{\n    Graph<Integer, DefaultEdge> graph = new SimpleGraph<Integer, DefaultEdge>(DefaultEdge.class);\n    for (int i = 0; i < selfAlignment.getOptAln().length; i++) {\n        for (int j = 0; j < selfAlignment.getOptAln()[i][0].length; j++) {\n            Integer res1 = selfAlignment.getOptAln()[i][0][j];\n            Integer res2 = selfAlignment.getOptAln()[i][1][j];\n            graph.addVertex(res1);\n            graph.addVertex(res2);\n            graph.addEdge(res1, res2);\n        }\n    }\n    return graph;\n}","repo_id":"9","comment":"/**\n * Converts a self alignment into a directed jGraphT of aligned residues,\n * where each vertex is a residue and each edge means the equivalence\n * between the two residues in the self-alignment.\n *\n * @param selfAlignment\n *            AFPChain\n *\n * @return alignment Graph\n */\n","repo_name":"biojava-master/","id":2041,"method_signature":"Graph<Integer,DefaultEdge> buildSymmetryGraph(AFPChain)"}