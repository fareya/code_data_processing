{"callee_method_names":["Logger.debug","Integer.toString"],"method_name":"SecStrucCalc.calculateTurns","method_implementation":"{\n    for (int i = 0; i < groups.length; i++) {\n        for (int turn = 3; turn <= 5; turn++) {\n            if (i + turn >= groups.length)\n                continue;\n            //Check for H bond from NH(i+n) to CO(i)\n            if (isBonded(i, i + turn)) {\n                logger.debug(\"Turn at ({},{}) turn {}\", i, (i + turn), turn);\n                getSecStrucState(i).setTurn('>', turn);\n                getSecStrucState(i + turn).setTurn('<', turn);\n                //Bracketed residues get the helix number\n                for (int j = i + 1; j < i + turn; j++) {\n                    Integer t = turn;\n                    char helix = t.toString().charAt(0);\n                    getSecStrucState(j).setTurn(helix, turn);\n                }\n            }\n        }\n    }\n}","repo_id":"9","comment":"/**\n * Detect helical turn patterns.\n */\n","repo_name":"biojava-master/","id":1601,"method_signature":"void calculateTurns()"}