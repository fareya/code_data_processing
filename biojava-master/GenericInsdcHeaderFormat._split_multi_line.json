{"callee_method_names":["String.trim","String.length","ArrayList<String>.add","String.split","ArrayList<String>.isEmpty","ArrayList<String>.remove","ArrayList<String>.isEmpty","String.length","ArrayList<String>.get","ArrayList<String>.remove","String.trim","ArrayList<String>.add","ArrayList<String>.isEmpty"],"method_name":"GenericInsdcHeaderFormat._split_multi_line","method_implementation":"{\n    // TODO Auto-generated method stub\n    ArrayList<String> output = new ArrayList<String>();\n    text = text.trim();\n    if (text.length() <= max_len) {\n        output.add(text);\n        return output;\n    }\n    ArrayList<String> words = new ArrayList<String>();\n    Collections.addAll(words, text.split(\"\\\\s+\"));\n    while (!words.isEmpty()) {\n        text = words.remove(0);\n        while (!words.isEmpty() && (text.length() + 1 + words.get(0).length()) <= max_len) {\n            text += \" \" + words.remove(0);\n            text = text.trim();\n        }\n        output.add(text);\n    }\n    assert words.isEmpty();\n    return output;\n}","repo_id":"9","comment":"/**\n * Returns a list of strings.\n *\n *   Any single words which are too long get returned as a whole line\n *   (e.g. URLs) without an exception or warning.\n * @param text\n * @param max_len\n */\n","repo_name":"biojava-master/","id":2708,"method_signature":"ArrayList<String> _split_multi_line(String, int)"}