{"callee_method_names":["List<List<Chain>>.add","List<List<Chain>>.add","List<List<Chain>>.add","char[].isWaterOnly","List<Chain>.add","char[].isPureNonPolymer","List<Chain>.add","List<Chain>.add","List<List<Chain>>.size","List<List<Chain>>.get","List<List<Chain>>.get","List<List<Chain>>.add","List<Chain>.addAll","List<List<Chain>>.get","List<Chain>.addAll","List<List<Chain>>.get","ArrayList.isEmpty","HashMap.get","ChemComp.getMolId","ChemComp.addChain","Chain.setEntityInfo","List<Chain>.isEmpty","Logger.warn","ChemComp.getMolId","Logger.info","List<List<Chain>>.size","List<Chain>.addAll","List<List<Chain>>.get","List<Chain>.addAll","List<List<Chain>>.get","List<Chain>.addAll","List<List<Chain>>.get","Structure.addModel"],"method_name":"PDBFileParser.assignChainsAndEntities","method_implementation":"{\n    List<List<Chain>> polyModels = new ArrayList<>();\n    List<List<Chain>> nonPolyModels = new ArrayList<>();\n    List<List<Chain>> waterModels = new ArrayList<>();\n    for (List<Chain> model : allModels) {\n        List<Chain> polyChains = new ArrayList<>();\n        List<Chain> nonPolyChains = new ArrayList<>();\n        List<Chain> waterChains = new ArrayList<>();\n        polyModels.add(polyChains);\n        nonPolyModels.add(nonPolyChains);\n        waterModels.add(waterChains);\n        for (Chain c : model) {\n            // we only have entities for polymeric chains, all others are ignored for assigning entities\n            if (c.isWaterOnly()) {\n                waterChains.add(c);\n            } else if (c.isPureNonPolymer()) {\n                nonPolyChains.add(c);\n            } else {\n                polyChains.add(c);\n            }\n        }\n    }\n    List<List<Chain>> splitNonPolyModels = new ArrayList<>();\n    for (int i = 0; i < nonPolyModels.size(); i++) {\n        List<Chain> nonPolyModel = nonPolyModels.get(i);\n        List<Chain> waterModel = waterModels.get(i);\n        List<Chain> splitNonPolys = new ArrayList<>();\n        splitNonPolyModels.add(splitNonPolys);\n        for (Chain nonPoly : nonPolyModel) {\n            List<List<Chain>> splits = splitNonPolyChain(nonPoly);\n            splitNonPolys.addAll(splits.get(0));\n            waterModel.addAll(splits.get(1));\n        }\n    }\n    // now we have all chains as in mmcif, let's assign ids following the mmcif rules\n    assignAsymIds(polyModels, splitNonPolyModels, waterModels);\n    if (!entities.isEmpty()) {\n        // if the file contained COMPOUND records then we can assign entities to the poly chains\n        for (EntityInfo comp : entities) {\n            List<String> chainIds = compoundMolIds2chainIds.get(comp.getMolId());\n            if (chainIds == null)\n                continue;\n            for (String chainId : chainIds) {\n                List<List<Chain>> models = findChains(chainId, polyModels);\n                for (List<Chain> matchingChains : models) {\n                    for (Chain chain : matchingChains) {\n                        comp.addChain(chain);\n                        chain.setEntityInfo(comp);\n                    }\n                    if (matchingChains.isEmpty()) {\n                        // usually if this happens something is wrong with the PDB header\n                        // e.g. 2brd - there is no Chain A, although it is specified in the header\n                        // Some bona-fide cases exist, e.g. 2ja5, chain N is described in SEQRES\n                        // but the authors didn't observe in the density so it's completely missing\n                        // from the ATOM lines\n                        logger.warn(\"Could not find polymeric chain {} to link to entity {}. The chain will be missing in the entity.\", chainId, comp.getMolId());\n                    }\n                }\n            }\n        }\n    } else {\n        logger.info(\"Entity information (COMPOUND record) not found in file. Will assign entities heuristically\");\n        // if no entity information was present in file we then go and find the entities heuristically with EntityFinder\n        entities = EntityFinder.findPolyEntities(polyModels);\n    }\n    // now we assign entities to the nonpoly and water chains\n    EntityFinder.createPurelyNonPolyEntities(splitNonPolyModels, waterModels, entities);\n    // in some rare cases purely non-polymer or purely water chain are present in pdb files\n    // see https://github.com/biojava/biojava/pull/394\n    // these case should be covered by the above\n    // now that we have entities in chains we add the chains to the structure\n    for (int i = 0; i < allModels.size(); i++) {\n        List<Chain> model = new ArrayList<>();\n        model.addAll(polyModels.get(i));\n        model.addAll(splitNonPolyModels.get(i));\n        model.addAll(waterModels.get(i));\n        structure.addModel(model);\n    }\n}","repo_id":"9","comment":"/**\n * Here we assign chains following the mmCIF data model:\n * one chain per polymer, one chain per non-polymer group and\n * several water chains.\n * <p>\n * Subsequently we assign entities for them: either from those read from\n * COMPOUND records or from those found heuristically through {@link EntityFinder}\n */\n","repo_name":"biojava-master/","id":1199,"method_signature":"void assignChainsAndEntities()"}