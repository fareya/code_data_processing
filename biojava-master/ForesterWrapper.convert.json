{"callee_method_names":["MultipleSequenceAlignment<C,D>.getAlignedSequences","String.getAccession","FastaWriter<C, D>.process","OutputStream.toString"],"method_name":"ForesterWrapper.convert","method_implementation":"{\n    // Convert the biojava MSA to a FASTA String\n    OutputStream os = new ByteArrayOutputStream();\n    FastaWriter<C, D> fastaW = new FastaWriter<C, D>(os, msa.getAlignedSequences(), new FastaHeaderFormatInterface<C, D>() {\n\n        @Override\n        public String getHeader(C sequence) {\n            return sequence.getAccession().toString();\n        }\n    });\n    fastaW.process();\n    String fastaMSA = os.toString();\n    // Parse the FASTA file in forester\n    return FastaParser.parseMsa(fastaMSA);\n}","repo_id":"9","comment":"/**\n * Convert a BioJava {@link MultipleSequenceAlignment} to a forester\n * {@link Msa}. The easiest way to convert them is writting the msa as a\n * FASTA file and then parsing it with the forester {@link FastaParser}.\n *\n * @param msa\n *            BioJava MultipleSequenceAlignment\n * @return forester Msa object\n * @throws IOException\n *             if the conversion was not possible\n */\n","repo_name":"biojava-master/","id":103,"method_signature":"Msa convert(MultipleSequenceAlignment)"}