{"callee_method_ids":[1322,1330],"callee_method_names":["FileParsingParameters.setAlignSeqRes","FileParsingParameters.setCreateAtomBonds","AtomCache.setFileParsingParams","Structure.getChains","List<Integer>.getAtomGroups","List<Atom>.add","ChemComp.getBonds","Atom.getName","Atom.getName"],"method_name":"TestAltLocs.testAddBondsDoesntChangeGroups","method_implementation":"{\n    AtomCache cache = new AtomCache();\n    FileParsingParameters params = new FileParsingParameters();\n    params.setAlignSeqRes(true);\n    params.setCreateAtomBonds(true);\n    cache.setFileParsingParams(params);\n    StructureIO.setAtomCache(cache);\n    Structure structure = StructureIO.getStructure(\"4CUP\");\n    // Loop through and find\n    for (Chain chain : structure.getChains()) {\n        List<Group> groups = chain.getAtomGroups();\n        for (Group mainGroup : groups) {\n            // atoms with no residue number don't have atom information\n            if (mainGroup.getResidueNumber() == null) {\n                continue;\n            }\n            if (mainGroup.getAltLocs().isEmpty()) {\n                continue;\n            }\n            int oldSize = mainGroup.size();\n            // Now add support for altLocGroup\n            List<Atom> atomsList = new ArrayList<>(mainGroup.getAtoms());\n            for (Group altLocOne : mainGroup.getAltLocs()) {\n                for (Atom atomAltLocOne : altLocOne.getAtoms()) {\n                    atomsList.add(atomAltLocOne);\n                }\n            }\n            // Get the chem copm\n            ChemComp aminoChemComp = ChemCompGroupFactory.getChemComp(mainGroup.getPDBName());\n            // Now iterate through this list\n            for (Atom atomA : atomsList) {\n                for (ChemCompBond chemCompBond : aminoChemComp.getBonds()) {\n                    //\n                    if (chemCompBond.getAtomId1().equals(atomA.getName())) {\n                        // Get the other atom in the group\n                        for (Atom atomB : atomsList) {\n                            if (chemCompBond.getAtomId2().equals(atomB.getName())) {\n                                int bondOrder = chemCompBond.getNumericalBondOrder();\n                                new BondImpl(atomA, atomB, bondOrder);\n                            }\n                        }\n                    }\n                }\n            }\n            assertEquals(oldSize, mainGroup.size());\n        }\n    }\n}","repo_id":"9","comment":"/**\n * A test that adding bonds to atoms between groups - doesn't change the size of the groups\n * @throws StructureException\n * @throws IOException\n */\n","repo_name":"biojava-master/","id":2214,"method_signature":"void testAddBondsDoesntChangeGroups()"}