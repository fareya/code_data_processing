{"callee_method_names":["NeedlemanWunsch<DNASequence, NucleotideCompound>.addAnchor","NeedlemanWunsch<DNASequence, NucleotideCompound>.addAnchor","NeedlemanWunsch<DNASequence, NucleotideCompound>.addAnchor","NeedlemanWunsch<DNASequence, NucleotideCompound>.addAnchor","NeedlemanWunsch<DNASequence, NucleotideCompound>.getScore","NeedlemanWunsch<DNASequence, NucleotideCompound>.getScore"],"method_name":"NeedlemanWunschTest.anchors_should_not_change_score","method_implementation":"{\n    DNASequence query = new DNASequence(\"ACGT\", AmbiguityDNACompoundSet.getDNACompoundSet());\n    DNASequence target = new DNASequence(\"ACGT\", AmbiguityDNACompoundSet.getDNACompoundSet());\n    NeedlemanWunsch<DNASequence, NucleotideCompound> aligner = new NeedlemanWunsch<DNASequence, NucleotideCompound>(query, target, new SimpleGapPenalty((short) 5, (short) 10), SubstitutionMatrixHelper.getNuc4_4());\n    NeedlemanWunsch<DNASequence, NucleotideCompound> anchored = new NeedlemanWunsch<DNASequence, NucleotideCompound>(query, target, new SimpleGapPenalty((short) 5, (short) 10), SubstitutionMatrixHelper.getNuc4_4());\n    anchored.addAnchor(0, 0);\n    anchored.addAnchor(1, 1);\n    anchored.addAnchor(2, 2);\n    anchored.addAnchor(3, 3);\n    assertEquals(aligner.getScore(), anchored.getScore(), PRECISION);\n}","repo_id":"9","comment":"/**\n * @author Daniel Cameron\n */\n","repo_name":"biojava-master/","id":120,"method_signature":"void anchors_should_not_change_score()"}