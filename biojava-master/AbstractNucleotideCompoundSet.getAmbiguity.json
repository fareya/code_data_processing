{"callee_method_names":["C.getConstituents","Set<NucleotideCompound>.add","C.getConstituents"],"method_name":"AbstractNucleotideCompoundSet.getAmbiguity","method_implementation":"{\n    Set<NucleotideCompound> settedCompounds = new HashSet<NucleotideCompound>();\n    for (NucleotideCompound compound : compounds) {\n        for (NucleotideCompound subCompound : compound.getConstituents()) {\n            settedCompounds.add(getCompoundForString(subCompound.getBase().toUpperCase()));\n        }\n    }\n    for (NucleotideCompound compound : getAllCompounds()) {\n        if (compound.getConstituents().equals(settedCompounds)) {\n            return compound;\n        }\n    }\n    return null;\n}","repo_id":"9","comment":"/**\n * Calculates the best symbol for a collection of compounds. For example\n * if you gave this method a AC it will return a M which is the ambiguity\n * symbol for these compounds.\n *\n * @param compounds Compounds to calculate ambiguity for\n * @return The ambiguity symbol which represents this set of nucleotides best\n */\n","repo_name":"biojava-master/","id":2956,"method_signature":"NucleotideCompound getAmbiguity(NucleotideCompound[])"}