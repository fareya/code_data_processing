{"callee_method_names":["Structure.nrModels","Structure.getModel","List<Atom>.toArray"],"method_name":"StructureTools.getAtomArrayAllModels","method_implementation":"{\n    List<Atom> atoms = new ArrayList<>();\n    for (int i = 0; i < s.nrModels(); i++) {\n        List<Chain> chains = s.getModel(i);\n        extractAtoms(atomNames, chains, atoms);\n    }\n    return atoms.toArray(new Atom[0]);\n}","repo_id":"9","comment":"/**\n * Returns an array of the requested Atoms from the Structure object. In\n * contrast to {@link #getAtomArray(Structure, String[])} this method\n * iterates over all chains. Iterates over all chains and groups and checks\n * if the requested atoms are in this group, no matter if this is a\n * {@link AminoAcid} or {@link HetatomImpl} group. If the group does not\n * contain all requested atoms then no atoms are added for that group. For\n * structures with more than one model, only model 0 will be used.\n *\n * @param s\n *            the structure to get the atoms from\n *\n * @param atomNames\n *            contains the atom names to be used.\n * @return an Atom[] array\n */\n","repo_name":"biojava-master/","id":1018,"method_signature":"Atom[] getAtomArrayAllModels(Structure, String[])"}