{"callee_method_names":["MultipleAlignment.getBlocks","String.length","String.getAlignRes","List<Integer>.add","List<List<Integer>>.add","List<List<Integer>>.get","MultipleAlignment.getBlock","Block.getAlignRes","List<List<Integer>>.get","Block.getAlignRes","List<List<Integer>>.get","List<SortedSet<Integer>>.get"],"method_name":"MultipleMcOptimizer.checkGaps","method_implementation":"{\n    boolean shrinkedAny = false;\n    List<List<Integer>> shrinkColumns = new ArrayList<List<Integer>>();\n    // Loop for each Block\n    for (Block b : msa.getBlocks()) {\n        List<Integer> shrinkCol = new ArrayList<Integer>();\n        // Loop for each column in the Block\n        for (int res = 0; res < b.length(); res++) {\n            int gapCount = 0;\n            // count the gaps in the column\n            for (int su = 0; su < size; su++) {\n                if (b.getAlignRes().get(su).get(res) == null)\n                    gapCount++;\n            }\n            if ((size - gapCount) < Rmin) {\n                // Add the column to the shrink list\n                shrinkCol.add(res);\n            }\n        }\n        shrinkColumns.add(shrinkCol);\n    }\n    // Shrink columns that have more gaps than allowed\n    for (int b = 0; b < blockNr; b++) {\n        for (int col = shrinkColumns.get(b).size() - 1; col >= 0; col--) {\n            for (int str = 0; str < size; str++) {\n                Block bk = msa.getBlock(b);\n                Integer residue = bk.getAlignRes().get(str).get(shrinkColumns.get(b).get(col));\n                bk.getAlignRes().get(str).remove((int) shrinkColumns.get(b).get(col));\n                if (residue != null) {\n                    freePool.get(str).add(residue);\n                }\n            }\n            shrinkedAny = true;\n        }\n    }\n    return shrinkedAny;\n}","repo_id":"9","comment":"/**\n * Method that loops through all the alignment columns and checks that there\n * are no more gaps than the maximum allowed, Rmin.\n * <p>\n * There must be at least Rmin residues different than null in every\n * alignment column. In case there is a column with more gaps it will be\n * shrinked (moved to freePool).\n *\n * @return true if any columns has been shrinked and false otherwise\n */\n","repo_name":"biojava-master/","id":695,"method_signature":"boolean checkGaps()"}