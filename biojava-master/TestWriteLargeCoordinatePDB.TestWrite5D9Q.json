{"callee_method_ids":[641,1318],"callee_method_names":["AtomCache.setFiletype","FileParsingParameters.setHeaderOnly","AtomCache.setFileParsingParams","Structure.getChain","Chain.getAtoms","Block.toPDB"],"method_name":"TestWriteLargeCoordinatePDB.TestWrite5D9Q","method_implementation":"{\n    AtomCache cache = new AtomCache();\n    cache.setFiletype(StructureFiletype.PDB);\n    FileParsingParameters params = new FileParsingParameters();\n    params.setHeaderOnly(false);\n    cache.setFileParsingParams(params);\n    StructureIO.setAtomCache(cache);\n    // Example structure with large coordinates in PDB file.\n    Structure sPDB = StructureIO.getStructure(\"5D9Q\");\n    // If 48 column for a ATOM/HETATM has a comma, fail.\n    for (Group g : sPDB.getChain(\"K\").getAtomGroups()) {\n        for (Atom a : g.getAtoms()) {\n            if (a.toPDB().contains(\",\")) {\n                fail(\"Comma present in ATOM/HETATM record.\");\n            }\n        }\n    }\n    //try (PrintWriter p = new PrintWriter(new FileWriter(new File(\"/tmp/test.pdb\")))) {\n    //\tp.print(sPDB.toPDB());\n    //}\n}","repo_id":"9","comment":"// See FileConvert.d3 formatter.\n","repo_name":"biojava-master/","id":2271,"method_signature":"void TestWrite5D9Q()"}