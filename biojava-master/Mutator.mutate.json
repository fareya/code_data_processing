{"callee_method_names":["Structure.getChains","Class<?>.getName","Chain.setName","Class<?>.getName","Class<?>.getAtomGroups","Group.getResidueNumber","String.equals","Group.getType","Chain.addGroup","Chain.addGroup","Structure.addChain","Structure.addChain"],"method_name":"Mutator.mutate","method_implementation":"{\n    // create a  container for the new structure\n    Structure newstruc = new StructureImpl();\n    // first we need to find our corresponding chain\n    // get the chains for model nr. 0\n    // if structure is xray there will be only one \"model\".\n    List<Chain> chains = struc.getChains(0);\n    // iterate over all chains.\n    for (Chain c : chains) {\n        if (c.getName().equals(chainId)) {\n            // here is our chain!\n            Chain newchain = new ChainImpl();\n            newchain.setName(c.getName());\n            List<Group> groups = c.getAtomGroups();\n            // now iterate over all groups in this chain.\n            // in order to find the amino acid that has this pdbRenum.\n            for (Group g : groups) {\n                String rnum = g.getResidueNumber().toString();\n                // we only mutate amino acids\n                // and ignore hetatoms and nucleotides in this case\n                if (rnum.equals(pdbResnum) && (g.getType() == GroupType.AMINOACID)) {\n                    // create the mutated amino acid and add it to our new chain\n                    AminoAcid newgroup = mutateResidue((AminoAcid) g, newType);\n                    newchain.addGroup(newgroup);\n                } else {\n                    // add the group  to the new chain unmodified.\n                    newchain.addGroup(g);\n                }\n            }\n            // add the newly constructed chain to the structure;\n            newstruc.addChain(newchain);\n        } else {\n            // this chain is not requested, add it to the new structure unmodified.\n            newstruc.addChain(c);\n        }\n    }\n    return newstruc;\n}","repo_id":"9","comment":"/**\n * creates a new structure which is identical with the original one.\n * only one amino acid will be different.\n *\n * @param struc the structure object that is the container for the residue to be mutated\n * @param chainId the id (name) of the chain to be mutated. @see Chain.getName()\n * @param pdbResnum the PDB residue number of the residue\n * @param newType the new residue type (3 characters)\n * @return a structure object where one residue has been modified\n * @throws PDBParseException\n */\n","repo_name":"biojava-master/","id":1844,"method_signature":"Structure mutate(Structure, String, String, String)"}