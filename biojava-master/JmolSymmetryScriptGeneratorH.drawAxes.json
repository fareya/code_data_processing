{"callee_method_ids":[1966],"callee_method_names":["HelixAxisAligner.calcCenterOfRotation","HelixAxisAligner.getHelixLayers","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","Point3d.scale","HelixAxisAligner.getDimension","Point3d.negate","Point3d.add","Point3d.add","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.toString"],"method_name":"JmolSymmetryScriptGeneratorH.drawAxes","method_implementation":"{\n    StringBuilder s = new StringBuilder();\n    //\t\tPoint3d centroid = helixAxisAligner.getCentroid();\n    //\t\tSystem.out.println(\"Centroid: \" + helixAxisAligner.getCentroid());\n    //\t\tPoint3d centroid = helixAxisAligner.getGeometricCenter();\n    Point3d centroid = helixAxisAligner.calcCenterOfRotation();\n    //\t\tSystem.out.println(\"Geometric center: \" + centroid);\n    AxisAngle4d axisAngle = helixAxisAligner.getHelixLayers().getByLowestAngle().getAxisAngle();\n    Vector3d axis = new Vector3d(axisAngle.x, axisAngle.y, axisAngle.z);\n    s.append(\"draw axesHelical\");\n    s.append(name);\n    s.append(0);\n    s.append(\" \");\n    s.append(\"line\");\n    Point3d v1 = new Point3d(axis);\n    v1.scale(AXIS_SCALE_FACTOR * (helixAxisAligner.getDimension().y + SIDE_CHAIN_EXTENSION));\n    Point3d v2 = new Point3d(v1);\n    v2.negate();\n    v1.add(centroid);\n    v2.add(centroid);\n    s.append(getJmolPoint(v1));\n    s.append(getJmolPoint(v2));\n    s.append(\"width 1.0 \");\n    s.append(\" color red\");\n    s.append(\" off;\");\n    return s.toString();\n}","repo_id":"9","comment":"/**\n * Returns a Jmol script that draws symmetry or inertia axes for a structure.\n * Use showAxes() and hideAxes() to toggle visibility.\n * @return Jmol script\n */\n","repo_name":"biojava-master/","id":3414,"method_signature":"String drawAxes()"}