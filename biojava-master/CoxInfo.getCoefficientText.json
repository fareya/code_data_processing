{"callee_method_names":["LinkedHashMap.values","double.getRobustStdError","double.getStdError","double.getStdError","double.getName","double.getCoeff","double.getZ","double.getPvalue","double.getHazardRatio","double.getHazardRatioLoCI","double.getHazardRatioHiCI"],"method_name":"CoxInfo.getCoefficientText","method_implementation":"{\n    String o = \"\";\n    if (header) {\n        String robust = \"\";\n        if (naive_imat != null) {\n            robust = beginCell + \"robust se\" + endCell;\n        }\n        o = o + beginLine + beginCell + fmtpl(\"\", 9) + endCell + beginCell + fmtpl(\"coef\", 9) + endCell + beginCell + fmtpl(\"se(coef)\", 9) + endCell + robust + beginCell + fmtpl(\"z\", 9) + endCell + beginCell + fmtpl(\"p-value\", 9) + endCell + beginCell + fmtpl(\"HR\", 9) + endCell + beginCell + fmtpl(\"lower .95\", 9) + endCell + beginCell + fmtpl(\"upper .95\", 9) + endCell + endLine;\n    }\n    //Coefficients,Coe,StdErr,HR,p-value,HR Lo 95%,HR Hi 95%\n    for (CoxCoefficient coe : coefficientsList.values()) {\n        String robust = \"\";\n        String stderror = \"\";\n        if (naive_imat != null) {\n            stderror = beginCell + fmt(coe.getRobustStdError(), 5, 9) + endCell;\n            robust = beginCell + fmt(coe.getStdError(), 5, 9) + endCell;\n        } else {\n            stderror = beginCell + fmt(coe.getStdError(), 5, 9) + endCell;\n        }\n        o = o + beginLine + beginCell + fmtpr(coe.getName(), 9) + endCell + beginCell + fmt(coe.getCoeff(), 5, 9) + stderror + robust + endCell + beginCell + fmt(coe.getZ(), 5, 9) + endCell + beginCell + fmt(coe.getPvalue(), 6, 9) + endCell + beginCell + fmt(coe.getHazardRatio(), 3, 9) + endCell + beginCell + fmt(coe.getHazardRatioLoCI(), 3, 9) + endCell + beginCell + fmt(coe.getHazardRatioHiCI(), 3, 9) + endCell + endLine;\n    }\n    return o;\n}","repo_id":"9","comment":"/**\n * @param header\n * @param beginLine\n * @param beginCell\n * @param endCell\n * @param endLine\n * @return\n */\n","repo_name":"biojava-master/","id":3617,"method_signature":"String getCoefficientText(boolean, String, String, String, String)"}