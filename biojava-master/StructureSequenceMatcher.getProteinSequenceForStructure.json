{"callee_method_names":["Map<Integer,Group>.clear","Structure.getChains","Chain.getAtomGroups","StringBuilder.length","StringBuilder.append","Map<Integer, Integer>.keySet","Map<Integer, Integer>.get","Map<Integer,Group>.put","List<Group>.get","StringBuilder.toString","Logger.error","Element.getMessage"],"method_name":"StructureSequenceMatcher.getProteinSequenceForStructure","method_implementation":"{\n    if (groupIndexPosition != null) {\n        groupIndexPosition.clear();\n    }\n    StringBuilder seqStr = new StringBuilder();\n    for (Chain chain : struct.getChains()) {\n        List<Group> groups = chain.getAtomGroups();\n        Map<Integer, Integer> chainIndexPosition = new HashMap<Integer, Integer>();\n        int prevLen = seqStr.length();\n        // get the sequence for this chain\n        String chainSeq = SeqRes2AtomAligner.getFullAtomSequence(groups, chainIndexPosition, false);\n        seqStr.append(chainSeq);\n        // fix up the position to include previous chains, and map the value back to a Group\n        for (Integer seqIndex : chainIndexPosition.keySet()) {\n            Integer groupIndex = chainIndexPosition.get(seqIndex);\n            groupIndexPosition.put(prevLen + seqIndex, groups.get(groupIndex));\n        }\n    }\n    ProteinSequence s = null;\n    try {\n        s = new ProteinSequence(seqStr.toString());\n    } catch (CompoundNotFoundException e) {\n        // I believe this can't happen, please correct this if I'm wrong - JD 2014-10-24\n        // we can log an error if it does, it would mean there's a bad bug somewhere\n        logger.error(\"Could not create protein sequence, unknown compounds in string: {}\", e.getMessage());\n    }\n    return s;\n}","repo_id":"9","comment":"/**\n * Generates a ProteinSequence corresponding to the sequence of struct,\n * and maintains a mapping from the sequence back to the original groups.\n *\n * Chains are appended to one another. 'X' is used for heteroatoms.\n *\n * @param struct Input structure\n * @param groupIndexPosition An empty map, which will be populated with\n *  (residue index in returned ProteinSequence) -> (Group within struct)\n * @return A ProteinSequence with the full sequence of struct. Chains are\n *  concatenated in the same order as the input structures\n *\n * @see {@link SeqRes2AtomAligner#getFullAtomSequence(List, Map)}, which\n * \tdoes the heavy lifting.\n */\n","repo_name":"biojava-master/","id":1294,"method_signature":"ProteinSequence getProteinSequenceForStructure(Structure, Map)"}