{"callee_method_names":["Logger.debug","Logger.debug","ResidueRangeAndLength.lowerEndpoint","ResidueRangeAndLength.upperEndpoint"],"method_name":"ChromosomeMappingTools.getCDSPosForward","method_implementation":"{\n    // the genetic coordinate is not in a coding region\n    if ((chromPos < (cdsStart + base)) || (chromPos > (cdsEnd + base))) {\n        logger.debug(\"The {} position is not in a coding region\", format(chromPos));\n        return -1;\n    }\n    logger.debug(\"looking for CDS position for {}\", format(chromPos));\n    // map the genetic coordinates of coding region on a stretch of a reverse strand\n    List<Range<Integer>> cdsRegions = getCDSRegions(exonStarts, exonEnds, cdsStart, cdsEnd);\n    int codingLength = 0;\n    int lengthExon = 0;\n    for (Range<Integer> range : cdsRegions) {\n        int start = range.lowerEndpoint();\n        int end = range.upperEndpoint();\n        lengthExon = end - start;\n        if (start + base <= chromPos && end >= chromPos) {\n            return codingLength + (chromPos - start);\n        } else {\n            codingLength += lengthExon;\n        }\n    }\n    return -1;\n}","repo_id":"9","comment":"/**\n * Converts the genetic coordinate to the position of the nucleotide on the mRNA sequence for a gene\n * living on the forward DNA strand.\n *\n * @param chromPos The genetic coordinate on a chromosome\n * @param exonStarts The list holding the genetic coordinates pointing to the start positions of the exons (including UTR regions)\n * @param exonEnds The list holding the genetic coordinates pointing to the end positions of the exons (including UTR regions)\n * @param cdsStart The start position of a coding region\n * @param cdsEnd The end position of a coding region\n *\n * @return the position of the nucleotide base on the mRNA sequence corresponding to the input genetic coordinate (base 1)\n *\n * @author Yana Valasatava\n */\n","repo_name":"biojava-master/","id":2488,"method_signature":"int getCDSPosForward(int, List, List, int, int)"}