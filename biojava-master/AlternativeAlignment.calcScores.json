{"callee_method_names":["Atom.getGroup","Atom.getGroup","Group.getPDBName","Group.getPDBName"],"method_name":"AlternativeAlignment.calcScores","method_implementation":"{\n    eqr0 = idx1.length;\n    gaps0 = count_gaps(idx1, idx2);\n    percId = 0;\n    // calc the % id\n    for (int i = 0; i < idx1.length; i++) {\n        Atom a1 = ca1[idx1[i]];\n        Atom a2 = ca2[idx2[i]];\n        Group g1 = a1.getGroup();\n        Group g2 = a2.getGroup();\n        if (g1.getPDBName().equals(g2.getPDBName())) {\n            percId++;\n        }\n    }\n}","repo_id":"9","comment":"/**\n * calculates  scores for this alignment ( %id )\n * @param ca1 set of Atoms for molecule 1\n * @param ca2 set of Atoms for molecule 2\n */\n","repo_name":"biojava-master/","id":826,"method_signature":"void calcScores(Atom[], Atom[])"}