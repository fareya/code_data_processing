{"callee_method_names":["Map<Set<String>, Component>.get","Map<Set<String>, Component>.put","Map<Set<String>, Component>.get","Map<Set<String>, Component>.put","Map<Set<String>, Component>.get","Map<Set<String>, Component>.put","Set<Component>.add"],"method_name":"Component.of","method_implementation":"{\n    if (isNTerminal && isCTerminal) {\n        throw new IllegalArgumentException(\"An amino acid can be at\" + //TODO: is this true?\n        \"N-terminal or C-terminal but not both.\");\n    }\n    lazyInit();\n    Component comp;\n    if (isNTerminal) {\n        comp = nTerminalAminoAcids.get(pdbccIds);\n        if (comp == null) {\n            comp = new Component(pdbccIds, isNTerminal, isCTerminal);\n            nTerminalAminoAcids.put(pdbccIds, comp);\n        }\n    } else if (isCTerminal) {\n        comp = cTerminalAminoAcids.get(pdbccIds);\n        if (comp == null) {\n            comp = new Component(pdbccIds, isNTerminal, isCTerminal);\n            cTerminalAminoAcids.put(pdbccIds, comp);\n        }\n    } else {\n        comp = nonTerminalComps.get(pdbccIds);\n        if (comp == null) {\n            comp = new Component(pdbccIds, isNTerminal, isCTerminal);\n            nonTerminalComps.put(pdbccIds, comp);\n        }\n    }\n    components.add(comp);\n    return comp;\n}","repo_id":"9","comment":"/**\n * Get or create a Component.\n * @param pdbccIds a set of possible Protein Data Bank ID.\n * @param isNTerminal true if occurring at N-terminal. false, otherwise.\n * @param isCTerminal true if occurring at C-terminal. false, otherwise.\n * @return a component.\n * @throws IllegalArgumentException if pdbccId or type is null,\n *  or the pdbccId has been registered as a different type,\n *  or terminal condition is indicated for non-amino-acid component,\n *  or both N-terminal and C-terminal are true.\n */\n","repo_name":"biojava-master/","id":317,"method_signature":"Component of(Set, boolean, boolean)"}