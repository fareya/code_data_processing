{"callee_method_ids":[1960,1971],"callee_method_names":["HelixAxisAligner.getTransformation","HelixAxisAligner.getSubunits","List<List<Integer>>.size","List<List<Integer>>.get","List<Integer>.get","List<Point3d>.get","Matrix4d.transform","List<Integer>.get","List<Integer>.size","List<Point3d>.get","Matrix4d.transform"],"method_name":"JmolSymmetryScriptGeneratorH.orientLayerLines","method_implementation":"{\n    Matrix4d transformation = helixAxisAligner.getTransformation();\n    List<Point3d> centers = helixAxisAligner.getSubunits().getOriginalCenters();\n    for (int i = 0; i < layerLines.size(); i++) {\n        List<Integer> layerLine = layerLines.get(i);\n        // get center of first subunit in layerline and transform to standard orientation (helix axis aligned with y-axis)\n        int first = layerLine.get(0);\n        Point3d firstSubunit = new Point3d(centers.get(first));\n        transformation.transform(firstSubunit);\n        // get center of last subunit in layerline and transform to standard orientation (helix axis aligned with y-axis)\n        int last = layerLine.get(layerLine.size() - 1);\n        Point3d lastSubunit = new Point3d(centers.get(last));\n        transformation.transform(lastSubunit);\n        // a layerline should start at the lowest y-value, so all layerlines have a consistent direction from -y value to +y value\n        if (firstSubunit.y > lastSubunit.y) {\n            //\t\t\t\tSystem.out.println(\"reorienting layer line: \" + layerLine);\n            Collections.reverse(layerLine);\n        }\n    }\n    return layerLines;\n}","repo_id":"9","comment":"/**\n * Orients layer lines from lowest y-axis value to largest y-axis value\n */\n","repo_name":"biojava-master/","id":3421,"method_signature":"List<List<Integer>> orientLayerLines(List)"}