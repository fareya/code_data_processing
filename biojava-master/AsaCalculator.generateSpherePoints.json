{"callee_method_names":[],"method_name":"AsaCalculator.generateSpherePoints","method_implementation":"{\n    Vector3d[] points = new Vector3d[nSpherePoints];\n    double inc = Math.PI * (3.0 - Math.sqrt(5.0));\n    double offset = 2.0 / nSpherePoints;\n    for (int k = 0; k < nSpherePoints; k++) {\n        double y = k * offset - 1.0 + (offset / 2.0);\n        double r = Math.sqrt(1.0 - y * y);\n        double phi = k * inc;\n        points[k] = new Vector3d(Math.cos(phi) * r, y, Math.sin(phi) * r);\n    }\n    return points;\n}","repo_id":"9","comment":"/**\n * Returns list of 3d coordinates of points on a unit sphere using the\n * Golden Section Spiral algorithm.\n * @param nSpherePoints the number of points to be used in generating the spherical dot-density\n * @return the array of points as Vector3d objects\n */\n","repo_name":"biojava-master/","id":834,"method_signature":"Vector3d[] generateSpherePoints(int)"}