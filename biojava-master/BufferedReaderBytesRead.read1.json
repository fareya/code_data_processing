{"callee_method_names":["Reader.read"],"method_name":"BufferedReaderBytesRead.read1","method_implementation":"{\n    if (nextChar >= nChars) {\n        /* If the requested length is at least as large as the buffer, and\n\t\t\tif there is no mark/reset activity, and if line feeds are not\n\t\t\tbeing skipped, do not bother to copy the characters into the\n\t\t\tlocal buffer.  In this way buffered streams will cascade\n\t\t\tharmlessly. */\n        if (len >= cb.length && markedChar <= UNMARKED && !skipLF) {\n            return in.read(cbuf, off, len);\n        }\n        fill();\n    }\n    if (nextChar >= nChars) {\n        return -1;\n    }\n    if (skipLF) {\n        skipLF = false;\n        if (cb[nextChar] == '\\n') {\n            nextChar++;\n            if (nextChar >= nChars) {\n                fill();\n            }\n            if (nextChar >= nChars) {\n                return -1;\n            }\n        }\n    }\n    int n = Math.min(len, nChars - nextChar);\n    System.arraycopy(cb, nextChar, cbuf, off, n);\n    nextChar += n;\n    return n;\n}","repo_id":"9","comment":"/**\n * Reads characters into a portion of an array, reading from the underlying\n * stream if necessary.\n */\n","repo_name":"biojava-master/","id":2713,"method_signature":"int read1(char[], int, int)"}