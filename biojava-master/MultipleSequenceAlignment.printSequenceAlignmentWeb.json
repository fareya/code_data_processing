{"callee_method_names":["ArrayList.get","ArrayList.get","ArrayList.get","StringBuilder.append","S.getAccession","S.getSubSequence","S.getSubSequence","S.getSubSequence","String.length","String.length","String.length","String.charAt","String.charAt","String.charAt","StringBuilder.append","CompoundSet<C>.compoundsEquivalent","S.getCompoundAt","S.getCompoundAt","StringBuilder.append"],"method_name":"MultipleSequenceAlignment.printSequenceAlignmentWeb","method_implementation":"{\n    S as = sequences.get(counter - 1), seq1 = sequences.get(0), seq2 = sequences.get(1);\n    if (idFormat != null) {\n        s.append(String.format(idFormat, as.getAccession()));\n    }\n    String mySeq = as.getSubSequence(start, end).getSequenceAsString();\n    String s1 = seq1.getSubSequence(start, end).getSequenceAsString();\n    String s2 = seq2.getSubSequence(start, end).getSequenceAsString();\n    CompoundSet<C> cs = getCompoundSet();\n    for (int i = 0; i < s1.length(); i++) {\n        if (i >= s2.length() || i >= mySeq.length())\n            break;\n        char c1 = s1.charAt(i);\n        char c2 = s2.charAt(i);\n        char c = mySeq.charAt(i);\n        s.append(IOUtils.getPDBCharacter(true, c1, c2, cs.compoundsEquivalent(seq1.getCompoundAt(i), seq2.getCompoundAt(i)), c));\n    }\n    s.append(String.format(\"%n\"));\n}","repo_id":"9","comment":"/**\n * @param s\n * @param counter\n * @param idFormat\n * @param start\n * @param end\n */\n","repo_name":"biojava-master/","id":2680,"method_signature":"void printSequenceAlignmentWeb(StringBuilder, int, String, int, int)"}