{"callee_method_names":["Chain.setId","Chain.getId","Chain.setName","Chain.getName","Chain.setEntityInfo","Chain.getEntityInfo","Chain.getAtomGroups","Group.getAtoms","float.getName","float.getElement","AminoAcid.setPDBName","Group.getPDBName","AminoAcid.setResidueNumber","Group.getResidueNumber","AminoAcid.addAtom","Chain.addGroup"],"method_name":"CAConverter.getRepresentativeAtomsOnly","method_implementation":"{\n    Chain newChain = new ChainImpl();\n    newChain.setId(chain.getId());\n    newChain.setName(chain.getName());\n    newChain.setEntityInfo(chain.getEntityInfo());\n    List<Group> groups = chain.getAtomGroups();\n    grouploop: for (Group g : groups) {\n        List<Atom> atoms = g.getAtoms();\n        if (!(g instanceof AminoAcid))\n            continue;\n        for (Atom a : atoms) {\n            if (a.getName().equals(StructureTools.CA_ATOM_NAME) && a.getElement() == Element.C) {\n                // we got a CA atom in this group!\n                AminoAcid n = new AminoAcidImpl();\n                n.setPDBName(g.getPDBName());\n                n.setResidueNumber(g.getResidueNumber());\n                n.addAtom(a);\n                newChain.addGroup(n);\n                continue grouploop;\n            }\n        }\n    }\n    return newChain;\n}","repo_id":"9","comment":"/**\n * Convert a Chain to a new Chain containing C-alpha atoms only.\n *\n * @param chain to convert\n * @return a new chain containing Amino acids with C-alpha only.\n * @since Biojava 4.1.0\n */\n","repo_name":"biojava-master/","id":1224,"method_signature":"Chain getRepresentativeAtomsOnly(Chain)"}