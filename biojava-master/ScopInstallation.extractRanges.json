{"callee_method_names":["String.split","String.compareTo","String.length","String.charAt"],"method_name":"ScopInstallation.extractRanges","method_implementation":"{\n    List<String> ranges;\n    String[] rangeSpl = range.split(\",\");\n    // Recent versions of scop always specify a chain, so no processing is needed\n    if (scopVersion.compareTo(\"1.73\") < 0) {\n        for (int i = 0; i < rangeSpl.length; i++) {\n            String subRange = rangeSpl[i];\n            // Allow single-chains, as well as the '-' special case\n            if (subRange.length() < 2) {\n                continue;\n            }\n            // Allow explicit chain syntax\n            if (subRange.charAt(1) != ':') {\n                // Early versions sometimes skip the chain identifier for single-chain domains\n                // Indicate this with a chain \"_\"\n                rangeSpl[i] = \"_:\" + subRange;\n            }\n        }\n    }\n    ranges = Arrays.asList(rangeSpl);\n    return ranges;\n}","repo_id":"9","comment":"/**\n * Converts the SCOP range field into a list of subranges suitable for\n * storage in a ScopDomain object. Each range should be of a format\n * compatible with {@link StructureTools#getSubRanges(Structure,String)}.\n * @param range\n * @return\n */\n","repo_name":"biojava-master/","id":1551,"method_signature":"List<String> extractRanges(String)"}