{"callee_method_names":[],"method_name":"SimpleSequencePair.getPercentageOfIdentity","method_implementation":"{\n    double seqid = getNumIdenticals();\n    double length = getLength();\n    if (!countGaps) {\n        length = length - getAlignedSequence(1).getNumGapPositions() - getAlignedSequence(2).getNumGapPositions();\n    }\n    return seqid / length;\n}","repo_id":"9","comment":"/**\n * Returns the percentage of identity between the two sequences in the alignment as a fraction between 0 and 1.\n *\n * @param countGaps\n * \t\tIf true, gap positions are counted as mismatches, i.e., the percentage is normalized by the alignment length.\n * \t\tIf false, gap positions are not counted, i.e. the percentage is normalized by the number of aligned residue pairs.\n *      See May (2004). \"Percent sequence identity: the need to be explicit.\"\n * @return the percentage of sequence identity as a fraction in [0,1]\n */\n","repo_name":"biojava-master/","id":2507,"method_signature":"double getPercentageOfIdentity(boolean)"}