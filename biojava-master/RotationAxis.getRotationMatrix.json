{"callee_method_names":["Atom.getX","Atom.getY","Atom.getZ"],"method_name":"RotationAxis.getRotationMatrix","method_implementation":"{\n    if (rotationAxis == null) {\n        // special case for pure translational axes\n        return Matrix.identity(3, 3);\n    }\n    double x = rotationAxis.getX();\n    double y = rotationAxis.getY();\n    double z = rotationAxis.getZ();\n    double cos = Math.cos(theta);\n    double sin = Math.sin(theta);\n    double com = 1 - cos;\n    return new Matrix(new double[][] { { com * x * x + cos, com * x * y + sin * z, com * x * z + -sin * y }, { com * x * y - sin * z, com * y * y + cos, com * y * z + sin * x }, { com * x * z + sin * y, com * y * z - sin * x, com * z * z + cos } });\n}","repo_id":"9","comment":"/**\n * Get the rotation matrix corresponding to a rotation about this axis\n * @param theta The amount to rotate\n * @return A 3x3 rotation matrix\n */\n","repo_name":"biojava-master/","id":562,"method_signature":"Matrix getRotationMatrix(double)"}