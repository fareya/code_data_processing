{"callee_method_names":["Structure.getChains","Chain.getAtomGroups","Group.hasAtom","Group.getAtom","List<Atom>.add","Group.getAtom","List<Atom>.toArray","List<Atom>.size"],"method_name":"StructureTools.getAtomCAArray","method_implementation":"{\n    List<Atom> atoms = new ArrayList<Atom>();\n    for (Chain c : s.getChains()) {\n        for (Group g : c.getAtomGroups()) {\n            if (g.hasAtom(CA_ATOM_NAME) && g.getAtom(CA_ATOM_NAME).getElement() == Element.C) {\n                atoms.add(g.getAtom(CA_ATOM_NAME));\n            }\n        }\n    }\n    return atoms.toArray(new Atom[atoms.size()]);\n}","repo_id":"9","comment":"/**\n * Return an Atom array of the C-alpha atoms. Any atom that is a carbon and\n * has CA name will be returned.\n *\n * @param s\n *            the structure object\n * @return an Atom[] array\n * @see #getRepresentativeAtomArray(Structure)\n */\n","repo_name":"biojava-master/","id":1039,"method_signature":"Atom[] getAtomCAArray(Structure)"}