{"callee_method_names":["URL.openConnection","URLConnection.getOutputStream","OutputStreamWriter.write","OutputStreamWriter.flush","URLConnection.getInputStream","BufferedReader.readLine","StringBuilder.append","StringBuilder.append","StringBuilder.toString","MouseEvent.getMessage"],"method_name":"NCBIQBlastService.getRemoteBlastInfo","method_implementation":"{\n    OutputStreamWriter writer = null;\n    BufferedReader reader = null;\n    try {\n        URLConnection serviceConnection = setQBlastServiceProperties(serviceUrl.openConnection());\n        writer = new OutputStreamWriter(serviceConnection.getOutputStream());\n        writer.write(\"CMD=Info\");\n        writer.flush();\n        reader = new BufferedReader(new InputStreamReader(serviceConnection.getInputStream()));\n        StringBuilder sb = new StringBuilder();\n        String line;\n        while ((line = reader.readLine()) != null) {\n            sb.append(line);\n            sb.append(System.getProperty(\"line.separator\"));\n        }\n        return sb.toString();\n    } catch (IOException e) {\n        throw new Exception(\"Impossible to get info from QBlast service at this time. Cause: \" + e.getMessage(), e);\n    } finally {\n        IOUtils.close(reader);\n        IOUtils.close(writer);\n    }\n}","repo_id":"9","comment":"/**\n * A simple method to check the availability of the QBlast service. Sends {@code Info} command to QBlast\n *\n * @return QBlast info output concatenated to String\n * @throws Exception if unable to connect to the NCBI QBlast service\n */\n","repo_name":"biojava-master/","id":3463,"method_signature":"String getRemoteBlastInfo()"}