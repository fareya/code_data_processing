{"callee_method_names":["Chain.getAtomGroups","Group.getAtom","List<Atom>.add","List<Atom>.addAll"],"method_name":"StructureTools.extractAtoms","method_implementation":"{\n    for (Chain c : chains) {\n        for (Group g : c.getAtomGroups()) {\n            // a temp container for the atoms of this group\n            List<Atom> thisGroupAtoms = new ArrayList<Atom>();\n            // flag to check if this group contains all the requested atoms.\n            boolean thisGroupAllAtoms = true;\n            for (String atomName : atomNames) {\n                Atom a = g.getAtom(atomName);\n                if (a == null) {\n                    // this group does not have a required atom, skip it...\n                    thisGroupAllAtoms = false;\n                    break;\n                }\n                thisGroupAtoms.add(a);\n            }\n            if (thisGroupAllAtoms) {\n                // add the atoms of this group to the array.\n                atoms.addAll(thisGroupAtoms);\n            }\n        }\n    }\n}","repo_id":"9","comment":"/**\n * Adds to the given atoms list, all atoms of groups that contained all\n * requested atomNames, i.e. if a group does not contain all of the\n * requested atom names, its atoms won't be added.\n *\n * @param atomNames\n * @param chains\n * @param atoms\n */\n","repo_name":"biojava-master/","id":1032,"method_signature":"void extractAtoms(String[], List, List)"}