{"callee_method_names":["BufferedReader.readLine","StringBuilder.append","InputStream.close","Logger.error","StringBuilder.toString"],"method_name":"StringManipulationHelper.convertStreamToString","method_implementation":"{\n    BufferedReader reader = new BufferedReader(new InputStreamReader(stream));\n    StringBuilder sb = new StringBuilder();\n    String line = null;\n    try {\n        while ((line = reader.readLine()) != null) {\n            sb.append(line).append(UNIX_NEWLINE);\n        }\n    } catch (IOException e) {\n        // logger.error(\"Exception: \", e);\n    } finally {\n        try {\n            stream.close();\n        } catch (IOException e) {\n            logger.error(\"Exception: \", e);\n        }\n    }\n    return sb.toString();\n}","repo_id":"9","comment":"/**\n * Converts an InputStream of text to a String, closing the stream\n * before returning.\n * <ul>\n * <li> Newlines are converted to Unix newlines (\\n)\n * <li> Default charset encoding is used to read the stream.\n * <li> Any IOException reading the stream is 'squashed' and not made\n *   available to caller\n * <li> An additional newline is appended at the end of the string.\n * <ul>\n * @author andreas\n * @param stream\n * @return a possibly empty but non-null String\n */\n","repo_name":"biojava-master/","id":2618,"method_signature":"String convertStreamToString(InputStream)"}