{"callee_method_ids":[641,1322,970,1652,1633,1929],"callee_method_names":["AtomCache.setFiletype","FileParsingParameters.setAlignSeqRes","FileParsingParameters.setParseBioAssembly","AtomCache.setFileParsingParams","Structure.getPDBHeader","BiologicalAssemblyBuilder.rebuildQuaternaryStructure","SubunitClustererParameters.setUseEntityIdForSeqIdentityDetermination","SubunitClustererParameters.setClustererMethod","QuatSymmetryResults.getSymmetry","QuatSymmetryResults.getStoichiometry"],"method_name":"TestQuatSymmetryDetectorExamples.testSymDetectionPerformanceLargeCapsid","method_implementation":"{\n    AtomCache cache = new AtomCache();\n    cache.setFiletype(StructureFiletype.CIF);\n    FileParsingParameters params = new FileParsingParameters();\n    params.setAlignSeqRes(true);\n    params.setParseBioAssembly(true);\n    cache.setFileParsingParams(params);\n    StructureIO.setAtomCache(cache);\n    // making sure we remove all atoms but representative before we expand, otherwise memory requirements are huge\n    // 6Q1F is another good example\n    Structure au = StructureIO.getStructure(\"6NHJ\");\n    StructureTools.reduceToRepresentativeAtoms(au);\n    BiologicalAssemblyBuilder builder = new BiologicalAssemblyBuilder();\n    List<BiologicalAssemblyTransformation> transforms = au.getPDBHeader().getBioAssemblies().get(1).getTransforms();\n    Structure pdb = builder.rebuildQuaternaryStructure(au, transforms, true, false);\n    SubunitClustererParameters cp = new SubunitClustererParameters();\n    // This is the parameter that makes this fast, set it to false to see the difference.\n    // As of git commit ed322e387cd46344a7864a, the difference in runtime is not that huge:\n    // 2 minutes with true, 10 minutes with false. I observed a much larger difference before, but can't reproduce anymore - JD 2020-01-23\n    cp.setUseEntityIdForSeqIdentityDetermination(true);\n    cp.setClustererMethod(SubunitClustererMethod.SEQUENCE);\n    QuatSymmetryParameters symmParams = new QuatSymmetryParameters();\n    QuatSymmetryResults symmetry = QuatSymmetryDetector.calcGlobalSymmetry(pdb, symmParams, cp);\n    assertEquals(\"I\", symmetry.getSymmetry());\n    assertEquals(\"A960B960C600D480E300\", symmetry.getStoichiometry().toString());\n}","repo_id":"9","comment":"/**\n * A performance test that demonstrates how the SubunitClustererParameters.setUseEntityIdForSeqIdentityDetermination()\n * has a dramatic effect in runtime versus doing alignments.\n */\n","repo_name":"biojava-master/","id":191,"method_signature":"void testSymDetectionPerformanceLargeCapsid()"}