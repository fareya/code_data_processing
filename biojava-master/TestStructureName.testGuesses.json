{"callee_method_ids":[465,465,465,465,465,465,465,465,465],"callee_method_names":["StructureName.isPdbId","StructureName.getSource","StructureName.getPdbId","StructureName.isPdbId","StructureName.getSource","StructureName.getPdbId","StructureName.isPdbId","StructureName.getSource","StructureName.getPdbId","StructureName.isScopName","StructureName.getSource","StructureName.getPdbId","StructureName.isCathID","StructureName.getSource","StructureName.getPdbId","StructureName.isURL","StructureName.getSource","StructureName.getPdbId","StructureName.isURL","StructureName.getSource","StructureName.getPdbId","StructureName.isEcodDomain","StructureName.getSource","StructureName.getPdbId","StructureName.isBioAssembly","StructureName.getSource","StructureName.getPdbId"],"method_name":"TestStructureName.testGuesses","method_implementation":"{\n    StructureName sn;\n    // Basic case\n    sn = new StructureName(\"4hhb\");\n    assertTrue(sn.isPdbId());\n    assertTrue(sn.getSource() == PDB);\n    assertEquals(new PdbId(\"4HHB\"), sn.getPdbId());\n    sn = new StructureName(\"4hhb.A:1-50\");\n    assertTrue(sn.isPdbId());\n    assertTrue(sn.getSource() == PDB);\n    assertEquals(new PdbId(\"4HHB\"), sn.getPdbId());\n    // Invalid strings should NOT work.\n    sn = new StructureName(\"x\");\n    assertTrue(sn.isPdbId());\n    assertTrue(sn.getSource() == PDB);\n    assertEquals(null, sn.getPdbId());\n    // SCOP\n    sn = new StructureName(\"d2gs2a_\");\n    assertTrue(sn.isScopName());\n    assertTrue(sn.getSource() == SCOP);\n    assertEquals(new PdbId(\"2GS2\"), sn.getPdbId());\n    // CATH\n    sn = new StructureName(\"1qvrC03\");\n    assertTrue(sn.isCathID());\n    assertTrue(sn.getSource() == CATH);\n    assertEquals(new PdbId(\"1QVR\"), sn.getPdbId());\n    // URL\n    sn = new StructureName(\"http://www.rcsb.org/pdb/files/1B8G.pdb.gz\");\n    assertTrue(sn.isURL());\n    assertTrue(sn.getSource() == URL);\n    assertEquals(new PdbId(\"1B8G\"), sn.getPdbId());\n    sn = new StructureName(\"file:///4hhb.pdb\");\n    assertTrue(sn.isURL());\n    assertTrue(sn.getSource() == URL);\n    assertEquals(new PdbId(\"4HHB\"), sn.getPdbId());\n    // Files are hard to test, since they rely on existing files\n    // You can run these tests locally after updating the hard-coded paths\n    //sn = new StructureName(\"~/pdb/4hhb.pdb\");\n    //assertTrue(sn.isFile());\n    //assertTrue(sn.getSource() == FILE);\n    //assertEquals(\"4HHB\",sn.getPdbId());\n    //sn = new StructureName(\"/Users/blivens/pdb/4hhb.pdb\");\n    //assertTrue(sn.isFile());\n    //assertTrue(sn.getSource() == FILE);\n    //assertEquals(\"4HHB\",sn.getPdbId());\n    //sn = new StructureName(\"~/pdb/1f9m-1.pdb\");\n    //assertTrue(sn.isFile());\n    //assertTrue(sn.getSource() == FILE);\n    //assertEquals(\"1F9M\",sn.getPdbId());\n    // ECOD\n    sn = new StructureName(\"e1lyw.1\");\n    assertTrue(sn.isEcodDomain());\n    assertTrue(sn.getSource() == ECOD);\n    assertEquals(new PdbId(\"1LYW\"), sn.getPdbId());\n    // BIO is not guessed\n    sn = new StructureName(\"2ehz:1\");\n    assertFalse(sn.isBioAssembly());\n    assertTrue(sn.getSource() == PDB);\n    //Not Guessed\n    assertEquals(null, sn.getPdbId());\n}","repo_id":"9","comment":"/**\n * Test without prefixes\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":2176,"method_signature":"void testGuesses()"}