{"callee_method_names":["Structure.getChains","ChemComp.getAtomGroups","List<Group>.size","Group.getAtoms","Block.getName","Block.getBonds","List<Integer>.add","List<Atom>.indexOf","Chain.getOther","List<Integer>.contains"],"method_name":"TestBond.testNucleotideBonds","method_implementation":"{\n    Structure bio = StructureIO.getStructure(\"4y60\");\n    for (Chain c : bio.getChains()) {\n        int groupCounter = 0;\n        List<Group> currentGroups = c.getAtomGroups();\n        for (Group g : currentGroups) {\n            if (groupCounter != 0 && groupCounter < currentGroups.size()) {\n                List<Atom> atoms = g.getAtoms();\n                for (Atom a : atoms) {\n                    if (a.getName().equals(\"P\")) {\n                        // Check to see if one of the phosphate atoms has bonding to something\n                        // outside of the group.\n                        List<Integer> indexList = new ArrayList<>();\n                        for (Bond b : a.getBonds()) {\n                            indexList.add(atoms.indexOf(b.getOther(a)));\n                        }\n                        assertTrue(indexList.contains(-1));\n                    }\n                }\n            }\n            groupCounter++;\n        }\n    }\n}","repo_id":"9","comment":"/**\n * Test whether nucleotide bonds are being generated\n * @throws IOException\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":2294,"method_signature":"void testNucleotideBonds()"}