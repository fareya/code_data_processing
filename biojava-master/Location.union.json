{"callee_method_names":[],"method_name":"Location.union","method_implementation":"{\n    if (!isSameStrand(other)) {\n        throw new IllegalArgumentException(\"Locations are on opposite strands.\");\n    } else {\n        int start = (other.mStart < mStart) ? other.mStart : mStart;\n        int end = (other.mEnd > mEnd) ? other.mEnd : mEnd;\n        return new Location(start, end);\n    }\n}","repo_id":"9","comment":"/**\n *  Return the union.\n * <br>\n *\n * @param other The location to join.\n * @return The union is a range that starts at the lesser of the two starting indices and ends at the\n * greater of the two ends.\n * @throws IllegalArgumentException Locations are on opposite strands.\n */\n","repo_name":"biojava-master/","id":2397,"method_signature":"Location union(Location)"}