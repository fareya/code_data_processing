{"callee_method_names":["List<String>.indexOf","List<String>.indexOf"],"method_name":"BiologicalAssemblyBuilder.orderTransformationsByChainId","method_implementation":"{\n    final List<String> chainIds = getChainIds(asymUnit);\n    Collections.sort(transformations, new Comparator<BiologicalAssemblyTransformation>() {\n\n        @Override\n        public int compare(BiologicalAssemblyTransformation t1, BiologicalAssemblyTransformation t2) {\n            // set sort order only if the two ids are identical\n            if (t1.getId().equals(t2.getId())) {\n                return chainIds.indexOf(t1.getChainId()) - chainIds.indexOf(t2.getChainId());\n            } else {\n                return t1.getId().compareTo(t2.getId());\n            }\n        }\n    });\n}","repo_id":"9","comment":"/**\n * Orders model transformations by chain ids in the same order as in the asymmetric unit\n * @param asymUnit\n * @param transformations\n */\n","repo_name":"biojava-master/","id":971,"method_signature":"void orderTransformationsByChainId(Structure, List)"}