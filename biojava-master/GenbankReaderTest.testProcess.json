{"callee_method_names":["Logger.info","GenbankReader<ProteinSequence, AminoAcidCompound>.process","LinkedHashMap<String, ProteinSequence>.get","LinkedHashMap<String, ProteinSequence>.get","LinkedHashMap<String, ProteinSequence>.get","LinkedHashMap<String, ProteinSequence>.get","LinkedHashMap<String, ProteinSequence>.get","LinkedHashMap<String, ProteinSequence>.size","LinkedHashMap<String, ProteinSequence>.get","LinkedHashMap<String, ProteinSequence>.get","ProteinSequence.getAccession","ProteinSequence.getAccession","ProteinSequence.getAccession","ProteinSequence.getAccession","GenbankReader<ProteinSequence, AminoAcidCompound>.isClosed","Logger.info","GenbankReader<DNASequence, NucleotideCompound>.process","LinkedHashMap<String, DNASequence>.size","LinkedHashMap<String, DNASequence>.get","LinkedHashMap<String, DNASequence>.get","DNASequence.getAccession","DNASequence.getAccession","DNASequence.getAccession","DNASequence.getAccession","GenbankReader<DNASequence, NucleotideCompound>.isClosed"],"method_name":"GenbankReaderTest.testProcess","method_implementation":"{\n    logger.info(\"process protein\");\n    InputStream inStream = this.getClass().getResourceAsStream(\"/BondFeature.gb\");\n    assertNotNull(inStream);\n    GenbankReader<ProteinSequence, AminoAcidCompound> genbankProtein = new GenbankReader<>(inStream, new GenericGenbankHeaderParser<>(), new ProteinSequenceCreator(AminoAcidCompoundSet.getAminoAcidCompoundSet()));\n    LinkedHashMap<String, ProteinSequence> proteinSequences = genbankProtein.process();\n    assertThat(proteinSequences.get(\"NP_000257\").getComments().get(0), is(\"VALIDATED REFSEQ: This record has undergone validation or\\n\" + \"preliminary review. The reference sequence was derived from\\n\" + \"AL034370.1, X65882.1 and BE139596.1.\\n\" + \"Summary: NDP is the genetic locus identified as harboring mutations\\n\" + \"that result in Norrie disease. Norrie disease is a rare genetic\\n\" + \"disorder characterized by bilateral congenital blindness that is\\n\" + \"caused by a vascularized mass behind each lens due to a\\n\" + \"maldeveloped retina (pseudoglioma).\\n\" + \"Publication Note:  This RefSeq record includes a subset of the\\n\" + \"publications that are available for this gene. Please see the\\n\" + \"Entrez Gene record to access additional publications.\"));\n    assertThat(proteinSequences.get(\"NP_000257\").getReferences().size(), is(11));\n    assertThat(proteinSequences.get(\"NP_000257\").getReferences().get(0).getAuthors(), is(\"Lev,D., Weigl,Y., Hasan,M., Gak,E., Davidovich,M., Vinkler,C.,\\n\" + \"Leshinsky-Silver,E., Lerman-Sagie,T. and Watemberg,N.\"));\n    assertThat(proteinSequences.get(\"NP_000257\").getReferences().get(1).getTitle(), is(\"Novel mutations in Norrie disease gene in Japanese patients with\\n\" + \"Norrie disease and familial exudative vitreoretinopathy\"));\n    assertThat(proteinSequences.get(\"NP_000257\").getReferences().get(10).getJournal(), is(\"Nat. Genet. 1 (3), 199-203 (1992)\"));\n    assertNotNull(proteinSequences);\n    assertEquals(1, proteinSequences.size());\n    ProteinSequence proteinSequence = proteinSequences.get(\"NP_000257\");\n    assertNotNull(proteinSequences.get(\"NP_000257\"));\n    assertEquals(\"NP_000257\", proteinSequence.getAccession().getID());\n    assertEquals(\"4557789\", proteinSequence.getAccession().getIdentifier());\n    assertEquals(\"GENBANK\", proteinSequence.getAccession().getDataSource().name());\n    assertEquals(1, proteinSequence.getAccession().getVersion().intValue());\n    assertTrue(genbankProtein.isClosed());\n    logger.info(\"process DNA\");\n    inStream = this.getClass().getResourceAsStream(\"/NM_000266.gb\");\n    assertNotNull(inStream);\n    GenbankReader<DNASequence, NucleotideCompound> genbankDNA = new GenbankReader<>(inStream, new GenericGenbankHeaderParser<>(), new DNASequenceCreator(DNACompoundSet.getDNACompoundSet()));\n    LinkedHashMap<String, DNASequence> dnaSequences = genbankDNA.process();\n    assertNotNull(dnaSequences);\n    assertEquals(1, dnaSequences.size());\n    DNASequence dnaSequence = dnaSequences.get(\"NM_000266\");\n    assertNotNull(dnaSequences.get(\"NM_000266\"));\n    assertEquals(\"NM_000266\", dnaSequence.getAccession().getID());\n    assertEquals(\"223671892\", dnaSequence.getAccession().getIdentifier());\n    assertEquals(\"GENBANK\", dnaSequence.getAccession().getDataSource().name());\n    assertEquals(3, dnaSequence.getAccession().getVersion().intValue());\n    assertTrue(genbankDNA.isClosed());\n}","repo_id":"9","comment":"/**\n * Test of process method, of class GenbankReader.\n */\n","repo_name":"biojava-master/","id":3219,"method_signature":"void testProcess()"}