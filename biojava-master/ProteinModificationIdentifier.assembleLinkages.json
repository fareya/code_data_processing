{"callee_method_names":["ProteinModification.getCondition","ModificationCondition.getLinkages","List<List<Atom[]>>.size","List<List<Atom[]>>.get","List<List<Atom[]>>.get","List<Atom[]>.add","List<Atom[]>.size","List<Atom[]>.get","List<Group>.contains","Atom[].getGroup","List<Group>.contains","Atom[].getGroup","List<StructureAtomLinkage>.add","Set<ModifiedCompound>.contains","List<ModifiedCompound>.add","Set<ModifiedCompound>.add","List<List<Atom[]>>.get"],"method_name":"ProteinModificationIdentifier.assembleLinkages","method_implementation":"{\n    ModificationCondition condition = mod.getCondition();\n    List<ModificationLinkage> modLinks = condition.getLinkages();\n    int nLink = matchedAtomsOfLinkages.size();\n    int[] indices = new int[nLink];\n    Set<ModifiedCompound> identifiedCompounds = new HashSet<ModifiedCompound>();\n    while (indices[0] < matchedAtomsOfLinkages.get(0).size()) {\n        List<Atom[]> atomLinkages = new ArrayList<Atom[]>(nLink);\n        for (int iLink = 0; iLink < nLink; iLink++) {\n            Atom[] atoms = matchedAtomsOfLinkages.get(iLink).get(indices[iLink]);\n            atomLinkages.add(atoms);\n        }\n        if (matchLinkages(modLinks, atomLinkages)) {\n            // matched\n            int n = atomLinkages.size();\n            List<StructureAtomLinkage> linkages = new ArrayList<StructureAtomLinkage>(n);\n            for (int i = 0; i < n; i++) {\n                Atom[] linkage = atomLinkages.get(i);\n                StructureAtomLinkage link = StructureUtil.getStructureAtomLinkage(linkage[0], residues.contains(linkage[0].getGroup()), linkage[1], residues.contains(linkage[1].getGroup()));\n                linkages.add(link);\n            }\n            ModifiedCompound mc = new ModifiedCompoundImpl(mod, linkages);\n            if (!identifiedCompounds.contains(mc)) {\n                ret.add(mc);\n                identifiedCompounds.add(mc);\n            }\n        }\n        // indices++ (e.g. [0,0,1]=>[0,0,2]=>[1,2,0])\n        int i = nLink - 1;\n        while (i >= 0) {\n            if (i == 0 || indices[i] < matchedAtomsOfLinkages.get(i).size() - 1) {\n                indices[i]++;\n                break;\n            } else {\n                indices[i] = 0;\n                i--;\n            }\n        }\n    }\n}","repo_id":"9","comment":"/**\n * Assembly the matched linkages\n *\n * @param matchedAtomsOfLinkages\n * @param mod\n * @param ret ModifiedCompound will be stored here\n */\n","repo_name":"biojava-master/","id":304,"method_signature":"void assembleLinkages(List, ProteinModification, List)"}