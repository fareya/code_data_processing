{"callee_method_names":[],"method_name":"ABITrace.isABI","method_implementation":"{\n    char[] ABI = new char[4];\n    for (int i = 0; i <= 2; i++) {\n        ABI[i] = (char) traceData[i];\n    }\n    if (ABI[0] == 'A' && (ABI[1] == 'B' && ABI[2] == 'I')) {\n        return true;\n    } else {\n        for (int i = 128; i <= 130; i++) {\n            ABI[i - 128] = (char) traceData[i];\n        }\n        if (ABI[0] == 'A' && (ABI[1] == 'B' && ABI[2] == 'I')) {\n            macJunk = 128;\n            return true;\n        } else\n            return false;\n    }\n}","repo_id":"9","comment":"/**\n * Test to see if the file is ABI format by checking to see that the first three bytes\n * are \"ABI\". Also handle the special case where 128 bytes were prepended to the file\n * due to binary FTP from an older macintosh system.\n *\n * @return - if format of ABI file is correct\n */\n","repo_name":"biojava-master/","id":2877,"method_signature":"boolean isABI()"}