{"callee_method_ids":[3356,3356,3356,3356,3356,3356,3356,3356,3362,3356,3356,3362],"callee_method_names":["GradientMapper.put","GradientMapper.put","GradientMapper.put","GradientMapper.put","GradientMapper.put","GradientMapper.put","LinearColorInterpolator.setInterpolationDirection","GradientMapper.put","GradientMapper.put","GradientMapper.setInterpolator","LinearColorInterpolator.setInterpolationDirection","GradientMapper.put","GradientMapper.put","GradientMapper.setInterpolator"],"method_name":"GradientMapper.getGradientMapper","method_implementation":"{\n    GradientMapper gm;\n    switch(gradientType) {\n        case BLACK_WHITE_GRADIENT:\n            gm = new GradientMapper(Color.BLACK, Color.WHITE);\n            gm.put(min, Color.BLACK);\n            gm.put(max, Color.WHITE);\n            return gm;\n        case WHITE_BLACK_GRADIENT:\n            gm = new GradientMapper(Color.WHITE, Color.BLACK);\n            gm.put(min, Color.WHITE);\n            gm.put(max, Color.BLACK);\n            return gm;\n        case RED_BLUE_GRADIENT:\n            gm = new GradientMapper(Color.RED, Color.BLUE);\n            gm.put(min, Color.RED);\n            gm.put(max, Color.BLUE);\n            return gm;\n        case RAINBOW_GRADIENT:\n            {\n                //Set up interpolation in HSV colorspace\n                ColorSpace hsv = HSVColorSpace.getHSVColorSpace();\n                LinearColorInterpolator interp = new LinearColorInterpolator(hsv);\n                interp.setInterpolationDirection(0, InterpolationDirection.UPPER);\n                Color hsvLow = new Color(hsv, new float[] { 0f, 1f, 1f }, 1f);\n                Color hsvHigh = new Color(hsv, new float[] { 1f, 1f, 1f }, 1f);\n                gm = new GradientMapper(hsvLow, hsvHigh, hsv);\n                gm.put(min, hsvLow);\n                gm.put(max, hsvHigh);\n                gm.setInterpolator(interp);\n                return gm;\n            }\n        case RAINBOW_INTENSITY_GRADIENT:\n            {\n                //Set up interpolation in HSV colorspace\n                ColorSpace hsv = HSVColorSpace.getHSVColorSpace();\n                LinearColorInterpolator interp = new LinearColorInterpolator(hsv);\n                interp.setInterpolationDirection(0, InterpolationDirection.LOWER);\n                Color hsvLow = new Color(hsv, new float[] { 1f, 1f, 1f }, 1f);\n                Color hsvHigh = new Color(hsv, new float[] { 0f, 1f, 0f }, 1f);\n                gm = new GradientMapper(hsvLow, hsvHigh, hsv);\n                gm.put(min, hsvLow);\n                gm.put(max, hsvHigh);\n                gm.setInterpolator(interp);\n                return gm;\n            }\n        default:\n            throw new IllegalArgumentException(\"Unsupported gradient \" + gradientType);\n    }\n}","repo_id":"9","comment":"/**\n * Constructs a gradientMapper to draw one of the pre-defined gradients\n *\n * For example,\n * GradientMapper.getGradientMapper(GradientMapper.RAINBOW_GRADIENT, 0, 10)\n *\n * @param gradientType One of the gradient types, eg GradientMapper.BLACK_WHITE_GRADIENT\n * @param min Start of the gradient\n * @param max End of the gradient\n * @return\n */\n","repo_name":"biojava-master/","id":3347,"method_signature":"GradientMapper getGradientMapper(int, double, double)"}