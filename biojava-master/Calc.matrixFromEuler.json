{"callee_method_names":["Matrix.set","Matrix.set","Matrix.set","Matrix.set","Matrix.set","Matrix.set","Matrix.set","Matrix.set","Matrix.set"],"method_name":"Calc.matrixFromEuler","method_implementation":"{\n    // Assuming the angles are in radians.\n    double ch = Math.cos(heading);\n    double sh = Math.sin(heading);\n    double ca = Math.cos(attitude);\n    double sa = Math.sin(attitude);\n    double cb = Math.cos(bank);\n    double sb = Math.sin(bank);\n    Matrix m = new Matrix(3, 3);\n    m.set(0, 0, ch * ca);\n    m.set(0, 1, sh * sb - ch * sa * cb);\n    m.set(0, 2, ch * sa * sb + sh * cb);\n    m.set(1, 0, sa);\n    m.set(1, 1, ca * cb);\n    m.set(1, 2, -ca * sb);\n    m.set(2, 0, -sh * ca);\n    m.set(2, 1, sh * sa * cb + ch * sb);\n    m.set(2, 2, -sh * sa * sb + ch * cb);\n    return m;\n}","repo_id":"9","comment":"/**\n * This conversion uses NASA standard aeroplane conventions as described on\n * page:\n *   http://www.euclideanspace.com/maths/geometry/rotations/euler/index.htm\n * Coordinate System: right hand Positive angle: right hand Order of euler\n * angles: heading first, then attitude, then bank. matrix row column\n * ordering: [m00 m01 m02] [m10 m11 m12] [m20 m21 m22]\n *\n * @param heading\n *            in radians\n * @param attitude\n *            in radians\n * @param bank\n *            in radians\n * @return the rotation matrix\n */\n","repo_name":"biojava-master/","id":388,"method_signature":"Matrix matrixFromEuler(double, double, double)"}