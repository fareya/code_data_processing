{"callee_method_names":["Group.getChemComp","Logger.warn","StringBuilder.append","ChemComp.getPolymerType","ChemComp.getPolymerType","String.isEmpty","String.length","StringBuilder.append","StringBuilder.append","StringBuilder.toString"],"method_name":"ChainImpl.getSeqResOneLetterSeq","method_implementation":"{\n    StringBuilder str = new StringBuilder();\n    for (Group g : seqResGroups) {\n        ChemComp cc = g.getChemComp();\n        if (cc == null) {\n            logger.warn(\"Could not load ChemComp for group: {}\", g);\n            str.append(StructureTools.UNKNOWN_GROUP_LABEL);\n        } else if (PolymerType.PROTEIN_ONLY.contains(cc.getPolymerType()) || PolymerType.POLYNUCLEOTIDE_ONLY.contains(cc.getPolymerType())) {\n            // an amino acid residue.. use for alignment\n            String oneLetter = ChemCompGroupFactory.getOneLetterCode(cc);\n            // AB oneLetter.length() should be one. e.g. in 1EMA it is 3 and this makes mapping residue to sequence impossible.\n            if (oneLetter == null || oneLetter.isEmpty() || \"?\".equals(oneLetter) || oneLetter.length() != 1) {\n                oneLetter = Character.toString(StructureTools.UNKNOWN_GROUP_LABEL);\n            }\n            str.append(oneLetter);\n        } else {\n            str.append(StructureTools.UNKNOWN_GROUP_LABEL);\n        }\n    }\n    return str.toString();\n}","repo_id":"9","comment":"/**\n * Get the one letter sequence so that Sequence is guaranteed to\n * be the same length as seqResGroups.\n * Method related to https://github.com/biojava/biojava/issues/457\n * @return a string of the sequence guaranteed to be the same length\n * as seqResGroups.\n */\n","repo_name":"biojava-master/","id":1577,"method_signature":"String getSeqResOneLetterSeq()"}