{"callee_method_names":[],"method_name":"AFPCalculator.getEnd2EndDistance","method_implementation":"{\n    double min = 99;\n    double dist1 = Calc.getDistance(ca1[p1b], ca1[p1e]);\n    double dist2 = Calc.getDistance(ca2[p2b], ca2[p2e]);\n    min = dist1 - dist2;\n    return Math.abs(min);\n}","repo_id":"9","comment":"/**\n * filter 1 for AFP extration: the distance of end-to-end\n * @param p1b\n * @param p1e\n * @param p2b\n * @param p2e\n * @return\n */\n","repo_name":"biojava-master/","id":426,"method_signature":"double getEnd2EndDistance(Atom[], Atom[], int, int, int, int)"}