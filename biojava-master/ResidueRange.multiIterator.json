{"callee_method_names":["List<? extends ResidueRange>.size","List<? extends ResidueRange>.size","List<? extends ResidueRange>.get"],"method_name":"ResidueRange.multiIterator","method_implementation":"{\n    ResidueRange[] ranges = new ResidueRange[rrs.size()];\n    for (int i = 0; i < rrs.size(); i++) {\n        ranges[i] = rrs.get(i);\n    }\n    return multiIterator(map, ranges);\n}","repo_id":"9","comment":"/**\n * Returns a new Iterator over every {@link ResidueNumber} in the list of ResidueRanges.\n * Stores the contents of {@code map} until the iterator is finished, so calling code should set the iterator to {@code null} if it did not finish.\n */\n","repo_name":"biojava-master/","id":1683,"method_signature":"Iterator<ResidueNumber> multiIterator(AtomPositionMap, List)"}