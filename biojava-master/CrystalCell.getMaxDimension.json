{"callee_method_names":["ArrayList<Double>.add","Point3d.distance","ArrayList<Double>.add","Point3d.distance","ArrayList<Double>.add","Point3d.distance","ArrayList<Double>.add","Point3d.distance"],"method_name":"CrystalCell.getMaxDimension","method_implementation":"{\n    if (maxDimension != 0) {\n        return maxDimension;\n    }\n    Point3d vert0 = new Point3d(0, 0, 0);\n    Point3d vert1 = new Point3d(1, 0, 0);\n    transfToOrthonormal(vert1);\n    Point3d vert2 = new Point3d(0, 1, 0);\n    transfToOrthonormal(vert2);\n    Point3d vert3 = new Point3d(0, 0, 1);\n    transfToOrthonormal(vert3);\n    Point3d vert4 = new Point3d(1, 1, 0);\n    transfToOrthonormal(vert4);\n    Point3d vert5 = new Point3d(1, 0, 1);\n    transfToOrthonormal(vert5);\n    Point3d vert6 = new Point3d(0, 1, 1);\n    transfToOrthonormal(vert6);\n    Point3d vert7 = new Point3d(1, 1, 1);\n    transfToOrthonormal(vert7);\n    ArrayList<Double> vertDists = new ArrayList<Double>();\n    vertDists.add(vert0.distance(vert7));\n    vertDists.add(vert3.distance(vert4));\n    vertDists.add(vert1.distance(vert6));\n    vertDists.add(vert2.distance(vert5));\n    maxDimension = Collections.max(vertDists);\n    return maxDimension;\n}","repo_id":"9","comment":"/**\n * Gets the maximum dimension of the unit cell.\n * @return\n */\n","repo_name":"biojava-master/","id":1476,"method_signature":"double getMaxDimension()"}