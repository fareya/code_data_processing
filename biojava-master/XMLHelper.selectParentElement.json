{"callee_method_names":["Element.getParentNode","Node.getNodeType","Element.getTagName"],"method_name":"XMLHelper.selectParentElement","method_implementation":"{\n    Node parentNode = element.getParentNode();\n    if (parentNode == null) {\n        return null;\n    }\n    // check that parent is actually an element, else return null\n    // this is to prevent ClassCastExceptions if element's parent is not an Element.\n    Element parentElement = null;\n    if (Node.ELEMENT_NODE == parentNode.getNodeType()) {\n        parentElement = (Element) parentNode;\n    } else {\n        return null;\n    }\n    if (parentElement.getTagName().equals(parentName)) {\n        return parentElement;\n    }\n    return selectParentElement(parentElement, parentName);\n}","repo_id":"9","comment":"/**\n * Given an element, searches upwards through ancestor Elements till the first Element\n * matching the requests {@code}parentName{@code} is found.\n * @param element The starting element\n * @param parentName The tag name of the requested Element.\n * @return The found element, or {@code}null{@code} if no matching element is found,\n */\n","repo_name":"biojava-master/","id":2589,"method_signature":"Element selectParentElement(Element, String)"}