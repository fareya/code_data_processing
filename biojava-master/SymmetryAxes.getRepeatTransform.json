{"callee_method_names":["Matrix4d.setIdentity","List<Axis>.get","Matrix4d.mul","List<Axis>.get","Matrix4d.invert","Matrix4d.mul"],"method_name":"SymmetryAxes.getRepeatTransform","method_implementation":"{\n    Matrix4d transform = new Matrix4d();\n    transform.setIdentity();\n    int[] iCounts = getAxisCounts(x);\n    int[] jCounts = getAxisCounts(y);\n    int[] counts = new int[iCounts.length];\n    for (int k = 0; k < iCounts.length; k++) counts[k] = iCounts[k] - jCounts[k];\n    for (int t = counts.length - 1; t >= 0; t--) {\n        if (counts[t] == 0)\n            continue;\n        if (counts[t] > 0) {\n            Matrix4d axis = new Matrix4d(axes.get(t).getOperator());\n            for (int i = 0; i < counts[t]; i++) transform.mul(axis);\n        } else if (counts[t] < 0) {\n            Matrix4d axis = new Matrix4d(axes.get(t).getOperator());\n            axis.invert();\n            for (int i = 0; i < counts[t]; i++) transform.mul(axis);\n        }\n    }\n    return transform;\n}","repo_id":"9","comment":"/**\n * Return the transformation that needs to be applied to\n * repeat x in order to superimpose onto repeat y.\n *\n * @param x the first repeat index (transformed)\n * @param y the second repeat index (fixed)\n * @return transformation matrix for the repeat x\n */\n","repo_name":"biojava-master/","id":2100,"method_signature":"Matrix4d getRepeatTransform(int, int)"}