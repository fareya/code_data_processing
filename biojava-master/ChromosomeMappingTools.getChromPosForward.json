{"callee_method_names":["List<Integer>.size","List<Integer>.get","List<Integer>.get","Logger.debug","Logger.debug","Logger.debug","Logger.debug","Logger.debug","Logger.debug","Logger.debug","Logger.debug","Logger.debug","Logger.debug","Logger.debug","Logger.debug","Logger.debug"],"method_name":"ChromosomeMappingTools.getChromPosForward","method_implementation":"{\n    boolean inCoding = false;\n    int codingLength = 0;\n    @SuppressWarnings(\"unused\")\n    int lengthExons = 0;\n    // map forward\n    for (int i = 0; i < exonStarts.size(); i++) {\n        // start can include UTR\n        int start = exonStarts.get(i);\n        int end = exonEnds.get(i);\n        lengthExons += end - start;\n        if (start <= cdsStart + 1 && end >= cdsStart + 1) {\n            // first exon with UTR\n            if (codingLength + (end - cdsStart - 1) >= cdsPos) {\n                // we are reaching our target position\n                int tmp = cdsPos - codingLength;\n                logger.debug(cdsStart + \" | \" + codingLength + \" | \" + tmp);\n                logger.debug(\" -> found position in UTR exon:  #\" + (i + 1) + \" cdsPos:\" + cdsPos + \" return:\" + (cdsStart + 1 + tmp) + \" start:\" + format(start + 1) + \" \" + format(tmp) + \" \" + cdsStart + \" \" + codingLength);\n                // we start 1 after cdsStart...\n                return new ChromPos((cdsStart + 1 + tmp), -1);\n            }\n            inCoding = true;\n            codingLength += (end - cdsStart);\n            logger.debug(\"     UTR         : \" + format(start + 1) + \" - \" + (cdsStart));\n            logger.debug(\" ->  Exon        : \" + format(cdsStart + 1) + \" - \" + format(end) + \" | \" + format(end - cdsStart) + \" | \" + codingLength + \" | \" + (codingLength % 3));\n        } else if (start + 1 <= cdsEnd && end >= cdsEnd) {\n            // LAST EXON with UTR\n            //logger.debug(\" <-- CDS end at: \" + cdsEnd );\n            inCoding = false;\n            if (codingLength + (cdsEnd - start - 1) >= cdsPos) {\n                int tmp = cdsPos - codingLength;\n                logger.debug(\" <-  Exon        : \" + format(start + 1) + \" - \" + format(cdsEnd) + \" | \" + format(cdsEnd - start) + \" | \" + codingLength + \" | \" + (codingLength % 3));\n                logger.debug(\"     UTR         : \" + format(cdsEnd + 1) + \" - \" + format(end));\n                logger.debug(codingLength + \" | \" + tmp + \" | \" + format(start + 1));\n                logger.debug(\" -> chromPosForward found position in non coding exon:  \" + cdsPos + \" \" + format(start + 1) + \" \" + format(tmp) + \" \" + format(cdsStart) + \" \" + codingLength);\n                return new ChromPos((start + 1 + tmp), cdsPos % 3);\n            }\n            codingLength += (cdsEnd - start - 1);\n            logger.debug(\" <-  Exon        : \" + format(start + 1) + \" - \" + format(cdsEnd) + \" | \" + format(cdsEnd - start) + \" | \" + codingLength + \" | \" + (codingLength % 3));\n            logger.debug(\"     UTR         : \" + format(cdsEnd + 1) + \" - \" + format(end));\n        } else if (inCoding) {\n            // A standard coding Exon\n            // tests for the maximum length of this coding exon\n            if (codingLength + (end - start - 1) >= cdsPos) {\n                // we are within the range of this exon\n                int tmp = cdsPos - codingLength;\n                logger.debug(\"     Exon        : \" + format(start + 1) + \" - \" + format(end) + \" | \" + format(end - start) + \" | \" + tmp + \" | \" + codingLength);\n                logger.debug(\" -> found chr position in coding exon #\" + (i + 1) + \":  cdsPos:\" + format(cdsPos) + \" s:\" + format(start) + \"-\" + format(end) + \" tmp:\" + format(tmp) + \" cdsStart:\" + format(cdsStart) + \" codingLength:\" + codingLength);\n                return new ChromPos((start + 1 + tmp), cdsPos % 3);\n            }\n            // full exon is coding\n            codingLength += (end - start);\n            logger.debug(\"     Exon        : \" + format(start + 1) + \" - \" + format(end) + \" | \" + format(end - start) + \" | \" + codingLength + \" | \" + (codingLength % 3));\n        }\n    }\n    return new ChromPos(-1, -1);\n}","repo_id":"9","comment":"/**\n * Get the CDS position mapped onto the chromosome position\n *\n * @param exonStarts\n * @param exonEnds\n * @param cdsStart\n * @param cdsEnd\n * @return\n */\n","repo_name":"biojava-master/","id":2482,"method_signature":"ChromPos getChromPosForward(int, List, List, int, int)"}