{"callee_method_names":["ProteinSequence.getSequenceAsString","ProteinSequence.getSequenceAsString","ProteinSequence.getLength","ProteinSequence.getSequenceAsString","Logger.error","Element.getMessage","ProteinSequence.getUserCollection","ProteinSequence.getUserCollection"],"method_name":"FastaAFPChainConverter.cpFastaToAfpChain","method_implementation":"{\n    if (structure == null) {\n        throw new IllegalArgumentException(\"The structure is null\");\n    }\n    if (first == null) {\n        throw new IllegalArgumentException(\"The sequence is null\");\n    }\n    // we need to find the ungapped CP site\n    int gappedCpShift = 0;\n    int ungappedCpShift = 0;\n    while (ungappedCpShift < Math.abs(cpSite)) {\n        char c;\n        try {\n            if (cpSite <= 0) {\n                c = second.getSequenceAsString().charAt(gappedCpShift);\n            } else {\n                c = second.getSequenceAsString().charAt(first.getLength() - 1 - gappedCpShift);\n            }\n        } catch (StringIndexOutOfBoundsException e) {\n            throw new IllegalArgumentException(\"CP site of \" + cpSite + \" is wrong\");\n        }\n        if (c != '-') {\n            ungappedCpShift++;\n        }\n        gappedCpShift++;\n    }\n    Atom[] ca1 = StructureTools.getRepresentativeAtomArray(structure);\n    // can't use cloneCAArray because it doesn't set parent group.chain.structure\n    Atom[] ca2 = StructureTools.getRepresentativeAtomArray(structure);\n    ProteinSequence antipermuted = null;\n    try {\n        antipermuted = new ProteinSequence(SequenceTools.permuteCyclic(second.getSequenceAsString(), gappedCpShift));\n    } catch (CompoundNotFoundException e) {\n        // this can't happen, the original sequence comes from a ProteinSequence\n        logger.error(\"Unexpected error while creating protein sequence: {}. This is most likely a bug.\", e.getMessage());\n    }\n    ResidueNumber[] residues = StructureSequenceMatcher.matchSequenceToStructure(first, structure);\n    ResidueNumber[] antipermutedResidues = StructureSequenceMatcher.matchSequenceToStructure(antipermuted, structure);\n    ResidueNumber[] nonpermutedResidues = new ResidueNumber[antipermutedResidues.length];\n    SequenceTools.permuteCyclic(antipermutedResidues, nonpermutedResidues, -gappedCpShift);\n    // nullify ResidueNumbers that have a lowercase sequence character\n    if (first.getUserCollection() != null) {\n        CasePreservingProteinSequenceCreator.setLowercaseToNull(first, residues);\n    }\n    if (second.getUserCollection() != null) {\n        CasePreservingProteinSequenceCreator.setLowercaseToNull(second, nonpermutedResidues);\n    }\n    //\t\tfor (int i = 0; i < residues.length; i++) {\n    //\t\t\tif (residues[i] == null) {\n    //\t\t\t\tSystem.out.print(\"=\");\n    //\t\t\t} else {\n    //\t\t\t\tSystem.out.print(sequence.getSequenceAsString().charAt(i));\n    //\t\t\t}\n    //\t\t}\n    //\t\tSystem.out.println();\n    //\t\tfor (int i = 0; i < residues.length; i++) {\n    //\t\t\tif (nonpermutedResidues[i] == null) {\n    //\t\t\t\tSystem.out.print(\"=\");\n    //\t\t\t} else {\n    //\t\t\t\tSystem.out.print(second.getSequenceAsString().charAt(i));\n    //\t\t\t}\n    //\t\t}\n    //\t\tSystem.out.println();\n    return buildAlignment(ca1, ca2, residues, nonpermutedResidues);\n}","repo_id":"9","comment":"/**\n * Takes a structure and sequence corresponding to an alignment between a structure or sequence and itself (or even a structure with a sequence), where the result has a circular permutation site\n * {@link cpSite} residues to the right.\n *\n * @param first The unpermuted sequence\n * @param second The sequence permuted by cpSite\n * @param cpSite\n *            The number of residues from the beginning of the sequence at which the circular permutation site occurs; can be positive or negative; values greater than the length of the sequence\n *            are acceptable\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":1305,"method_signature":"AFPChain cpFastaToAfpChain(ProteinSequence, ProteinSequence, Structure, int)"}