{"callee_method_names":["Point3d[].distance","List<IndexAndDistance>.add","List<IndexAndDistance>.toArray"],"method_name":"AsaCalculator.findNeighborIndices","method_implementation":"{\n    // looking at a typical protein case, number of neighbours are from ~10 to ~50, with an average of ~30\n    int initialCapacity = 60;\n    IndexAndDistance[][] nbsIndices = new IndexAndDistance[atomCoords.length][];\n    for (int k = 0; k < atomCoords.length; k++) {\n        double radius = radii[k] + probe + probe;\n        List<IndexAndDistance> thisNbIndices = new ArrayList<>(initialCapacity);\n        for (int i = 0; i < atomCoords.length; i++) {\n            if (i == k)\n                continue;\n            double dist = atomCoords[i].distance(atomCoords[k]);\n            if (dist < radius + radii[i]) {\n                thisNbIndices.add(new IndexAndDistance(i, dist));\n            }\n        }\n        IndexAndDistance[] indicesArray = thisNbIndices.toArray(new IndexAndDistance[0]);\n        nbsIndices[k] = indicesArray;\n    }\n    return nbsIndices;\n}","repo_id":"9","comment":"/**\n * Returns the 2-dimensional array with neighbor indices for every atom.\n * @return 2-dimensional array of size: n_atoms x n_neighbors_per_atom\n */\n","repo_name":"biojava-master/","id":835,"method_signature":"IndexAndDistance[][] findNeighborIndices()"}