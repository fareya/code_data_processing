{"callee_method_ids":[3106,3108],"callee_method_names":["Map<String, List<AbstractFeature<AbstractSequence<C>, C>>>.keySet","Map<String, List<AbstractFeature<AbstractSequence<C>, C>>>.get","Map<String, List<AbstractFeature<AbstractSequence<C>, C>>>.get","ArrayList<DBReferenceInfo>.get","DBReferenceInfo.getDatabase","DBReferenceInfo.getId","SequenceReader<C>.getAccession"],"method_name":"AbstractSequence.setProxySequenceReader","method_implementation":"{\n    this.sequenceStorage = proxyLoader;\n    if (proxyLoader instanceof FeaturesKeyWordInterface) {\n        this.setFeaturesKeyWord((FeaturesKeyWordInterface) sequenceStorage);\n    }\n    if (proxyLoader instanceof DatabaseReferenceInterface) {\n        this.setDatabaseReferences((DatabaseReferenceInterface) sequenceStorage);\n    }\n    if (proxyLoader instanceof FeatureRetriever) {\n        this.setFeatureRetriever((FeatureRetriever) sequenceStorage);\n        Map<String, List<AbstractFeature<AbstractSequence<C>, C>>> ff = getFeatureRetriever().getFeatures();\n        for (String k : ff.keySet()) {\n            for (AbstractFeature f : ff.get(k)) {\n                this.addFeature(f);\n            }\n        }\n        // success of next statement guaranteed because source is a compulsory field\n        //DBReferenceInfo dbQualifier = (DBReferenceInfo)ff.get(\"source\").get(0).getQualifiers().get(\"db_xref\");\n        ArrayList<DBReferenceInfo> dbQualifiers = (ArrayList) ff.get(\"source\").get(0).getQualifiers().get(\"db_xref\");\n        DBReferenceInfo dbQualifier = dbQualifiers.get(0);\n        if (dbQualifier != null)\n            this.setTaxonomy(new TaxonomyID(dbQualifier.getDatabase() + \":\" + dbQualifier.getId(), DataSource.UNKNOWN));\n    }\n    if (getAccession() == null && proxyLoader instanceof UniprotProxySequenceReader) {\n        // we have lots of unsupported operations for this call so quick fix to allow this tow rork\n        this.setAccession(proxyLoader.getAccession());\n    }\n}","repo_id":"9","comment":"/**\n * Very important method that allows external mappings of sequence data and features. This method\n * will gain additional interface inspection that allows external data sources with knowledge\n * of features for a sequence to be supported.\n *\n * @param proxyLoader\n */\n","repo_name":"biojava-master/","id":2899,"method_signature":"void setProxySequenceReader(SequenceReader)"}