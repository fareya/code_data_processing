{"callee_method_names":["Matrix4d.getElement","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","Matrix4d.getElement","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","Matrix4d.getElement","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","Matrix4d.getElement","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.toString"],"method_name":"CrystalTransform.toXYZString","method_implementation":"{\n    StringBuilder str = new StringBuilder();\n    for (int i = 0; i < 3; i++) {\n        //for each row\n        boolean emptyRow = true;\n        // TODO work with rational numbers\n        double coef;\n        // X\n        coef = matTransform.getElement(i, 0);\n        // Three cases for coef: zero, one, non-one\n        if (abs(coef) > 1e-6) {\n            // Non-zero\n            if (abs(abs(coef) - 1) < 1e-6) {\n                // +/- 1\n                if (coef < 0) {\n                    str.append(\"-\");\n                }\n            } else {\n                str.append(formatCoef(coef));\n                str.append(\"*\");\n            }\n            str.append(\"x\");\n            emptyRow = false;\n        }\n        // Y\n        coef = matTransform.getElement(i, 1);\n        if (abs(coef) > 1e-6) {\n            // Non-zero\n            if (abs(abs(coef) - 1) < 1e-6) {\n                // +/- 1\n                if (coef < 0) {\n                    str.append(\"-\");\n                } else if (!emptyRow) {\n                    str.append(\"+\");\n                }\n            } else {\n                if (!emptyRow && coef > 0) {\n                    str.append(\"+\");\n                }\n                str.append(formatCoef(coef));\n                str.append(\"*\");\n            }\n            str.append(\"y\");\n            emptyRow = false;\n        }\n        // Z\n        coef = matTransform.getElement(i, 2);\n        if (abs(coef) > 1e-6) {\n            // Non-zero\n            if (abs(abs(coef) - 1) < 1e-6) {\n                // +/- 1\n                if (coef < 0) {\n                    str.append(\"-\");\n                } else if (!emptyRow) {\n                    str.append(\"+\");\n                }\n            } else {\n                if (!emptyRow && coef > 0) {\n                    str.append(\"+\");\n                }\n                str.append(formatCoef(coef));\n                str.append(\"*\");\n            }\n            str.append(\"z\");\n            emptyRow = false;\n        }\n        // Intercept\n        coef = matTransform.getElement(i, 3);\n        if (abs(coef) > 1e-6) {\n            // Non-zero\n            if (!emptyRow && coef > 0) {\n                str.append(\"+\");\n            }\n            str.append(formatCoef(coef));\n        }\n        if (i < 2) {\n            str.append(\",\");\n        }\n    }\n    return str.toString();\n}","repo_id":"9","comment":"/**\n * Expresses this transformation in terms of x,y,z fractional coordinates.\n *\n * Examples:\n * @return\n */\n","repo_name":"biojava-master/","id":1432,"method_signature":"String toXYZString()"}