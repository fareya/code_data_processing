{"callee_method_names":["Polyhedron.getLineLoops","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.toString"],"method_name":"JmolSymmetryScriptGeneratorPointGroup.drawPolyhedron","method_implementation":"{\n    StringBuilder s = new StringBuilder();\n    Point3d[] vertices = getPolyhedronVertices();\n    int index = 0;\n    double width = getMaxExtension() * 0.015;\n    for (int[] lineLoop : polyhedron.getLineLoops()) {\n        s.append(\"draw polyhedron\");\n        s.append(name);\n        s.append(index++);\n        s.append(\" line\");\n        for (int i : lineLoop) {\n            s.append(getJmolPoint(vertices[i]));\n        }\n        s.append(\"width \");\n        s.append(fDot2(width));\n        s.append(\" color\");\n        Color4f c = getPolyhedronColor();\n        s.append(getJmolColor(c));\n        s.append(\" off;\");\n    }\n    return s.toString();\n}","repo_id":"9","comment":"/* (non-Javadoc)\n\t * @see org.biojava.nbio.structure.quaternary.jmolScript.JMolSymmetryScriptInterface#drawPolyhedron()\n\t */\n","repo_name":"biojava-master/","id":3389,"method_signature":"String drawPolyhedron()"}