{"callee_method_ids":[2423,2422,2431],"callee_method_names":["FeatureI.seqname","Location.isSameStrand","FeatureI.location","FeatureI.location","FeatureI.location","Location.opposite","FeatureList.add"],"method_name":"FeatureList.selectOverlapping","method_implementation":"{\n    FeatureList list = new FeatureList();\n    for (FeatureI feature : this) {\n        boolean overlaps = false;\n        if (feature.seqname().equals(seqname)) {\n            if (location.isSameStrand(feature.location())) {\n                overlaps = feature.location().overlaps(location);\n            } else if (useBothStrands) {\n                overlaps = feature.location().overlaps(location.opposite());\n            }\n        }\n        if (overlaps) {\n            list.add(feature);\n        }\n    }\n    return list;\n}","repo_id":"9","comment":"/**\n * Create a list of all features that overlap the specified location on the specified\n * sequence.\n *\n * @param seqname The sequence name. Only features with this sequence name will be checked for overlap.\n * @param location The location to check.\n * @param useBothStrands If true, locations are mapped to their positive strand image\n * before being checked for overlap. If false, only features whose locations are\n * on the same strand as the specified location will be considered for inclusion.\n * @return The new list of features that overlap the location.\n */\n","repo_name":"biojava-master/","id":2443,"method_signature":"FeatureList selectOverlapping(String, Location, boolean)"}