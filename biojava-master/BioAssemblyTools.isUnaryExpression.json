{"callee_method_names":["String.indexOf","String.lastIndexOf"],"method_name":"BioAssemblyTools.isUnaryExpression","method_implementation":"{\n    int first = expression.indexOf(\"(\");\n    int last = expression.lastIndexOf(\"(\");\n    if (first < 0 || last < 0) {\n        return true;\n    }\n    return !(first == 0 && last > first);\n}","repo_id":"9","comment":"/**\n * Checks if the passed in expression is a unary operator expression\n * Example: (1,2,3) or (1-60) are unary operator expressions\n *          (1-60)(61-88) is a binary operator expression, representing\n *          a cartesian product of the two parenthesised lists\n *\n * @param expression\n * @return true if expression is a unary operator expression\n */\n","repo_name":"biojava-master/","id":964,"method_signature":"boolean isUnaryExpression(String)"}