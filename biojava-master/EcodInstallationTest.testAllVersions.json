{"callee_method_ids":[1804,1821],"callee_method_names":["List<String>.add","EcodInstallation.getAllDomains","EcodInstallation.getVersion"],"method_name":"EcodInstallationTest.testAllVersions","method_implementation":"{\n    // List all versions\n    List<String> versions = getKnownEcodVersions();\n    versions.add(EcodFactory.DEFAULT_VERSION);\n    // Parse all versions\n    for (String version : versions) {\n        EcodInstallation ecod = (EcodInstallation) EcodFactory.getEcodDatabase(version);\n        ecod.getAllDomains();\n        System.out.println(version + \" -> \" + ecod.getVersion());\n        // Force garbage collection of all soft references\n        // This shouldn't be required, but without it we get\n        // 'OutOfMemoryError: GC overhead limit exceeded'.\n        // Probably this is due to synchronization in EcodFactory blocking\n        // the GC during parsing. -Spencer\n        ecod = null;\n        System.gc();\n        try {\n            @SuppressWarnings(\"unused\")\n            Object[] ignored = new Object[(int) Runtime.getRuntime().maxMemory()];\n        } catch (Throwable e) {\n            // Ignore OME\n        }\n    }\n}","repo_id":"9","comment":"/**\n * Parses all known versions. Only fails due to exceptions, so manually check for warnings.\n * Hierarchical field warnings are expected for versions prior to develop68.\n * @throws IOException\n */\n","repo_name":"biojava-master/","id":179,"method_signature":"void testAllVersions()"}