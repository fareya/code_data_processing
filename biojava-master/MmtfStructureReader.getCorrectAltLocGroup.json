{"callee_method_names":["Group.getAtoms","List<Atom>.size","List<Atom>.get","Atom.getAltLoc","Group.getAltLocGroup","Group.addAltLoc","Chain.getAtomGroups","Group.getAtoms","Group.clone","Group.setAtoms","Group.getAltLocs","Group.addAltLoc"],"method_name":"MmtfStructureReader.getCorrectAltLocGroup","method_implementation":"{\n    // see if we know this altLoc already;\n    List<Atom> atoms = group.getAtoms();\n    if (atoms.size() > 0) {\n        Atom a1 = atoms.get(0);\n        // we are just adding atoms to the current group\n        // probably there is a second group following later...\n        if (a1.getAltLoc().equals(altLoc)) {\n            return group;\n        }\n    }\n    // Get the altLocGroup\n    Group altLocgroup = group.getAltLocGroup(altLoc);\n    if (altLocgroup != null) {\n        return altLocgroup;\n    }\n    // If the group already exists (microheterogenity).\n    Group oldGroup = getGroupWithSameResNumButDiffPDBName();\n    if (oldGroup != null) {\n        Group altLocG = group;\n        group = oldGroup;\n        group.addAltLoc(altLocG);\n        chain.getAtomGroups().remove(altLocG);\n        return altLocG;\n    }\n    // no matching altLoc group found.\n    // build it up.\n    if (group.getAtoms().size() == 0) {\n        return group;\n    }\n    Group altLocG = (Group) group.clone();\n    // drop atoms from cloned group...\n    // https://redmine.open-bio.org/issues/3307\n    altLocG.setAtoms(new ArrayList<Atom>());\n    altLocG.getAltLocs().clear();\n    group.addAltLoc(altLocG);\n    return altLocG;\n}","repo_id":"9","comment":"/**\n * Generates Alternate location groups.\n *\n * @param altLoc the alt loc\n * @return the correct alt loc group\n */\n","repo_name":"biojava-master/","id":1269,"method_signature":"Group getCorrectAltLocGroup(Character)"}