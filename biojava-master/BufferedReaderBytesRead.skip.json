{"callee_method_names":[],"method_name":"BufferedReaderBytesRead.skip","method_implementation":"{\n    if (n < 0L) {\n        throw new IllegalArgumentException(\"skip value is negative\");\n    }\n    synchronized (lock) {\n        ensureOpen();\n        long r = n;\n        while (r > 0) {\n            if (nextChar >= nChars) {\n                fill();\n            }\n            if (nextChar >= nChars) /* EOF */\n            {\n                break;\n            }\n            if (skipLF) {\n                skipLF = false;\n                if (cb[nextChar] == '\\n') {\n                    nextChar++;\n                }\n            }\n            long d = (long) nChars - nextChar;\n            if (r <= d) {\n                nextChar += r;\n                r = 0;\n                break;\n            } else {\n                r -= d;\n                nextChar = nChars;\n            }\n        }\n        bytesRead = bytesRead + (n - r);\n        return n - r;\n    }\n}","repo_id":"9","comment":"/**\n * Skips characters.\n *\n * @param  n  The number of characters to skip\n *\n * @return    The number of characters actually skipped\n *\n * @exception  IllegalArgumentException  If <code>n<\/code> is negative.\n * @exception  IOException  If an I/O error occurs\n */\n","repo_name":"biojava-master/","id":2717,"method_signature":"long skip(long)"}