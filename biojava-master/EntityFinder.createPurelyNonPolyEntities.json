{"callee_method_ids":[1352,1347,1349,1352,1347,1349],"callee_method_names":["List<List<Chain>>.isEmpty","List<EntityInfo>.isEmpty","List<List<Chain>>.get","String.getAtomGroup","EntityInfo.setDescription","EntityInfo.setType","EntityInfo.setMolId","List<EntityInfo>.add","EntityInfo.addChain","String.setEntityInfo","List<EntityInfo>.addAll","List<List<Chain>>.get","EntityInfo.setType","EntityInfo.setDescription","EntityInfo.setMolId","EntityInfo.addChain","List<EntityInfo>.add"],"method_name":"EntityFinder.createPurelyNonPolyEntities","method_implementation":"{\n    if (nonPolyModels.isEmpty())\n        return;\n    // let's find first the max entity id to assign entity ids to the newly found entities\n    int maxMolId = 0;\n    if (!entities.isEmpty()) {\n        maxMolId = Collections.max(entities, Comparator.comparingInt(EntityInfo::getMolId)).getMolId();\n    }\n    // we go one over the max\n    int molId = maxMolId + 1;\n    if (!nonPolyModels.get(0).isEmpty()) {\n        List<EntityInfo> nonPolyEntities = new ArrayList<>();\n        for (List<Chain> model : nonPolyModels) {\n            for (Chain c : model) {\n                // we assume there's only 1 group per non-poly chain\n                String molecPdbName = c.getAtomGroup(0).getPDBName();\n                EntityInfo nonPolyEntity = findNonPolyEntityWithDescription(molecPdbName, nonPolyEntities);\n                if (nonPolyEntity == null) {\n                    nonPolyEntity = new EntityInfo();\n                    nonPolyEntity.setDescription(molecPdbName);\n                    nonPolyEntity.setType(EntityType.NONPOLYMER);\n                    nonPolyEntity.setMolId(molId++);\n                    nonPolyEntities.add(nonPolyEntity);\n                }\n                nonPolyEntity.addChain(c);\n                c.setEntityInfo(nonPolyEntity);\n            }\n        }\n        entities.addAll(nonPolyEntities);\n    }\n    if (!waterModels.get(0).isEmpty()) {\n        EntityInfo waterEntity = new EntityInfo();\n        waterEntity.setType(EntityType.WATER);\n        waterEntity.setDescription(\"water\");\n        waterEntity.setMolId(molId);\n        for (List<Chain> model : waterModels) {\n            for (Chain waterChain : model) {\n                waterEntity.addChain(waterChain);\n                waterChain.setEntityInfo(waterEntity);\n            }\n        }\n        entities.add(waterEntity);\n    }\n}","repo_id":"9","comment":"/**\n * Given all chains of all models find entities for the nonpolymers and water chains within them,\n * assigning entity ids, types and descriptions to them. The result is written back to the passed entities List.\n * @param nonPolyModels\n * @param waterModels\n * @param entities\n */\n","repo_name":"biojava-master/","id":1300,"method_signature":"void createPurelyNonPolyEntities(List, List, List)"}