{"callee_method_names":["BufferedReader.readLine","BufferedReader.readLine","String.split","Map<String, String>.put","String[].trim","String[].trim","BufferedReader.close","BufferedReader.readLine","String.split","String[].length","Logger.info","String[].trim","Map<String, String>.get","String.toLowerCase","String[].trim","List<String>.add","Logger.info","Logger.info","Logger.info","BufferedReader.close","Logger.info","Logger.info"],"method_name":"GenerateJavaCodesFromTextTest.generateCodes","method_implementation":"{\n    BufferedReader input = new BufferedReader(new FileReader(\"./src/test/resources/Symbol2Name.txt\"));\n    Map<String, String> symbol2Name = new HashMap<String, String>();\n    //Header line is not required\n    String line = input.readLine();\n    while ((line = input.readLine()) != null) {\n        String[] sA = line.split(\"\\t\");\n        symbol2Name.put(sA[1].trim(), sA[2].trim());\n    }\n    input.close();\n    input = new BufferedReader(new FileReader(\"./src/test/resources/Symbol2Weight.txt\"));\n    List<String> elementNameList = new ArrayList<String>();\n    String elementName = null;\n    String elementNameLower = null;\n    Double elementMass = null;\n    while ((line = input.readLine()) != null) {\n        String[] sA = line.split(\"\\t\");\n        if (sA[0].length() > 0) {\n            //Elements\n            logger.info(\"{}.setIsotopes(iList);\", elementNameLower);\n            //int decimalPlace = getDecimalPlace(elementMass + \"\");\n            //System.out.println(\"assertEquals(\" + elementMass + \", Utils.roundToDecimals(\" + elementNameLower +\n            //\t\".getMass(), \" + decimalPlace + \"));\");\n            String symbol = sA[1].trim();\n            elementName = symbol2Name.get(symbol);\n            elementNameLower = elementName.toLowerCase();\n            int protonNumber = Integer.parseInt(sA[0].trim());\n            elementMass = cleanNumber(sA[5]);\n            if (protonNumber > 82)\n                break;\n            elementNameList.add(elementNameLower);\n            logger.info(\"iList = new ArrayList<Isotope>();\");\n            logger.info(\"Element {} = new Element(\\\"{}\\\", \\\"{}\\\", {}, null, {});\", elementNameLower, elementName, symbol, protonNumber, elementMass);\n        }\n        int neutronNumber = Integer.parseInt(sA[2]);\n        double weight = cleanNumber(sA[3]);\n        //if(sA.length > 4 && sA[4].length() > 0) abundance = cleanNumber(sA[4]);\n        logger.info(\"iList.add(new Isotope(\\\"{}-{}\\\", {}, {}));\", elementName, neutronNumber, neutronNumber, weight);\n    }\n    input.close();\n    logger.info(\"List<Element> eList = new ArrayList<Element>();\");\n    for (String e : elementNameList) logger.info(\"eList.add({});\", e);\n}","repo_id":"9","comment":"//@Test\n","repo_name":"biojava-master/","id":3878,"method_signature":"void generateCodes()"}