{"callee_method_names":["BufferedReader.readLine","String.split","ArrayList<CompactCharSequence[]>.add","BufferedReader.readLine","BufferedReader.close","ArrayList<CompactCharSequence[]>.size","ArrayList<CompactCharSequence[]>.size","ArrayList<CompactCharSequence[]>.get","CompactCharSequence[].length","CompactCharSequence[].charAt","CompactCharSequence[].length","CompactCharSequence[].subSequence","CompactCharSequence[].length"],"method_name":"WorkSheet.getAllValuesCompactCharSequence","method_implementation":"{\n    // FileReader reader = new FileReader(fileName);\n    BufferedReader br = new BufferedReader(new InputStreamReader(is));\n    ArrayList<CompactCharSequence[]> rows = new ArrayList<CompactCharSequence[]>();\n    String line = br.readLine();\n    int numcolumns = -1;\n    while (line != null) {\n        String[] d = line.split(String.valueOf(delimiter));\n        if (numcolumns == -1) {\n            numcolumns = d.length;\n        }\n        CompactCharSequence[] ccs = new CompactCharSequence[d.length];\n        for (int i = 0; i < d.length; i++) {\n            ccs[i] = new CompactCharSequence(d[i]);\n        }\n        rows.add(ccs);\n        line = br.readLine();\n    }\n    br.close();\n    // reader.close();\n    CompactCharSequence[][] data = new CompactCharSequence[rows.size()][numcolumns];\n    for (int i = 0; i < rows.size(); i++) {\n        CompactCharSequence[] row = rows.get(i);\n        for (int j = 0; j < row.length; j++) {\n            //\n            if (row[j].length() > 1 && row[j].charAt(0) == '\"') {\n                // System.out.println(row[j]);\n                if (row[j].length() > 2) {\n                    row[j] = new CompactCharSequence(row[j].subSequence(1, row[j].length() - 1).toString());\n                } else {\n                    row[j] = new CompactCharSequence(\"\");\n                }\n            }\n            if (j < row.length && j < data[0].length) {\n                data[i][j] = row[j];\n            }\n        }\n    }\n    return data;\n}","repo_id":"9","comment":"/**\n * All support for loading from a jar file\n *\n * @param is\n * @param delimiter\n * @return\n * @throws Exception\n */\n","repo_name":"biojava-master/","id":3761,"method_signature":"CompactCharSequence[][] getAllValuesCompactCharSequence(InputStream, char)"}