{"callee_method_names":["UserConfiguration.getCacheFilePath","File.exists","File.length","Logger.info","int.getMessage"],"method_name":"SiftsChainToUniprotMapping.load","method_implementation":"{\n    UserConfiguration config = new UserConfiguration();\n    File cacheDir = new File(config.getCacheFilePath());\n    DEFAULT_FILE = new File(cacheDir, DEFAULT_FILENAME);\n    if (!DEFAULT_FILE.exists() || DEFAULT_FILE.length() == 0) {\n        if (useOnlyLocal)\n            throw new IOException(DEFAULT_FILE + \" does not exist, and did not download\");\n        download();\n    }\n    try {\n        return build();\n    } catch (IOException e) {\n        logger.info(\"Caught IOException while reading {}. Error: {}\", DEFAULT_FILE, e.getMessage());\n        if (useOnlyLocal)\n            throw new IOException(DEFAULT_FILE + \" could not be read, and did not redownload\");\n        download();\n        return build();\n    }\n}","repo_id":"9","comment":"/**\n * Loads the SIFTS mapping.\n * Attempts to load the mapping file in the PDB cache directory.\n * If the file does not exist or could not be parsed, downloads and stores a GZ-compressed file.\n * @param useOnlyLocal If true, will throw an IOException if the file needs to be downloaded\n * @return\n * @throws IOException If the local file could not be read and could not be downloaded (including if onlyLocal is true)\n */\n","repo_name":"biojava-master/","id":1110,"method_signature":"SiftsChainToUniprotMapping load(boolean)"}