{"callee_method_names":["Atom.setPDBserial","Atom.setName","String.trim","Atom.setElement","Atom.setAltLoc","Atom.setAltLoc","Atom.setX","Atom.setY","Atom.setZ","Atom.setOccupancy","Atom.setTempFactor","Atom.setCharge","Group.addAtom","Group.setChain","Group.addAtom","Group.hasAtom","Atom.getName","Group.getPDBName","Atom.getGroup","Group.addAtom","List<Atom>.add"],"method_name":"MmtfStructureReader.setAtomInfo","method_implementation":"{\n    Atom atom = new AtomImpl();\n    Group altGroup = null;\n    atom.setPDBserial(serialNumber);\n    atom.setName(atomName.trim());\n    atom.setElement(Element.valueOfIgnoreCase(element));\n    if (alternativeLocationId == MmtfStructure.UNAVAILABLE_CHAR_VALUE) {\n        alternativeLocationId = ' ';\n    }\n    if (alternativeLocationId != ' ') {\n        // Get the altGroup\n        altGroup = getCorrectAltLocGroup(alternativeLocationId);\n        atom.setAltLoc(alternativeLocationId);\n    } else {\n        atom.setAltLoc(Character.valueOf(' '));\n    }\n    atom.setX(x);\n    atom.setY(y);\n    atom.setZ(z);\n    atom.setOccupancy(occupancy);\n    atom.setTempFactor(temperatureFactor);\n    atom.setCharge((short) charge);\n    if (altGroup == null) {\n        group.addAtom(atom);\n    } else {\n        altGroup.setChain(chain);\n        altGroup.addAtom(atom);\n    }\n    // IF the main group doesn't have this atom\n    if (!group.hasAtom(atom.getName())) {\n        // If it's not a microheterogenity case\n        if (group.getPDBName().equals(atom.getGroup().getPDBName())) {\n            // And it's not a deuterated case.  'nanoheterogenity'\n            if (!StructureTools.hasNonDeuteratedEquiv(atom, group)) {\n                group.addAtom(atom);\n            }\n        }\n    }\n    atomsInGroup.add(atom);\n    allAtoms[atomCounter] = atom;\n    atomCounter++;\n}","repo_id":"9","comment":"/* (non-Javadoc)\n\t * @see org.rcsb.mmtf.decoder.StructureDecoderInterface#\n\t * setAtomInfo(java.lang.String, int, char, float, float,\n\t * float, float, float, java.lang.String, int)\n\t */\n","repo_name":"biojava-master/","id":1266,"method_signature":"void setAtomInfo(String, int, char, float, float, float, float, float, String, int)"}