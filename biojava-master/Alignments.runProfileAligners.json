{"callee_method_names":["List<ProfileProfileAligner<S,C>>.size","List<Future<ProfilePair<S, C>>>.add"],"method_name":"Alignments.runProfileAligners","method_implementation":"{\n    int n = 1, all = aligners.size();\n    List<Future<ProfilePair<S, C>>> futures = new ArrayList<Future<ProfilePair<S, C>>>();\n    for (ProfileProfileAligner<S, C> aligner : aligners) {\n        futures.add(ConcurrencyTools.submit(new CallableProfileProfileAligner<S, C>(aligner), String.format(\"Aligning pair %d of %d\", n++, all)));\n    }\n    return getListFromFutures(futures);\n}","repo_id":"9","comment":"/**\n * Factory method to run a list of alignments concurrently.  This method runs the alignments in parallel by\n * submitting all of the alignment tasks to the shared thread pool of the {@link ConcurrencyTools} utility.\n *\n * @param <S> each {@link Sequence} of the {@link Profile} pair is of type S\n * @param <C> each element of an {@link AlignedSequence} is a {@link Compound} of type C\n * @param aligners list of alignments to run\n * @return list of {@link ProfilePair} results from running alignments\n */\n","repo_name":"biojava-master/","id":54,"method_signature":"List<ProfilePair<S,C>> runProfileAligners(List)"}