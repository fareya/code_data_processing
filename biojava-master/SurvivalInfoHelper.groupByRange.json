{"callee_method_ids":[3650,3650,3649,3649],"callee_method_names":["ArrayList<String>.add","ArrayList<String>.add","SurvivalInfo.getContinuousVariable","SurvivalInfo.toString","ArrayList<String>.get","ArrayList<String>.contains","ArrayList<String>.add","SurvivalInfo.getContinuousVariable","SurvivalInfo.toString","ArrayList<String>.get","SurvivalInfo.addContinuousVariable","SurvivalInfo.addContinuousVariable"],"method_name":"SurvivalInfoHelper.groupByRange","method_implementation":"{\n    ArrayList<String> labels = new ArrayList<String>();\n    for (int i = 0; i < range.length; i++) {\n        String label = \"\";\n        if (i == 0) {\n            label = \"[<=\" + range[i] + \"]\";\n        } else if (i == range.length - 1) {\n            label = \"[\" + (range[i - 1] + 1) + \"-\" + range[i] + \"]\";\n            labels.add(label);\n            label = \"[>\" + range[i] + \"]\";\n        } else {\n            label = \"[\" + (range[i - 1] + 1) + \"-\" + range[i] + \"]\";\n        }\n        labels.add(label);\n    }\n    ArrayList<String> validLabels = new ArrayList<String>();\n    //need to find the categories so we can set 1 and 0 and not include ranges with no values\n    for (SurvivalInfo si : survivalInfoList) {\n        Double value = si.getContinuousVariable(variable);\n        if (value == null) {\n            throw new Exception(\"Variable \" + variable + \" not found in \" + si.toString());\n        }\n        int rangeIndex = getRangeIndex(range, value);\n        String label = labels.get(rangeIndex);\n        if (!validLabels.contains(groupName + \"_\" + label)) {\n            validLabels.add(groupName + \"_\" + label);\n        }\n    }\n    Collections.sort(validLabels);\n    System.out.println(\"Valid Lables:\" + validLabels);\n    for (SurvivalInfo si : survivalInfoList) {\n        Double value = si.getContinuousVariable(variable);\n        if (value == null) {\n            throw new Exception(\"Variable \" + variable + \" not found in \" + si.toString());\n        }\n        int rangeIndex = getRangeIndex(range, value);\n        String label = labels.get(rangeIndex);\n        String inLable = groupName + \"_\" + label;\n        for (String gl : validLabels) {\n            if (gl.equals(inLable)) {\n                si.addContinuousVariable(gl, 1.0);\n            } else {\n                si.addContinuousVariable(gl, 0.0);\n            }\n        }\n    }\n}","repo_id":"9","comment":"/**\n * Need to allow a range of values similar to cut in R and a continuous c\n *\n * @param range\n * @param variable\n * @param groupName\n * @param survivalInfoList\n * @throws Exception\n */\n","repo_name":"biojava-master/","id":3689,"method_signature":"void groupByRange(double[], String, String, ArrayList)"}