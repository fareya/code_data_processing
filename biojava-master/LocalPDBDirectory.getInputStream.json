{"callee_method_ids":[2626],"callee_method_names":["File.exists","InputStreamProvider.getInputStream"],"method_name":"LocalPDBDirectory.getInputStream","method_implementation":"{\n    // Check existing\n    File file = downloadStructure(pdbId);\n    if (!file.exists()) {\n        throw new IOException(\"Structure \" + pdbId + \" not found and unable to download.\");\n    }\n    if (!FileDownloadUtils.validateFile(file))\n        throw new IOException(\"Downloaded file invalid: \" + file);\n    InputStreamProvider isp = new InputStreamProvider();\n    InputStream inputStream = isp.getInputStream(file);\n    return inputStream;\n}","repo_id":"9","comment":"/**\n * Load or download the specified structure and return it as an InputStream\n * for direct parsing.\n * @param pdbId\n * @return\n * @throws IOException in cases of file I/O, including failure to download a healthy (non-corrupted) file.\n */\n","repo_name":"biojava-master/","id":1132,"method_signature":"InputStream getInputStream(PdbId)"}