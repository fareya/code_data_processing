{"callee_method_names":["Matrix4d.set"],"method_name":"TestUnitQuaternions.testRelativeOrientation","method_implementation":"{\n    // Get points from a structure.\n    Structure pdb = StructureIO.getStructure(\"4hhb.A\");\n    Point3d[] cloud = Calc.atomsToPoints(StructureTools.getRepresentativeAtomArray(pdb));\n    Point3d[] cloud2 = CalcPoint.clonePoint3dArray(cloud);\n    // Test orientation angle equal to 0 at this point\n    double angle = UnitQuaternions.orientationAngle(cloud, cloud2, false);\n    assertEquals(angle, 0, 0.001);\n    // Apply a 30 degree rotation to cloud\n    AxisAngle4d axis = new AxisAngle4d(new Vector3d(1, 1, 1), Math.PI / 6);\n    Matrix4d transform = new Matrix4d();\n    transform.set(axis);\n    CalcPoint.transform(transform, cloud);\n    angle = UnitQuaternions.orientationAngle(cloud, cloud2, false);\n    angle = Math.min(Math.abs(2 * Math.PI - angle), angle);\n    // Test that angle was recovered\n    assertEquals(angle, Math.PI / 6, 0.001);\n}","repo_id":"9","comment":"/**\n * Test {@link UnitQuaternions#relativeOrientation(Point3d[], Point3d[])} on\n * a real structure. Test recovering of the angle applied.\n *\n * @throws StructureException\n * @throws IOException\n */\n","repo_name":"biojava-master/","id":2313,"method_signature":"void testRelativeOrientation()"}