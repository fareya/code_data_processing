{"callee_method_ids":[1410],"callee_method_names":["PDBCrystallographicInfo.getCrystalCell","CrystalCell.getA","CrystalCell.getB","CrystalCell.getC","CrystalCell.getAlpha","CrystalCell.getBeta","CrystalCell.getGamma"],"method_name":"MmtfUtils.getUnitCellAsArray","method_implementation":"{\n    CrystalCell xtalCell = xtalInfo.getCrystalCell();\n    if (xtalCell == null) {\n        return null;\n    } else {\n        float[] inputUnitCell = new float[6];\n        inputUnitCell[0] = (float) xtalCell.getA();\n        inputUnitCell[1] = (float) xtalCell.getB();\n        inputUnitCell[2] = (float) xtalCell.getC();\n        inputUnitCell[3] = (float) xtalCell.getAlpha();\n        inputUnitCell[4] = (float) xtalCell.getBeta();\n        inputUnitCell[5] = (float) xtalCell.getGamma();\n        return inputUnitCell;\n    }\n}","repo_id":"9","comment":"/**\n * Get the length six array of the unit cell information.\n * @param xtalInfo the input PDBCrystallographicInfo object\n * @return the length six float array\n */\n","repo_name":"biojava-master/","id":1245,"method_signature":"float[] getUnitCellAsArray(PDBCrystallographicInfo)"}