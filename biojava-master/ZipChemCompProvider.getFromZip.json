{"callee_method_names":["Path.toFile","Logger.debug","ChemicalComponentDictionary.getChemComp","Logger.error","int.getMessage"],"method_name":"ZipChemCompProvider.getFromZip","method_implementation":"{\n    ChemComp cc = null;\n    if (!m_zipFile.toFile().exists())\n        return cc;\n    final String filename = \"chemcomp/\" + recordName + \".cif.gz\";\n    // try with resources block to read from the filesystem.\n    // Don't remove the (ClassLoader) cast! It is required for openjdk 11.\n    try (FileSystem fs = FileSystems.newFileSystem(m_zipFile, (ClassLoader) null)) {\n        Path cif = fs.getPath(filename);\n        if (Files.exists(cif)) {\n            s_logger.debug(\"reading {} from {}\", recordName, m_zipFile);\n            final ChemicalComponentDictionary dict = ChemCompConverter.fromPath(cif);\n            cc = dict.getChemComp(recordName);\n        }\n    } catch (IOException e) {\n        s_logger.error(\"Unable to read from zip file : {}\", e.getMessage());\n    }\n    return cc;\n}","repo_id":"9","comment":"/**\n * This is synchronized, along with addToFileSystem to prevent simulatenous reading/writing.\n * @param recordName to find in zipfile.\n * @return ChemComp if found or null if missing.\n */\n","repo_name":"biojava-master/","id":1080,"method_signature":"ChemComp getFromZip(String)"}