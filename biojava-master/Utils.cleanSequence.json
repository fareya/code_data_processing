{"callee_method_names":["String.toCharArray","Set<Character>.contains","StringBuilder.append","Set<Character>.add","StringBuilder.append","StringBuilder.append","StringBuilder.deleteCharAt","StringBuilder.length","StringBuilder.append","Logger.warn","StringBuilder.toString","StringBuilder.toString"],"method_name":"Utils.cleanSequence","method_implementation":"{\n    Set<Character> invalidCharSet = new HashSet<Character>();\n    StringBuilder cleanSeq = new StringBuilder();\n    if (cSet == null)\n        cSet = PeptideProperties.standardAASet;\n    for (char c : sequence.toCharArray()) {\n        if (!cSet.contains(c)) {\n            cleanSeq.append(\"-\");\n            invalidCharSet.add(c);\n        } else {\n            cleanSeq.append(c);\n        }\n    }\n    // TODO: Should be StringJoiner once JDK8 used\n    StringBuilder stringBuilder = new StringBuilder();\n    for (char c : invalidCharSet) {\n        stringBuilder.append(\"\\'\" + c + \"\\'\");\n    }\n    stringBuilder.deleteCharAt(stringBuilder.length() - 1);\n    stringBuilder.append(\" are being replaced with '-'\");\n    logger.warn(stringBuilder.toString());\n    return cleanSeq.toString();\n}","repo_id":"9","comment":"/**\n * Returns a new sequence with all invalid characters being replaced by '-'.\n * Note that any character outside of the 20 standard protein amino acid codes are considered as invalid.\n *\n * @param sequence\n * \t\tprotein sequence to be clean\n * @param cSet\n * \t\tuser defined characters that are valid. Can be null. If null, then 20 standard protein amino acid codes will be considered as valid.\n * @return\n * \t\ta new sequence with all invalid characters being replaced by '-'.\n */\n","repo_name":"biojava-master/","id":3842,"method_signature":"String cleanSequence(String, Set)"}