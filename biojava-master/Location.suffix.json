{"callee_method_names":[],"method_name":"Location.suffix","method_implementation":"{\n    if (isSameStrand(other)) {\n        if (other.mEnd <= mEnd) {\n            return new Location((other.mEnd > mStart) ? other.mEnd : mStart, mEnd);\n        } else {\n            //other is out of bounds -- no suffix\n            throw new IndexOutOfBoundsException(\"Specified location not within this location.\");\n        }\n    } else {\n        throw new IllegalArgumentException(\"Locations are on opposite strands.\");\n    }\n}","repo_id":"9","comment":"/**\n * The part of this location after the other location (not inclusive).\n *\n * @param other The other location.\n * @return The part of this location after the other location.\n * @throws IllegalArgumentException Locations are on opposite strands.\n * @throws IndexOutOfBoundsException This location does not contain other location.\n */\n","repo_name":"biojava-master/","id":2408,"method_signature":"Location suffix(Location)"}