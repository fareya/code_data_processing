{"callee_method_names":["Matrix4d.set","Matrix4d.setTranslation","Random.nextInt","Random.nextInt","Random.nextInt","Random.nextDouble","Random.nextDouble","Random.nextDouble","List<Point3d[]>.add","List<Point3d[]>.add","Logger.debug","Logger.debug"],"method_name":"TestSuperPosition.setUp","method_implementation":"{\n    cloud1 = new ArrayList<Point3d[]>(5);\n    cloud2 = new ArrayList<Point3d[]>(5);\n    Random rnd = new Random(0);\n    transform = new Matrix4d();\n    transform.set(rotAxis);\n    transform.setTranslation(translation);\n    List<Integer> sizes = Arrays.asList(5, 50, 500, 5000, 50000, 500000);\n    for (Integer size : sizes) {\n        Point3d[] c1 = new Point3d[size];\n        Point3d[] c2 = new Point3d[size];\n        for (int p = 0; p < size; p++) {\n            Point3d a = new Point3d(rnd.nextInt(100), rnd.nextInt(50), rnd.nextInt(150));\n            c1[p] = a;\n            // Add some noise\n            Point3d b = new Point3d(a.x + rnd.nextDouble(), a.y + rnd.nextDouble(), a.z + rnd.nextDouble());\n            c2[p] = b;\n        }\n        CalcPoint.center(c1);\n        CalcPoint.center(c2);\n        CalcPoint.transform(transform, c1);\n        cloud1.add(c1);\n        cloud2.add(c2);\n        Point3d centroid1 = CalcPoint.centroid(c1);\n        Point3d centroid2 = CalcPoint.centroid(c2);\n        LOGGER.debug(\"Centroid c1 (size %d): (%.2f, %.2f, %.2f)\\n\", size, centroid1.x, centroid1.y, centroid1.z);\n        LOGGER.debug(\"Centroid c2 (size %d): (%.2f, %.2f, %.2f)\\n\", size, centroid2.x, centroid2.y, centroid2.z);\n    }\n}","repo_id":"9","comment":"/**\n * Generate two clouds of random points of different sizes to test\n * correctness and performance of superposition algorithms.\n *\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":2305,"method_signature":"void setUp()"}