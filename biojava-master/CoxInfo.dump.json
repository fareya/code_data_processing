{"callee_method_ids":[3531,3539],"callee_method_names":["LinkedHashMap.values","CoxCoefficient.getCoeff","LinkedHashMap.values","CoxCoefficient.getMean"],"method_name":"CoxInfo.dump","method_implementation":"{\n    //need an ordered list for comparing to R dumps\n    //        ArrayList<SurvivalInfo> orderedSurvivalInfoList = new ArrayList<SurvivalInfo>(survivalInfoList);\n    //        SurvivalInfoComparator sicSort = new SurvivalInfoComparator();\n    //       Collections.sort(orderedSurvivalInfoList,sicSort);\n    System.out.println();\n    System.out.println(\"$coef\");\n    for (CoxCoefficient coe : coefficientsList.values()) {\n        System.out.print(coe.getCoeff() + \" \");\n    }\n    System.out.println();\n    System.out.println(\"$means\");\n    for (CoxCoefficient coe : coefficientsList.values()) {\n        System.out.print(coe.getMean() + \" \");\n    }\n    System.out.println();\n    System.out.println(\"$u\");\n    for (double d : u) {\n        System.out.print(d + \" \");\n    }\n    System.out.println();\n    System.out.println(\"$imat\");\n    for (int i = 0; i < imat.length; i++) {\n        for (int j = 0; j < imat[0].length; j++) {\n            System.out.print(imat[i][j] + \" \");\n        }\n        System.out.println();\n    }\n    if (this.naive_imat != null) {\n        System.out.println(\"$naive_imat\");\n        for (int i = 0; i < naive_imat.length; i++) {\n            for (int j = 0; j < naive_imat[0].length; j++) {\n                System.out.print(naive_imat[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n    System.out.println();\n    System.out.println(\"$loglik\");\n    System.out.println(loglikInit + \" \" + loglikFinal);\n    System.out.println();\n    System.out.println(\"$sctest\");\n    System.out.println(this.scoreLogrankTest);\n    System.out.println(\"$iter\");\n    System.out.println(this.iterations);\n    System.out.println(\"$flag\");\n    System.out.println(flag);\n    System.out.println();\n    //        if (false) {\n    //            System.out.println(\"ID      LP       Score      Residuals\");\n    //            for (SurvivalInfo si : orderedSurvivalInfoList) {\n    //                System.out.println(si.getOrder() + \" \" + si.getLinearPredictor() + \" \" + si.getScore() + \" \" + si.getResidual());\n    //\n    //            }\n    //            System.out.println();\n    //            ArrayList<String> variables = new ArrayList<String>(coefficientsList.keySet());\n    //            System.out.print(\"Sample\");\n    //            for (String v : variables) {\n    //                System.out.print(\"    \" + v);\n    //            }\n    //            System.out.println(\"rr\");\n    //            for (SurvivalInfo si : orderedSurvivalInfoList) {\n    //                System.out.print(si.getOrder());\n    //                for (String v : variables) {\n    //                    System.out.print(\"   \" + si.getResidualVariable(v));\n    //                }\n    //                System.out.println();\n    //            }\n    //        }\n}","repo_id":"9","comment":"/**\n */\n","repo_name":"biojava-master/","id":3620,"method_signature":"void dump()"}