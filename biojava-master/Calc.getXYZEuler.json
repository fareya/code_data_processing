{"callee_method_names":["Matrix.get","Matrix.get","Matrix.get","Matrix.get","Matrix.get","Matrix.get","Matrix.get","Matrix.get","Matrix.get","Matrix.get","Matrix.get"],"method_name":"Calc.getXYZEuler","method_implementation":"{\n    double heading, attitude, bank;\n    // Assuming the angles are in radians.\n    if (m.get(1, 0) > 0.998) {\n        // singularity at north pole\n        heading = Math.atan2(m.get(0, 2), m.get(2, 2));\n        attitude = Math.PI / 2;\n        bank = 0;\n    } else if (m.get(1, 0) < -0.998) {\n        // singularity at south pole\n        heading = Math.atan2(m.get(0, 2), m.get(2, 2));\n        attitude = -Math.PI / 2;\n        bank = 0;\n    } else {\n        heading = Math.atan2(-m.get(2, 0), m.get(0, 0));\n        bank = Math.atan2(-m.get(1, 2), m.get(1, 1));\n        attitude = Math.asin(m.get(1, 0));\n    }\n    return new double[] { heading, attitude, bank };\n}","repo_id":"9","comment":"/**\n * Convert a rotation Matrix to Euler angles. This conversion uses\n * conventions as described on page:\n *   http://www.euclideanspace.com/maths/geometry/rotations/euler/index.htm\n * Coordinate System: right hand Positive angle: right hand Order of euler\n * angles: heading first, then attitude, then bank\n *\n * @param m\n *            the rotation matrix\n * @return a array of three doubles containing the three euler angles in\n *         radians\n */\n","repo_name":"biojava-master/","id":387,"method_signature":"double[] getXYZEuler(Matrix)"}