{"callee_method_ids":[1317],"callee_method_names":["FileParsingParameters.isHeaderOnly","String.length","Logger.info","String.length","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","List<LinkRecord>.add"],"method_name":"PDBFileParser.pdb_LINK_Handler","method_implementation":"{\n    if (params.isHeaderOnly())\n        return;\n    // Check for the minimal set of fields.\n    if (line.length() < 56) {\n        logger.info(\"LINK line has length under 56. Ignoring it.\");\n        return;\n    }\n    int len = line.length();\n    String name1 = line.substring(12, 16).trim();\n    String altLoc1 = line.substring(16, 17).trim();\n    String resName1 = line.substring(17, 20).trim();\n    String chainID1 = line.substring(21, 22).trim();\n    String resSeq1 = line.substring(22, 26).trim();\n    String iCode1 = line.substring(26, 27).trim();\n    String name2 = line.substring(42, 46).trim();\n    String altLoc2 = line.substring(46, 47).trim();\n    String resName2 = line.substring(47, 50).trim();\n    String chainID2 = line.substring(51, 52).trim();\n    String resSeq2 = line.substring(52, 56).trim();\n    // Might get trimmed if blank.\n    String iCode2 = null;\n    if (len > 56)\n        iCode2 = line.substring(56, 57).trim();\n    String sym1 = null;\n    if (len > 64)\n        sym1 = line.substring(59, 65).trim();\n    String sym2 = null;\n    if (len > 71)\n        sym2 = line.substring(66, 72).trim();\n    linkRecords.add(new LinkRecord(name1, altLoc1, resName1, chainID1, resSeq1, iCode1, name2, altLoc2, resName2, chainID2, resSeq2, iCode2, sym1, sym2));\n}","repo_id":"9","comment":"/**\n * Takes care of LINK records. These take the format of:\n *\n * <pre>\n * COLUMNS        DATA TYPE       FIELD       DEFINITION\n * --------------------------------------------------------------------------------\n *  1 -  6        Record name     \"LINK  \"\n * 13 - 16        Atom            name1       Atom name.\n * 17             Character       altLoc1     Alternate location indicator.\n * 18 - 20        Residue name    resName1    Residue name.\n * 22             Character       chainID1    Chain identifier.\n * 23 - 26        Integer         resSeq1     Residue sequence number.\n * 27             AChar           iCode1      Insertion code.\n * 43 - 46        Atom            name2       Atom name.\n * 47             Character       altLoc2     Alternate location indicator.\n * 48 - 50        Residue name    resName2    Residue name.\n * 52             Character       chainID2    Chain identifier.\n * 53 - 56        Integer         resSeq2     Residue sequence number.\n * 57             AChar           iCode2      Insertion code.\n * 60 - 65        SymOP           sym1        Symmetry operator for 1st atom.\n * 67 - 72        SymOP           sym2        Symmetry operator for 2nd atom.\n * <\/pre>\n *\n * (From http://www.wwpdb.org/documentation/format32/sect6.html#LINK)\n *\n * @param line the LINK record line to parse.\n */\n","repo_name":"biojava-master/","id":1186,"method_signature":"void pdb_LINK_Handler(String)"}