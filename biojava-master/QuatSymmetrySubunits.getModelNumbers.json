{"callee_method_names":["List<SubunitCluster>.size","List<SubunitCluster>.get","List<SubunitCluster>.get","Atom[].getGroup","Chain.getStructure","Chain.getStructure","List<Integer>.add"],"method_name":"QuatSymmetrySubunits.getModelNumbers","method_implementation":"{\n    List<Integer> models = new ArrayList<Integer>(getSubunitCount());\n    // Loop through all subunits in the clusters and fill Lists\n    for (int c = 0; c < clusters.size(); c++) {\n        for (int s = 0; s < clusters.get(c).size(); s++) {\n            Atom[] atoms = clusters.get(c).getAlignedAtomsSubunit(s);\n            // TODO guess them chain and model (very ugly)\n            Chain chain = atoms[0].getGroup().getChain();\n            int model = 0;\n            for (int m = 0; m < chain.getStructure().nrModels(); m++) {\n                if (chain.getStructure().getModel(m).contains(chain)) {\n                    model = m;\n                    break;\n                }\n            }\n            models.add(model);\n        }\n    }\n    return models;\n}","repo_id":"9","comment":"/**\n * This method is provisional and should only be used for coloring Subunits.\n * A new coloring schema has to be implemented to allow the coloring of\n * Subunits, without implying one Subunit = one Chain.\n *\n * @return A List of the Model number of each Subunit\n */\n","repo_name":"biojava-master/","id":1885,"method_signature":"List<Integer> getModelNumbers()"}