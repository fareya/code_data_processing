{"callee_method_names":["String.length","String.length","String.charAt","String.charAt","String.length","String.length","String.substring"],"method_name":"BasePairParameters.longestCommonSubstring","method_implementation":"{\n    int start = 0;\n    int max = 0;\n    for (int i = 0; i < s1.length(); i++) {\n        for (int j = 0; j < s2.length(); j++) {\n            int x = 0;\n            while (s1.charAt(i + x) == s2.charAt(j + x)) {\n                x++;\n                if (((i + x) >= s1.length()) || ((j + x) >= s2.length()))\n                    break;\n            }\n            if (x > max) {\n                max = x;\n                start = i;\n            }\n        }\n    }\n    return s1.substring(start, (start + max));\n}","repo_id":"9","comment":"/**\n * This method finds the longest common substring between two strings. (used internally)\n * @param s1 The first string\n * @param s2 The second string\n * @return The substring itself\n */\n","repo_name":"biojava-master/","id":1744,"method_signature":"String longestCommonSubstring(String, String)"}