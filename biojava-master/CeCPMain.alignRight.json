{"callee_method_names":["AFPChain.setName2","Atom[].getGroup"],"method_name":"CeCPMain.alignRight","method_implementation":"{\n    long startTime = System.currentTimeMillis();\n    Atom[] ca2m = StructureTools.duplicateCA2(ca2);\n    if (debug) {\n        System.out.format(\"Duplicating ca2 took %s ms\\n\", System.currentTimeMillis() - startTime);\n        startTime = System.currentTimeMillis();\n    }\n    // Do alignment\n    AFPChain afpChain = super.align(ca1, ca2m, params);\n    // since the process of creating ca2m strips the name info away, set it explicitely\n    try {\n        afpChain.setName2(ca2[0].getGroup().getChain().getStructure().getName());\n    } catch (Exception e) {\n    }\n    if (debug) {\n        System.out.format(\"Running %dx2*%d alignment took %s ms\\n\", ca1.length, ca2.length, System.currentTimeMillis() - startTime);\n        startTime = System.currentTimeMillis();\n    }\n    afpChain = postProcessAlignment(afpChain, ca1, ca2m, calculator, cpparams);\n    if (debug) {\n        System.out.format(\"Finding CP point took %s ms\\n\", System.currentTimeMillis() - startTime);\n        startTime = System.currentTimeMillis();\n    }\n    return afpChain;\n}","repo_id":"9","comment":"/**\n * Aligns the structures, duplicating ca2 regardless of\n * {@link CECPParameters.getDuplicationHint() param.getDuplicationHint}.\n * @param ca1\n * @param ca2\n * @param cpparams\n * @return\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":774,"method_signature":"AFPChain alignRight(Atom[], Atom[], CECPParameters)"}