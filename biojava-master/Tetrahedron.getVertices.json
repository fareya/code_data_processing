{"callee_method_names":["Matrix3d.rotX","Vector3d.sub","Matrix3d.transform"],"method_name":"Tetrahedron.getVertices","method_implementation":"{\n    double x = getSideLengthFromCircumscribedRadius(circumscribedRadius) / 2;\n    double z = x / Math.sqrt(2);\n    Point3d[] tetrahedron = new Point3d[4];\n    tetrahedron[0] = new Point3d(-x, 0, -z);\n    tetrahedron[1] = new Point3d(x, 0, -z);\n    tetrahedron[2] = new Point3d(0, -x, z);\n    tetrahedron[3] = new Point3d(0, x, z);\n    Point3d centroid = CalcPoint.centroid(tetrahedron);\n    // rotate tetrahedron to align one vertex with the +z axis\n    Matrix3d m = new Matrix3d();\n    m.rotX(0.5 * TETRAHEDRAL_ANGLE);\n    for (Point3d p : tetrahedron) {\n        p.sub(centroid);\n        m.transform(p);\n    }\n    return tetrahedron;\n}","repo_id":"9","comment":"/**\n * Returns the vertices of an n-fold polygon of given radius and center\n * @param n\n * @param radius\n * @param center\n * @return\n */\n","repo_name":"biojava-master/","id":2013,"method_signature":"Point3d[] getVertices()"}