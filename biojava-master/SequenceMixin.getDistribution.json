{"callee_method_names":["Sequence<C>.getLength","Map<C, Integer>.entrySet","Map.Entry<String, ProteinSequence>.getValue","Map<C, Double>.put","Map.Entry<String, ProteinSequence>.getKey"],"method_name":"SequenceMixin.getDistribution","method_implementation":"{\n    Map<C, Double> results = new HashMap<C, Double>();\n    Map<C, Integer> composition = getComposition(sequence);\n    double length = sequence.getLength();\n    for (Map.Entry<C, Integer> entry : composition.entrySet()) {\n        double dist = entry.getValue().doubleValue() / length;\n        results.put(entry.getKey(), dist);\n    }\n    return results;\n}","repo_id":"9","comment":"/**\n * Analogous to {@link #getComposition(Sequence)} but returns the\n * distribution of that {@link Compound} over the given sequence.\n *\n * @param <C> The type of compound to look for\n * @param sequence The type of sequence to look over\n * @return Returns the decimal fraction of the compounds in the given\n * sequence. Any compound not in the Map will return a fraction of 0.\n */\n","repo_name":"biojava-master/","id":2881,"method_signature":"Map<C,Double> getDistribution(Sequence)"}