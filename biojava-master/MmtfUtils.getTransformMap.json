{"callee_method_ids":[977,959,957,957],"callee_method_names":["BioAssemblyInfo.getTransforms","BiologicalAssemblyTransformation.getTransformationMatrix","BiologicalAssemblyTransformation.getChainId","Map<String,Integer>.containsKey","Map<String,Integer>.get","BiologicalAssemblyTransformation.getChainId","Map<Matrix4d, List<Integer>>.containsKey","Map<Matrix4d, List<Integer>>.get","List<Integer>.add","Map<Matrix4d, List<Integer>>.put","Map<Matrix4d, List<Integer>>.entrySet","Map<double[], int[]>.put","SiftsChainEntry.getKey","SiftsChainEntry.getValue"],"method_name":"MmtfUtils.getTransformMap","method_implementation":"{\n    Map<Matrix4d, List<Integer>> matMap = new LinkedHashMap<>();\n    List<BiologicalAssemblyTransformation> transforms = bioassemblyInfo.getTransforms();\n    for (BiologicalAssemblyTransformation transformation : transforms) {\n        Matrix4d transMatrix = transformation.getTransformationMatrix();\n        String transChainId = transformation.getChainId();\n        if (!chainIdToIndexMap.containsKey(transChainId)) {\n            continue;\n        }\n        int chainIndex = chainIdToIndexMap.get(transformation.getChainId());\n        if (matMap.containsKey(transMatrix)) {\n            matMap.get(transMatrix).add(chainIndex);\n        } else {\n            List<Integer> chainIdList = new ArrayList<>();\n            chainIdList.add(chainIndex);\n            matMap.put(transMatrix, chainIdList);\n        }\n    }\n    Map<double[], int[]> outMap = new LinkedHashMap<>();\n    for (Entry<Matrix4d, List<Integer>> entry : matMap.entrySet()) {\n        outMap.put(convertToDoubleArray(entry.getKey()), CodecUtils.convertToIntArray(entry.getValue()));\n    }\n    return outMap;\n}","repo_id":"9","comment":"/**\n * Convert a bioassembly information into a map of transform, chainindices it relates to.\n * @param bioassemblyInfo  the bioassembly info object for this structure\n * @param chainIdToIndexMap the map of chain ids to the index that chain corresponds to.\n * @return the bioassembly information (as primitive types).\n */\n","repo_name":"biojava-master/","id":1248,"method_signature":"Map<double[],int[]> getTransformMap(BioAssemblyInfo, Map)"}