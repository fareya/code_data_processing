{"callee_method_names":["Matrix.getRowDimension","Matrix.getColumnDimension","Matrix.get","ContinuousColorMapper.getColor","Graphics2D.setColor","Graphics2D.fillRect"],"method_name":"JMatrixPanel.drawDistances","method_implementation":"{\n    Graphics2D g = (Graphics2D) g1;\n    int c = matrix.getRowDimension();\n    int d = matrix.getColumnDimension();\n    float scale = getScale();\n    int width = Math.round(scale);\n    for (int i = 0; i < c; i++) {\n        int ipaint = Math.round(i * scale);\n        for (int j = 0; j < d; j++) {\n            double val = matrix.get(i, j);\n            int jpaint = Math.round(j * scale);\n            Color color = cellColor.getColor(val);\n            g.setColor(color);\n            g.fillRect(ipaint, jpaint, width, width);\n        }\n    }\n}","repo_id":"9","comment":"/**\n * For each element in matrix, draw it as a colored square or pixel.\n *\n * The color of a matrix element with value x is specified as\n *   - H: 1-x/scalevalue\n *   - S: saturation\n *   - B: 1-x/scalevalue\n * @param g1\n */\n","repo_name":"biojava-master/","id":3314,"method_signature":"void drawDistances(Graphics)"}