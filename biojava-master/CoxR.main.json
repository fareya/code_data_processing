{"callee_method_ids":[3756,3740,3740,3740,3740,3672,3649,3649,3563],"callee_method_names":["CoxR.getClass","WorkSheet.getRows","WorkSheet.getCellDouble","WorkSheet.getCellDouble","WorkSheet.getCellDouble","WorkSheet.getCellDouble","SurvivalInfo.setOrder","SurvivalInfo.addContinuousVariable","SurvivalInfo.addContinuousVariable","ArrayList<SurvivalInfo>.add","ArrayList<String>.add","ArrayList<String>.add","CoxR.process","MouseEvent.printStackTrace"],"method_name":"CoxR.main","method_implementation":"{\n    // TODO code application logic here\n    CoxR coxr = new CoxR();\n    if (true) {\n        try {\n            InputStream is = coxr.getClass().getClassLoader().getResourceAsStream(\"uis-complete.txt\");\n            WorkSheet worksheet = WorkSheet.readCSV(is, '\\t');\n            ArrayList<SurvivalInfo> survivalInfoList = new ArrayList<SurvivalInfo>();\n            int i = 0;\n            for (String row : worksheet.getRows()) {\n                double time = worksheet.getCellDouble(row, \"TIME\");\n                double age = worksheet.getCellDouble(row, \"AGE\");\n                double treat = worksheet.getCellDouble(row, \"TREAT\");\n                double c = worksheet.getCellDouble(row, \"CENSOR\");\n                int censor = (int) c;\n                SurvivalInfo si = new SurvivalInfo(time, censor);\n                si.setOrder(i);\n                si.addContinuousVariable(\"AGE\", age);\n                si.addContinuousVariable(\"TREAT\", treat);\n                survivalInfoList.add(si);\n                i++;\n            }\n            CoxR cox = new CoxR();\n            ArrayList<String> variables = new ArrayList<String>();\n            //               variables.add(\"AGE\");\n            variables.add(\"AGE\");\n            variables.add(\"TREAT\");\n            //       variables.add(\"TREAT:AGE\");\n            //  ArrayList<Integer> cluster = new ArrayList<Integer>();\n            CoxInfo ci = cox.process(variables, survivalInfoList, false, true, false, false);\n            System.out.println(ci);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n    //        if (false) {\n    //\n    //            try {\n    //\n    //\n    //                WorkSheet worksheet = WorkSheet.readCSV(\"/Users/Scooter/NetBeansProjects/AssayWorkbench/src/edu/scripps/assayworkbench/cox/uis-complete.txt\", '\\t');\n    //                ArrayList<String> rows = worksheet.getRows();\n    //                ArrayList<String> variables = new ArrayList<String>();\n    //                variables.add(\"AGE\");\n    //                variables.add(\"TREAT\");\n    //                double[] time2 = new double[rows.size()];\n    //                int[] status2 = new int[rows.size()];\n    //                double[][] covar2 = new double[variables.size()][rows.size()];\n    //                double[] offset2 = new double[rows.size()];\n    //                double[] weights2 = new double[rows.size()];\n    //                int[] strata2 = new int[rows.size()];\n    //\n    //\n    //                for (int i = 0; i < rows.size(); i++) {\n    //                    String row = rows.get(i);\n    //                    double time = worksheet.getCellDouble(row, \"TIME\");\n    //                    //      double age = worksheet.getCellDouble(row, \"AGE\");\n    //                    //      double treat = worksheet.getCellDouble(row, \"TREAT\");\n    //                    double c = worksheet.getCellDouble(row, \"CENSOR\");\n    //                    int censor = (int) c;\n    //\n    //                    time2[i] = time;\n    //                    status2[i] = censor;\n    //                    offset2[i] = 0;\n    //                    weights2[i] = 1;\n    //                    strata2[i] = 0;\n    //\n    //                    for (int j = 0; j < variables.size(); j++) {\n    //                        String variable = variables.get(j);\n    //                        double v = worksheet.getCellDouble(row, variable);\n    //                        covar2[j][i] = v;\n    //                    }\n    //\n    //\n    //                }\n    //                //from coxph.control.S\n    //                int maxiter2 = 20;\n    //                double eps2 = 1e-9;\n    //                double toler2 = Math.pow(eps2, .75);\n    //                int doscale2 = 1;\n    //                int method2 = 0;\n    //                //toler.chol = eps ^ .75\n    //                //toler.inf=sqrt(eps)\n    //                //outer.max=10\n    //\n    //                CoxR cox = new CoxR();\n    //                //        cox.coxfit6(maxiter2, time2, status2, covar2, offset2, weights2, strata2, method2, eps2, toler2, time2, doscale2);\n    //\n    //\n    //\n    //\n    //\n    //            } catch (Exception e) {\n    //                e.printStackTrace();\n    //            }\n    //        }\n}","repo_id":"9","comment":"/**\n * @param args the command line arguments\n */\n","repo_name":"biojava-master/","id":3565,"method_signature":"void main(String[])"}