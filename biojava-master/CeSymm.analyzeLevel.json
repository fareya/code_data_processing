{"callee_method_ids":[2075],"callee_method_names":["CeSymmResult.isRefined","CeSymmResult.getParams","CeSymmResult.getMultipleAlignment","SymmOptimizer.optimize","CeSymmResult.setMultipleAlignment","Logger.debug","MultipleAlignmentEnsemble.getMessage"],"method_name":"CeSymm.analyzeLevel","method_implementation":"{\n    if (atoms.length < 1)\n        throw new IllegalArgumentException(\"Empty Atom array given.\");\n    CeSymmResult result = align(atoms, params);\n    if (result.isRefined()) {\n        // STEP 5: symmetry alignment optimization\n        if (result.getParams().getOptimization()) {\n            try {\n                MultipleAlignment msa = result.getMultipleAlignment();\n                SymmOptimizer optimizer = new SymmOptimizer(result);\n                msa = optimizer.optimize();\n                result.setMultipleAlignment(msa);\n            } catch (RefinerFailedException e) {\n                logger.debug(\"Optimization failed:{}\", e.getMessage());\n            }\n        }\n    }\n    return result;\n}","repo_id":"9","comment":"/**\n * Analyze a single level of symmetry.\n *\n * @param atoms\n *            Atom array of the current level\n * @return CeSymmResult\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":2074,"method_signature":"CeSymmResult analyzeLevel(Atom[], CESymmParameters)"}