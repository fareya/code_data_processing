{"callee_method_ids":[760],"callee_method_names":["CeParameters.getSubstitutionMatrix","ScaledSubstitutionMatrix.getScale","Matrix.getRowDimension","Matrix.getColumnDimension","Matrix.get","AminoAcidCompoundSet.getCompoundForString","Atom.getGroup","AminoAcidCompoundSet.getCompoundForString","Atom.getGroup","SubstitutionMatrix<AminoAcidCompound>.getValue","CeParameters.getSeqWeight","Matrix.set","Matrix.getArray"],"method_name":"CeCalculatorEnhanced.updateMatrixWithSequenceConservation","method_implementation":"{\n    Matrix origM = new Matrix(max);\n    SubstitutionMatrix<AminoAcidCompound> substMatrix = params.getSubstitutionMatrix();\n    int internalScale = 1;\n    if (substMatrix instanceof ScaledSubstitutionMatrix) {\n        ScaledSubstitutionMatrix scaledMatrix = (ScaledSubstitutionMatrix) substMatrix;\n        internalScale = scaledMatrix.getScale();\n    }\n    AminoAcidCompoundSet set = AminoAcidCompoundSet.getAminoAcidCompoundSet();\n    for (int i = 0; i < origM.getRowDimension(); i++) {\n        for (int j = 0; j < origM.getColumnDimension(); j++) {\n            double val = origM.get(i, j);\n            Atom a1 = ca1[i];\n            Atom a2 = ca2[j];\n            AminoAcidCompound ac1 = set.getCompoundForString(a1.getGroup().getChemComp().getOneLetterCode());\n            AminoAcidCompound ac2 = set.getCompoundForString(a2.getGroup().getChemComp().getOneLetterCode());\n            if (ac1 == null || ac2 == null)\n                continue;\n            short aaScore = substMatrix.getValue(ac1, ac2);\n            double weightedScore = (aaScore / internalScale) * params.getSeqWeight();\n            val += weightedScore;\n            origM.set(i, j, val);\n        }\n    }\n    max = origM.getArray();\n    //SymmetryTools.showMatrix((Matrix)origM.clone(), \"in optimizer \"  + loopCount  );\n    //SymmetryTools.showMatrix(origM, \"iteration  matrix \" + loopCount + \" after\");\n    return max;\n}","repo_id":"9","comment":"/**\n * Modifies an alignment matrix by favoring the alignment of similar and identical amino acids and penalizing the alignment of unrelated ones.\n *\n * @param max alignment matrix\n * @param ca1 Atoms for protein 1\n * @param ca2 Atoms for Protein 2\n * @param params alignment parameters\n * @return modified alignment matrix\n */\n","repo_name":"biojava-master/","id":736,"method_signature":"double[][] updateMatrixWithSequenceConservation(double[][], Atom[], Atom[], CeParameters)"}