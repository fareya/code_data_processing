{"callee_method_names":["Element.getAttribute","SiftsResidue.setNaturalPos","Element.getAttribute","SiftsResidue.setSeqResName","List<String>.contains","SiftsResidue.setNotObserved","Element.getElementsByTagName","NodeList.getLength","NodeList.getLength","NodeList.item","Element.getAttribute","Element.getAttribute","Element.getAttribute","Element.getAttribute","Element.getAttribute","Element.getAttribute","SiftsResidue.setPdbResNum","SiftsResidue.setPdbResName","SiftsResidue.setChainId","SiftsResidue.setPdbId","SiftsResidue.setUniProtPos","SiftsResidue.setUniProtResName","SiftsResidue.setUniProtAccessionId"],"method_name":"SiftsXMLParser.getResidue","method_implementation":"{\n    SiftsResidue res = new SiftsResidue();\n    String dbResNumS = residue.getAttribute(\"dbResNum\");\n    res.setNaturalPos(Integer.parseInt(dbResNumS));\n    String seqResName = residue.getAttribute(\"dbResName\");\n    res.setSeqResName(seqResName);\n    boolean observed = true;\n    List<String> details = getTextValues(residue, \"residueDetail\");\n    if (details != null && details.contains(\"Not_Observed\")) {\n        observed = false;\n    }\n    res.setNotObserved(!observed);\n    //else if ( detail != null && detail.trim().equalsIgnoreCase(\"Conflict\")){\n    //\n    //}\n    NodeList nl = residue.getElementsByTagName(\"crossRefDb\");\n    if (nl != null && nl.getLength() > 0) {\n        for (int i = 0; i < nl.getLength(); i++) {\n            //get the entity element\n            Element crossRefEl = (Element) nl.item(i);\n            String dbSource = crossRefEl.getAttribute(\"dbSource\");\n            String dbCoordSys = crossRefEl.getAttribute(\"dbCoordSys\");\n            String dbAccessionId = crossRefEl.getAttribute(\"dbAccessionId\");\n            String dbResNum = crossRefEl.getAttribute(\"dbResNum\");\n            String dbResName = crossRefEl.getAttribute(\"dbResName\");\n            String dbChainId = crossRefEl.getAttribute(\"dbChainId\");\n            //\tSystem.out.println(dbSource + \" \" + dbCoordSys + \" \" + dbAccessionId + \" \" + dbResNum + \" \" + dbResName + \" \" + dbChainId);\n            if (\"PDB\".equals(dbSource) && \"PDBresnum\".equals(dbCoordSys)) {\n                res.setPdbResNum(dbResNum);\n                res.setPdbResName(dbResName);\n                res.setChainId(dbChainId);\n                res.setPdbId(dbAccessionId);\n            } else if (\"UniProt\".equals(dbSource)) {\n                res.setUniProtPos(Integer.parseInt(dbResNum));\n                res.setUniProtResName(dbResName);\n                res.setUniProtAccessionId(dbAccessionId);\n            }\n        }\n    }\n    return res;\n}","repo_id":"9","comment":"/**\n *   <residue dbResNum=\"1\" dbResName=\"THR\">\n * \t\t\t\t\t<crossRefDb dbSource=\"PDB\" dbVersion=\"20101103\"\n * \t\t\t\t\tdbCoordSys=\"PDBresnum\" dbAccessionId=\"1a4w\" dbResNum=\"1H\"\n * \t\t\t\t\tdbResName=\"THR\" dbChainId=\"L\"><\/crossRefDb>\n * \t\t\t\t\t<crossRefDb dbSource=\"UniProt\" dbVersion=\"157-2\"\n * \t\t\t\t\tdbCoordSys=\"UniProt\" dbAccessionId=\"P00734\"\n * \t\t\t\t\tdbResNum=\"328\" dbResName=\"T\"><\/crossRefDb>\n * \t\t\t\t\t<crossRefDb dbSource=\"SCOP\" dbVersion=\"1.75\"\n * \t\t\t\t\tdbCoordSys=\"PDBresnum\" dbAccessionId=\"26083\"\n * \t\t\t\t\tdbResNum=\"1H\" dbResName=\"THR\" dbChainId=\"L\"><\/crossRefDb>\n * \t\t\t\t\t<residueDetail dbSource=\"MSD\" property=\"Annotation\">\n * \t\t\t\t\tNot_Observed<\/residueDetail>\n * \t\t\t\t<\/residue>\n */\n","repo_name":"biojava-master/","id":1115,"method_signature":"SiftsResidue getResidue(Element)"}