{"callee_method_names":["Structure.isNmr","Structure.nrModels","Structure.getModel","List<Atom>.addAll","List<Atom>.toArray"],"method_name":"SymmetryTools.getRepresentativeAtoms","method_implementation":"{\n    if (structure.isNmr())\n        return StructureTools.getRepresentativeAtomArray(structure);\n    else {\n        // Get Atoms of all models\n        List<Atom> atomList = new ArrayList<Atom>();\n        for (int m = 0; m < structure.nrModels(); m++) {\n            for (Chain c : structure.getModel(m)) atomList.addAll(Arrays.asList(StructureTools.getRepresentativeAtomArray(c)));\n        }\n        return atomList.toArray(new Atom[0]);\n    }\n}","repo_id":"9","comment":"/**\n * Returns the representative Atom Array of the first model, if the\n * structure is NMR, or the Array for each model, if it is a biological\n * assembly with multiple models.\n *\n * @param structure\n * @return representative Atom[]\n */\n","repo_name":"biojava-master/","id":2050,"method_signature":"Atom[] getRepresentativeAtoms(Structure)"}