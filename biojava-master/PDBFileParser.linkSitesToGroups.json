{"callee_method_ids":[1334,1571],"callee_method_names":["Logger.info","Structure.getChains","LinkedHashMap.values","Logger.info","LinkedHashMap.keySet","LinkedHashMap.keySet","Logger.info","Logger.debug","LinkedHashMap.keySet","LinkedHashMap.keySet","LinkedHashMap.keySet","LinkedHashMap.get","LinkedHashMap.get","ResidueNumber.toString","ResidueNumber.getChainName","Structure.findGroup","Logger.info","Site.getGroups","LinkedHashMap.values","Structure.setSites"],"method_name":"PDBFileParser.linkSitesToGroups","method_implementation":"{\n    //System.out.println(\"LINK SITES TO GROUPS:\" + siteToResidueMap.keySet().size());\n    //link the map of siteIds : <ResidueNumber> with the sites by using ResidueNumber to get the correct group back.\n    //the return list\n    if (siteMap == null || siteToResidueMap == null) {\n        logger.info(\"Sites can not be linked to residues!\");\n        return;\n    }\n    List<Site> sites = null;\n    //check that there are chains with which to associate the groups\n    if (structure.getChains().isEmpty()) {\n        sites = new ArrayList<Site>(siteMap.values());\n        logger.info(\"No chains to link Site Groups with - Sites will not be present in the Structure\");\n        return;\n    }\n    //check that the keys in the siteMap and SiteToResidueMap are equal\n    if (!siteMap.keySet().equals(siteToResidueMap.keySet())) {\n        logger.info(\"Not all sites have been properly described in the PDB \" + pdbId + \" header - some Sites will not be present in the Structure\");\n        logger.debug(siteMap.keySet() + \" | \" + siteToResidueMap.keySet());\n        //return;\n    }\n    //so we have chains - associate the siteResidues-related groups with the ones\n    //already in in the chains\n    for (String key : siteMap.keySet()) {\n        Site currentSite = siteMap.get(key);\n        List<ResidueNumber> linkedGroups = siteToResidueMap.get(key);\n        if (linkedGroups == null)\n            continue;\n        for (ResidueNumber residueNumber : linkedGroups) {\n            String pdbCode = residueNumber.toString();\n            String chain = residueNumber.getChainName();\n            //                    System.out.println(\"chain: '\" + chain + \"'\");\n            //                    String resNum = resNum.getSeqNum().toString();\n            //                    System.out.println(\"resNum: '\" + resNum + \"'\");\n            Group linkedGroup = null;\n            try {\n                //TODO: implement findGroup(ResidueNumber resNum)\n                linkedGroup = structure.findGroup(chain, pdbCode);\n            } catch (StructureException ex) {\n                logger.info(\"Can't find group \" + pdbCode + \" in chain \" + chain + \" in order to link up SITE records (PDB ID \" + pdbId + \")\");\n                continue;\n            }\n            //                    System.out.println(\"Adding group: \" + linkedGroup.getSeqNum() + \" to site \" + site.getSiteID());\n            currentSite.getGroups().add(linkedGroup);\n        }\n    }\n    //System.out.println(\"SITEMAP: \" + siteMap);\n    sites = new ArrayList<Site>(siteMap.values());\n    structure.setSites(sites);\n    //System.out.println(\"STRUCTURE SITES: \" + structure.getSites().size());\n    //            for (Site site : structure.getSites()) {\n    //                System.out.println(site);\n    //            }\n    //            System.out.println(\"Linked Site Groups with Chains\");\n}","repo_id":"9","comment":"/**\n * Links the Sites in the siteMap to the Groups in the Structure via the\n * siteToResidueMap ResidueNumber.\n * @author Jules Jacobsen\n * @return\n */\n","repo_name":"biojava-master/","id":1200,"method_signature":"void linkSitesToGroups()"}