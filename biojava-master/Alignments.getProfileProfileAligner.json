{"callee_method_names":[],"method_name":"Alignments.getProfileProfileAligner","method_implementation":"{\n    switch(type) {\n        default:\n        case GLOBAL:\n            return new SimpleProfileProfileAligner<S, C>(profile1, profile2, gapPenalty, subMatrix);\n        case GLOBAL_LINEAR_SPACE:\n        case GLOBAL_CONSENSUS:\n        case LOCAL:\n        case LOCAL_LINEAR_SPACE:\n        case LOCAL_CONSENSUS:\n            // TODO other alignment options (Myers-Miller, consensus, local)\n            throw new UnsupportedOperationException(Alignments.class.getSimpleName() + \" does not yet support \" + type + \" alignment\");\n    }\n}","repo_id":"9","comment":"/**\n * Factory method which constructs a profile-profile aligner.\n *\n * @param <S> each {@link Sequence} of an alignment profile is of type S\n * @param <C> each element of an {@link AlignedSequence} is a {@link Compound} of type C\n * @param profile1 the first {@link Profile} to align\n * @param profile2 the second {@link Profile} to align\n * @param type chosen type from list of profile-profile alignment routines\n * @param gapPenalty the gap penalties used during alignment\n * @param subMatrix the set of substitution scores used during alignment\n * @return profile-profile aligner\n */\n","repo_name":"biojava-master/","id":49,"method_signature":"ProfileProfileAligner<S,C> getProfileProfileAligner(Future, Profile, ProfileProfileAlignerType, GapPenalty, SubstitutionMatrix)"}