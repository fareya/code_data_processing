{"callee_method_names":[],"method_name":"SymmetryTools.getResetVal","method_implementation":"{\n    if (Double.isNaN(unpenalizedScore))\n        // what else?\n        return 0;\n    // We can actually return a positive value if this is high enough\n    double updateVal = unpenalizedScore;\n    updateVal -= gradientExpCoeff * Math.pow(Math.E, -nResFromMainDiag);\n    for (int p = 0; p < gradientPolyCoeff.length; p++) {\n        updateVal -= gradientPolyCoeff[gradientPolyCoeff.length - 1 - p] * Math.pow(nResFromMainDiag, -p);\n    }\n    return updateVal;\n}","repo_id":"9","comment":"/**\n * Returns the \"reset value\" for graying out the main diagonal. If we're\n * blanking out the main diagonal, this value is always Integer.MIN_VALUE.\n * <p>\n * This is possible if {@code gradientPolyCoeff = Integer.MIN_VALUE} and\n * {@code gradientExpCoeff = 0}.\n *\n * @param unpenalizedScore\n * @param nResFromMainDiag\n * @param gradientPolyCoeff\n * @param gradientExpCoeff\n * @return\n */\n","repo_name":"biojava-master/","id":2037,"method_signature":"double getResetVal(double, double, double[], double)"}