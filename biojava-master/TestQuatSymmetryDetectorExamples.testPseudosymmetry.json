{"callee_method_ids":[1633,1929,1633,1929],"callee_method_names":["SubunitClustererParameters.setClustererMethod","QuatSymmetryResults.getSymmetry","QuatSymmetryResults.getStoichiometry","SubunitClustererParameters.setClustererMethod","QuatSymmetryResults.getSymmetry","QuatSymmetryResults.getStoichiometry","QuatSymmetryResults.isPseudoStoichiometric"],"method_name":"TestQuatSymmetryDetectorExamples.testPseudosymmetry","method_implementation":"{\n    Structure pdb = StructureIO.getStructure(\"BIO:4hhb:1\");\n    // Non-pseudosymmetry\n    SubunitClustererParameters clusterParams = new SubunitClustererParameters();\n    clusterParams.setClustererMethod(SubunitClustererMethod.SEQUENCE);\n    QuatSymmetryParameters symmParams = new QuatSymmetryParameters();\n    QuatSymmetryResults symmetry = QuatSymmetryDetector.calcGlobalSymmetry(pdb, symmParams, clusterParams);\n    // C2 symmetry\n    assertEquals(\"C2\", symmetry.getSymmetry());\n    assertEquals(\"A2B2\", symmetry.getStoichiometry().toString());\n    // Use pseudosymmetry (structural clustering)\n    clusterParams.setClustererMethod(SubunitClustererMethod.STRUCTURE);\n    symmetry = QuatSymmetryDetector.calcGlobalSymmetry(pdb, symmParams, clusterParams);\n    // D2 pseudo-symmetry\n    assertEquals(\"D2\", symmetry.getSymmetry());\n    assertEquals(\"A4\", symmetry.getStoichiometry().toString());\n    assertTrue(symmetry.isPseudoStoichiometric());\n}","repo_id":"9","comment":"/**\n * Hemoglobin has both symmetry and pseudosymmetry: 4HHB\n *\n * @throws StructureException\n * @throws IOException\n */\n","repo_name":"biojava-master/","id":185,"method_signature":"void testPseudosymmetry()"}