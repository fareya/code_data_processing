{"callee_method_names":[],"method_name":"AlignmentTools.getSymmetryOrder","method_implementation":"{\n    // alignment comes from the afpChain alignment\n    Map<Integer, Integer> alignment = AlignmentTools.alignmentAsMap(afpChain);\n    // Now construct identity to map aligned residues in sequential order\n    Map<Integer, Integer> identity = guessSequentialAlignment(alignment, true);\n    return AlignmentTools.getSymmetryOrder(alignment, identity, maxSymmetry, minimumMetricChange);\n}","repo_id":"9","comment":"/**\n * Guesses the order of symmetry in an alignment\n *\n * <p>Uses {@link #getSymmetryOrder(Map alignment, Map identity, int, float)}\n * to determine the the symmetry order. For the identity alignment, sorts\n * the aligned residues of each protein sequentially, then defines the ith\n * residues of each protein to be equivalent.\n *\n * <p>Note that the selection of the identity alignment here is <i>very<\/i>\n * naive, and only works for proteins with very good coverage. Wherever\n * possible, it is better to construct an identity function explicitly\n * from a sequence alignment (or use an {@link IdentityMap} for internally\n * symmetric proteins) and use {@link #getSymmetryOrder(Map, Map, int, float)}.\n */\n","repo_name":"biojava-master/","id":584,"method_signature":"int getSymmetryOrder(AFPChain, int, float)"}