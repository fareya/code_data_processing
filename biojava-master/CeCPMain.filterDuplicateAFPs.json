{"callee_method_names":[],"method_name":"CeCPMain.filterDuplicateAFPs","method_implementation":"{\n    return filterDuplicateAFPs(afpChain, ceCalc, ca1, ca2duplicated, null);\n}","repo_id":"9","comment":"/**\n * Takes as input an AFPChain where ca2 has been artificially duplicated.\n * This raises the possibility that some residues of ca2 will appear in\n * multiple AFPs. This method filters out duplicates and makes sure that\n * all AFPs are numbered relative to the original ca2.\n *\n * <p>The current version chooses a CP site such that the length of the\n * alignment is maximized.\n *\n * <p>This method does <i>not<\/i> update scores to reflect the filtered alignment.\n * It <i>does<\/i> update the RMSD and superposition.\n *\n * @param afpChain The alignment between ca1 and ca2-ca2. Blindly assumes\n *  that ca2 has been duplicated.\n * @return A new AFPChain consisting of ca1 to ca2, with each residue in\n *  at most 1 AFP.\n * @throws StructureException\n */\n","repo_name":"biojava-master/","id":778,"method_signature":"AFPChain filterDuplicateAFPs(AFPChain, CECalculator, Atom[], Atom[])"}