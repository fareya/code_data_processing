{"callee_method_names":["Structure.getPDBCode","Structure.getChainByIndex","Chain.getAtomGroups","Chain.getAtomGroups","Structure.getChainByIndex","Chain.getAtomGroups","Chain.getAtomGroups","Structure.getEntityInfos","List<EntityInfo>.size","List<EntityInfo>.get","EntityInfo.getDescription"],"method_name":"StructureTest.testReadPDBFile","method_implementation":"{\n    assertEquals(\"pdb code not set!\", \"5PTI\", structure.getPDBCode());\n    // since biojava 5.0, we have 4 chains here: 1 protein, 2 non-poly (ligands), 1 water\n    Chain c = structure.getChainByIndex(0);\n    assertEquals(\"did not find the expected 58 amino acids!\", 58, c.getAtomGroups(GroupType.AMINOACID).size());\n    assertEquals(0, c.getAtomGroups(GroupType.HETATM).size());\n    Chain c4 = structure.getChainByIndex(3);\n    // The fourth chain in the file contains 63 molecules of deutarated\n    assertEquals(63, c4.getAtomGroups(GroupType.HETATM).size());\n    assertEquals(0, c4.getAtomGroups(GroupType.NUCLEOTIDE).size());\n    List<EntityInfo> compounds = structure.getEntityInfos();\n    assertEquals(4, compounds.size());\n    EntityInfo mol = compounds.get(0);\n    assertTrue(mol.getDescription().startsWith(\"TRYPSIN INHIBITOR\"));\n}","repo_id":"9","comment":"/**\n * Tests if a PDB file can be parsed\n * @throws Exception\n */\n","repo_name":"biojava-master/","id":170,"method_signature":"void testReadPDBFile()"}