{"callee_method_names":["Structure.getChains","List<Atom>.addAll","List<Atom>.toArray"],"method_name":"StructureTools.getRepresentativeAtomArray","method_implementation":"{\n    List<Atom> atoms = new ArrayList<>();\n    for (Chain c : s.getChains()) {\n        Atom[] chainAtoms = getRepresentativeAtomArray(c);\n        atoms.addAll(Arrays.asList(chainAtoms));\n    }\n    return atoms.toArray(new Atom[0]);\n}","repo_id":"9","comment":"/**\n * Gets a representative atom for each group that is part of the chain\n * backbone. Note that modified aminoacids won't be returned as part of the\n * backbone if the {@link org.biojava.nbio.structure.chem.ReducedChemCompProvider} was used to load the\n * structure.\n *\n * For amino acids, the representative is a CA carbon. For nucleotides, the\n * representative is the {@value #NUCLEOTIDE_REPRESENTATIVE}. Other group\n * types will be ignored.\n *\n * @param s\n *            Input structure\n * @return representative Atoms of the structure backbone\n * @since Biojava 4.1.0\n */\n","repo_name":"biojava-master/","id":1040,"method_signature":"Atom[] getRepresentativeAtomArray(Structure)"}