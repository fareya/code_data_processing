{"callee_method_ids":[1351,1370],"callee_method_names":["StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","StringBuilder.append","Chain.getAtomGroups","Chain.getAtomGroups","Chain.getAtomGroups","StringBuilder.append","Chain.getId","Chain.getName","Chain.getEntityInfo","Chain.getEntityInfo","EntityInfo.getDescription","StringBuilder.append","EntityInfo.getType","StringBuilder.append","StringBuilder.append","StringBuilder.append","Chain.getSeqResLength","StringBuilder.append","Chain.getAtomLength","StringBuilder.append","List<Group>.size","StringBuilder.append","List<Group>.size","StringBuilder.append","List<Group>.size","StringBuilder.append","List<DBRef>.size","StringBuilder.append","DBRef.toPDB","StringBuilder.append","StringBuilder.append","StringBuilder.toString"],"method_name":"StructureImpl.toString","method_implementation":"{\n    String newline = System.getProperty(\"line.separator\");\n    StringBuilder str = new StringBuilder();\n    str.append(\"structure \");\n    str.append(name);\n    str.append(\" \");\n    str.append(pdbId);\n    str.append(\" \");\n    if (nrModels() > 1) {\n        str.append(\" models: \");\n        str.append(nrModels());\n        str.append(newline);\n    }\n    str.append(pdbHeader);\n    str.append(newline);\n    for (int i = 0; i < nrModels(); i++) {\n        if (nrModels() > 1) {\n            str.append(\" model[\");\n            str.append(i);\n            str.append(\"]:\");\n            str.append(newline);\n        }\n        str.append(\" chains:\");\n        str.append(newline);\n        for (int j = 0; j < size(i); j++) {\n            Chain cha = getChainByIndex(i, j);\n            List<Group> agr = cha.getAtomGroups(GroupType.AMINOACID);\n            List<Group> hgr = cha.getAtomGroups(GroupType.HETATM);\n            List<Group> ngr = cha.getAtomGroups(GroupType.NUCLEOTIDE);\n            str.append(\"chain \").append(j).append(\": asymId:\").append(cha.getId()).append(\" authId:\").append(cha.getName()).append(\" \");\n            if (cha.getEntityInfo() != null) {\n                EntityInfo comp = cha.getEntityInfo();\n                String molName = comp.getDescription();\n                if (molName != null) {\n                    str.append(molName);\n                }\n                String type = comp.getType().toString();\n                str.append(\" (\").append(type).append(\")\");\n            }\n            str.append(newline);\n            str.append(\" length SEQRES: \").append(cha.getSeqResLength());\n            str.append(\" length ATOM: \").append(cha.getAtomLength());\n            str.append(\" aminos: \").append(agr.size());\n            str.append(\" hetatms: \").append(hgr.size());\n            str.append(\" nucleotides: \").append(ngr.size()).append(newline);\n        }\n    }\n    str.append(\"DBRefs: \").append(dbrefs.size()).append(newline);\n    for (DBRef dbref : dbrefs) {\n        str.append(dbref.toPDB()).append(newline);\n    }\n    str.append(\"Molecules: \").append(newline);\n    for (EntityInfo mol : entityInfos) {\n        str.append(mol).append(newline);\n    }\n    return str.toString();\n}","repo_id":"9","comment":"/**\n * String representation.\n */\n","repo_name":"biojava-master/","id":2128,"method_signature":"String toString()"}