{"callee_method_names":["ColorSpace.getNumComponents","ColorSpace.getNumComponents"],"method_name":"LinearColorInterpolator.setColorSpace","method_implementation":"{\n    if (dir.length < colorSpace.getNumComponents()) {\n        throw new IllegalArgumentException(\"Must specify an interpolation \" + \"direction for each colorspace component (\" + colorSpace.getNumComponents() + \")\");\n    }\n    this.colorSpace = colorSpace;\n    this.interpolationDirection = dir;\n}","repo_id":"9","comment":"/**\n * Sets the ColorSpace to use for interpolation.\n *\n * The most common scheme for color spaces is to use linear components\n * between 0 and 1 (for instance red,green,blue). For such a component, a\n * linear interpolation between two colors is used.\n *\n * Sometimes a component may be in cylindrical coordinates. In this case,\n * the component can be mapped in a number of ways. These are set by\n * InterpolationDirections.\n *\n * @param colorSpace The color space for interpolation\n * @param interpDirection An array of size colorSpace.getNumComponents()\n * \t\tgiving the interpolation direction for each component.\n */\n","repo_name":"biojava-master/","id":3370,"method_signature":"void setColorSpace(ColorSpace, InterpolationDirection[])"}