{"callee_method_names":["Map<String, List<ScopDomain>>.keySet","Map<String, List<ScopDomain>>.get","double[].getPx","List<ScopDomain>.add","double[].clone","double[].getSpeciesId","List<ScopDomain>.add","double[].clone","double[].getDomainId","List<ScopDomain>.add","double[].clone","double[].getFamilyId","List<ScopDomain>.add","double[].clone","double[].getSuperfamilyId","List<ScopDomain>.add","double[].clone","double[].getFoldId","List<ScopDomain>.add","double[].clone","double[].getClassId","List<ScopDomain>.add","double[].clone"],"method_name":"ScopInstallation.getScopDomainsBySunid","method_implementation":"{\n    try {\n        ensureClaInstalled();\n    } catch (IOException e) {\n        throw new ScopIOException(e);\n    }\n    List<ScopDomain> domains = new ArrayList<ScopDomain>();\n    for (String pdbId : domainMap.keySet()) {\n        for (ScopDomain d : domainMap.get(pdbId)) {\n            try {\n                if (d.getPx() == sunid) {\n                    domains.add((ScopDomain) d.clone());\n                } else if (d.getSpeciesId() == sunid) {\n                    domains.add((ScopDomain) d.clone());\n                } else if (d.getDomainId() == sunid) {\n                    domains.add((ScopDomain) d.clone());\n                } else if (d.getFamilyId() == sunid) {\n                    domains.add((ScopDomain) d.clone());\n                } else if (d.getSuperfamilyId() == sunid) {\n                    domains.add((ScopDomain) d.clone());\n                } else if (d.getFoldId() == sunid) {\n                    domains.add((ScopDomain) d.clone());\n                } else if (d.getClassId() == sunid) {\n                    domains.add((ScopDomain) d.clone());\n                } else {\n                    // only possible if SCOP changes\n                    throw new RuntimeException(\"Type \" + d + \" not recognized\");\n                }\n            } catch (CloneNotSupportedException e) {\n                throw new RuntimeException(ScopDomain.class + \" subclass does not support clone()\", e);\n            }\n        }\n    }\n    return domains;\n}","repo_id":"9","comment":"/* (non-Javadoc)\n\t * @see org.biojava.nbio.structure.scop.ScopDatabase#getScopDomainsBySunid(java.lang.Integer)\n\t */\n","repo_name":"biojava-master/","id":1554,"method_signature":"List<ScopDomain> getScopDomainsBySunid(Integer)"}