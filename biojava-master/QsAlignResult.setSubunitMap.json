{"callee_method_names":["Map<Integer,Integer>.keySet","List<Subunit>.size","Map<Integer,Integer>.values","List<Subunit>.size","Map<Integer,Integer>.size","Map<Integer,Integer>.keySet","List<Subunit>.size","Map<Integer,Integer>.values","List<Subunit>.size","Map<Integer,Integer>.values","List<Subunit>.size"],"method_name":"QsAlignResult.setSubunitMap","method_implementation":"{\n    // Check consistency of the map\n    if (Collections.max(subunitMap.keySet()) > subunits1.size() | Collections.max(subunitMap.values()) > subunits2.size())\n        throw new IndexOutOfBoundsException(\"Subunit Map index higher than Subunit List size.\");\n    // Update the relation enum\n    if (subunitMap.size() == 0) {\n        relation = QsRelation.DIFFERENT;\n    } else if (subunitMap.keySet().size() == subunits1.size()) {\n        if (subunitMap.values().size() == subunits2.size()) {\n            relation = QsRelation.EQUIVALENT;\n        } else {\n            relation = QsRelation.PARTIAL_COMPLETE;\n        }\n    } else {\n        if (subunitMap.values().size() == subunits2.size()) {\n            relation = QsRelation.PARTIAL_COMPLETE;\n        } else {\n            relation = QsRelation.PARTIAL_INCOMPLETE;\n        }\n    }\n    this.subunitMap = subunitMap;\n}","repo_id":"9","comment":"/**\n * Map of Subunit equivalencies from the first to the second group.\n *\n * @param subunitMap\n */\n","repo_name":"biojava-master/","id":448,"method_signature":"void setSubunitMap(Map)"}