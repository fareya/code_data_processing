{"callee_method_names":["List<Integer>.size","List<Integer>.get","List<Integer>.get"],"method_name":"ChromosomeMappingTools.getCDSLengthReverse","method_implementation":"{\n    int codingLength = 0;\n    if (cdsEnd < cdsStart) {\n        int tmp = cdsEnd;\n        cdsEnd = cdsStart;\n        cdsStart = tmp;\n    }\n    cdsStart = cdsStart + base;\n    // map reverse\n    for (int i = exonStarts.size() - 1; i >= 0; i--) {\n        int end = exonStarts.get(i);\n        int start = exonEnds.get(i);\n        if (end < start) {\n            int tmp = end;\n            end = start;\n            start = tmp;\n        }\n        start = start + base;\n        if ((start < cdsStart && end < cdsStart) || (start > cdsEnd && end > cdsEnd))\n            continue;\n        if (start < cdsStart)\n            start = cdsStart;\n        if (end > cdsEnd)\n            end = cdsEnd;\n        codingLength += (end - start + 1);\n    }\n    return codingLength - 3;\n}","repo_id":"9","comment":"/**\n * Get the length of the coding sequence\n *\n * @param exonStarts\n * @param exonEnds\n * @param cdsStart\n * @param cdsEnd\n * @return\n */\n","repo_name":"biojava-master/","id":2483,"method_signature":"int getCDSLengthReverse(List, List, int, int)"}