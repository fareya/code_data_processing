{"callee_method_names":["List<FeatureInterface<AbstractSequence<C>, C>>.add","LinkedHashMap.get","FeatureInterface<AbstractSequence<C>,C>.getType","LinkedHashMap.put","FeatureInterface<AbstractSequence<C>,C>.getType","ArrayList<FeatureInterface<AbstractSequence<C>, C>>.add"],"method_name":"AbstractSequence.addFeature","method_implementation":"{\n    features.add(feature);\n    ArrayList<FeatureInterface<AbstractSequence<C>, C>> featureList = groupedFeatures.get(feature.getType());\n    if (featureList == null) {\n        featureList = new ArrayList<FeatureInterface<AbstractSequence<C>, C>>();\n        groupedFeatures.put(feature.getType(), featureList);\n    }\n    featureList.add(feature);\n    Collections.sort(features, AbstractFeature.LOCATION_LENGTH);\n    Collections.sort(featureList, AbstractFeature.LOCATION_LENGTH);\n}","repo_id":"9","comment":"/**\n * Add a feature to this sequence. The feature will be added to the collection where the order is start position and if more than\n * one feature at the same start position then longest is added first. This helps on doing feature layout for displaying features\n * in SequenceFeaturePanel\n * @param feature\n */\n","repo_name":"biojava-master/","id":2927,"method_signature":"void addFeature(FeatureInterface)"}