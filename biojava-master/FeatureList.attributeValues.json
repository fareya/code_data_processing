{"callee_method_names":["HashMap.containsKey","HashMap.get","Map<String, List<FeatureI>>.keySet","LinkedHashMap<String, String>.put","FeatureI.getAttribute","LinkedHashMap<String, String>.keySet"],"method_name":"FeatureList.attributeValues","method_implementation":"{\n    if (featindex.containsKey(key)) {\n        Map<String, List<FeatureI>> map = featindex.get(key);\n        Collection<String> result = map.keySet();\n        if (result == null)\n            result = new HashSet<String>();\n        return Collections.unmodifiableCollection(result);\n    }\n    LinkedHashMap<String, String> hash = new LinkedHashMap<String, String>();\n    for (FeatureI f : this) {\n        //enter as a key -- removes duplicates\n        hash.put(f.getAttribute(key), null);\n    }\n    return Collections.unmodifiableCollection(hash.keySet());\n}","repo_id":"9","comment":"/**\n * Create a collection of the unique values for the specified key.\n * Example: For GTF files, using the \"gene_id\" key will give the names of all\n * the genes in this list.\n *\n * @return A collection (suitable for iteration using Java's \"for\" loop) of all the\n * values found for this key. The order of the values is undefined; it will not match\n * the order of features in the list.\n */\n","repo_name":"biojava-master/","id":2436,"method_signature":"Collection<String> attributeValues(String)"}