{"callee_method_names":["MultipleAlignment.size","MultipleAlignment.size","MultipleAlignment.size","MultipleAlignment.size","Matrix.set","List<Atom[]>.add","List<Atom[]>.get","List<Atom[]>.add","List<Atom[]>.get","Matrix.set","Matrix.set"],"method_name":"MultipleAlignmentTools.getRMSDMatrix","method_implementation":"{\n    Matrix rmsdMat = new Matrix(msa.size(), msa.size());\n    List<Atom[]> superposed = transformAtoms(msa);\n    for (int i = 0; i < msa.size(); i++) {\n        for (int j = i; j < msa.size(); j++) {\n            if (i == j)\n                rmsdMat.set(i, j, 0.0);\n            List<Atom[]> compared = new ArrayList<Atom[]>();\n            compared.add(superposed.get(i));\n            compared.add(superposed.get(j));\n            double rmsd = MultipleAlignmentScorer.getRMSD(compared);\n            rmsdMat.set(i, j, rmsd);\n            rmsdMat.set(j, i, rmsd);\n        }\n    }\n    return rmsdMat;\n}","repo_id":"9","comment":"/**\n * Calculate the RMSD matrix of a MultipleAlignment, that is, entry (i,j) of\n * the matrix contains the RMSD between structures i and j.\n *\n * @param msa\n *            Multiple Structure Alignment\n * @return Matrix of RMSD with size the number of structures squared\n */\n","repo_name":"biojava-master/","id":666,"method_signature":"Matrix getRMSDMatrix(MultipleAlignment)"}