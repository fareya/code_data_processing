{"callee_method_ids":[1317],"callee_method_names":["FileParsingParameters.isHeaderOnly","String.length","Logger.info","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","String.substring","Map<String, String>.put","Map<String, String>.put","Map<String, String>.put","Map<String, String>.put","Map<String, String>.put","Map<String, String>.put","Map<String, String>.put","Map<String, String>.put","List<Map<String, String>>.add"],"method_name":"PDBFileParser.pdb_TURN_Handler","method_implementation":"{\n    if (params.isHeaderOnly())\n        return;\n    if (line.length() < 36) {\n        logger.info(\"TURN line has length under 36. Ignoring it.\");\n        return;\n    }\n    String initResName = line.substring(15, 18).trim();\n    String initChainId = line.substring(19, 20);\n    String initSeqNum = line.substring(20, 24).trim();\n    String initICode = line.substring(24, 25);\n    String endResName = line.substring(26, 29).trim();\n    String endChainId = line.substring(30, 31);\n    String endSeqNum = line.substring(31, 35).trim();\n    String endICode = line.substring(35, 36);\n    //System.out.println(initResName + \" \" + initChainId + \" \" + initSeqNum + \" \" + initICode + \" \" +\n    //        endResName + \" \" + endChainId + \" \" + endSeqNum + \" \" + endICode);\n    Map<String, String> m = new HashMap<String, String>();\n    m.put(\"initResName\", initResName);\n    m.put(\"initChainId\", initChainId);\n    m.put(\"initSeqNum\", initSeqNum);\n    m.put(\"initICode\", initICode);\n    m.put(\"endResName\", endResName);\n    m.put(\"endChainId\", endChainId);\n    m.put(\"endSeqNum\", endSeqNum);\n    m.put(\"endICode\", endICode);\n    turnList.add(m);\n}","repo_id":"9","comment":"/**\n * Handler for TURN lines\n * <pre>\n * COLUMNS      DATA TYPE        FIELD         DEFINITION\n * --------------------------------------------------------------------\n *  1 -  6      Record name      \"TURN \"\n *  8 - 10      Integer          seq           Turn number; starts with 1 and\n *                                             increments by one.\n * 12 - 14      LString(3)       turnId        Turn identifier\n * 16 - 18      Residue name     initResName   Residue name of initial residue in\n *                                             turn.\n * 20           Character        initChainId   Chain identifier for the chain\n *                                             containing this turn.\n * 21 - 24      Integer          initSeqNum    Sequence number of initial residue\n *                                             in turn.\n * 25           AChar            initICode     Insertion code of initial residue\n *                                             in turn.\n * 27 - 29      Residue name     endResName    Residue name of terminal residue\n *                                             of turn.\n * 31           Character        endChainId    Chain identifier for the chain\n *                                             containing this turn.\n * 32 - 35      Integer          endSeqNum     Sequence number of terminal\n *                                             residue of turn.\n * 36           AChar            endICode      Insertion code of terminal residue\n *                                             of turn.\n * 41 - 70      String           comment       Associated comment.\n * <\/pre>\n * @param line\n */\n","repo_name":"biojava-master/","id":1166,"method_signature":"void pdb_TURN_Handler(String)"}