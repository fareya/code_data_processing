{"callee_method_names":["List<Location>.size","List<Location>.get"],"method_name":"InsdcParser.parse","method_implementation":"{\n    featureGlobalStart = Integer.MAX_VALUE;\n    featureGlobalEnd = 1;\n    Location l;\n    List<Location> ll = parseLocationString(locationString, 1);\n    if (ll.size() == 1) {\n        l = ll.get(0);\n    } else {\n        l = new SimpleLocation(new SimplePoint(featureGlobalStart), new SimplePoint(featureGlobalEnd), Strand.UNDEFINED, isSequenceCircular, ll);\n    }\n    return l;\n}","repo_id":"9","comment":"/**\n * Main method for parsing a location from a String instance\n *\n * @param locationString Represents a logical location\n * @return The parsed location\n * @throws ParserException thrown in the event of any error during parsing\n */\n","repo_name":"biojava-master/","id":3022,"method_signature":"Location parse(String)"}