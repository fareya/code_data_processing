{"callee_method_ids":[2372,2373,2372],"callee_method_names":["Fastq.getQuality","Fastq.getVariant","Fastq.getQuality","FastqVariant.errorProbability"],"method_name":"FastqTools.errorProbabilities","method_implementation":"{\n    if (fastq == null) {\n        throw new IllegalArgumentException(\"fastq must not be null\");\n    }\n    if (errorProbabilities == null) {\n        throw new IllegalArgumentException(\"errorProbabilities must not be null\");\n    }\n    int size = fastq.getQuality().length();\n    if (errorProbabilities.length != size) {\n        throw new IllegalArgumentException(\"errorProbabilities must be the same length as the FASTQ formatted sequence quality\");\n    }\n    FastqVariant variant = fastq.getVariant();\n    for (int i = 0; i < size; i++) {\n        char c = fastq.getQuality().charAt(i);\n        errorProbabilities[i] = variant.errorProbability(c);\n    }\n    return errorProbabilities;\n}","repo_id":"9","comment":"/**\n * Copy the error probabilities from the specified FASTQ formatted sequence into the specified double array.\n *\n * @param fastq FASTQ formatted sequence, must not be null\n * @param errorProbabilities double array of error probabilities, must not be null and must be the same\n *    length as the FASTQ formatted sequence quality\n * @return the specified double array of error probabilities\n */\n","repo_name":"biojava-master/","id":2366,"method_signature":"double[] errorProbabilities(Fastq, double[])"}